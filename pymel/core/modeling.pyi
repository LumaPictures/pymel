import pymel.core.general as _general
import pymel.util as _util
from typing import Any, Callable, List, Optional, Tuple, Union, overload

def pointPosition(*args, local: bool | int = ..., l: bool | int = ..., world: bool | int = ..., w: bool | int = ...) -> _general.datatypes.Point: ...
def curve(*args, append: bool | int = ..., a: bool | int = ..., bezier: bool | int = ..., bez: bool | int = ..., degree: float = ..., d: float = ..., editPoint: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., ep: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., knot: float | List[float] = ..., k: float | List[float] = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., objectSpace: bool | int = ..., os: bool | int = ..., periodic: bool | int = ..., per: bool | int = ..., point: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., p: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., pointWeight: Tuple[float, float, float, float] | List[Tuple[float, float, float, float]] = ..., pw: Tuple[float, float, float, float] | List[Tuple[float, float, float, float]] = ..., replace: bool | int = ..., r: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...
def surface(*args, degreeU: int = ..., du: int = ..., degreeV: int = ..., dv: int = ..., formU: _util.ProxyUnicode | str = ..., fu: _util.ProxyUnicode | str = ..., formV: _util.ProxyUnicode | str = ..., fv: _util.ProxyUnicode | str = ..., knotU: float | List[float] = ..., ku: float | List[float] = ..., knotV: float | List[float] = ..., kv: float | List[float] = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., objectSpace: bool | int = ..., ob: bool | int = ..., point: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., p: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., pointWeight: Tuple[float, float, float, float] | List[Tuple[float, float, float, float]] = ..., pw: Tuple[float, float, float, float] | List[Tuple[float, float, float, float]] = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def addMetadata(*args, channelName: bool | int | _util.ProxyUnicode | str = ..., cn: bool | int | _util.ProxyUnicode | str = ..., channelType: bool | int | _util.ProxyUnicode | str = ..., cht: bool | int | _util.ProxyUnicode | str = ..., indexType: bool | int | _util.ProxyUnicode | str = ..., idt: bool | int | _util.ProxyUnicode | str = ..., query: bool | int = ..., q: bool | int = ..., scene: bool | int = ..., scn: bool | int = ..., streamName: bool | int | _util.ProxyUnicode | str = ..., stn: bool | int | _util.ProxyUnicode | str = ..., structure: bool | int | _util.ProxyUnicode | str = ..., str: bool | int | _util.ProxyUnicode | str = ...) -> Any: ...

def alignCurve(*args, attach: bool | int = ..., at: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curvatureContinuity: bool | int = ..., cc: bool | int = ..., curvatureScale1: bool | int | float = ..., cs1: bool | int | float = ..., curvatureScale2: bool | int | float = ..., cs2: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., joinParameter: bool | int | float = ..., jnp: bool | int | float = ..., keepMultipleKnots: bool | int = ..., kmk: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., positionalContinuity: bool | int = ..., pc: bool | int = ..., positionalContinuityType: bool | int | int = ..., pct: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., reverse1: bool | int = ..., rv1: bool | int = ..., reverse2: bool | int = ..., rv2: bool | int = ..., tangentContinuity: bool | int = ..., tc: bool | int = ..., tangentContinuityType: bool | int | int = ..., tct: bool | int | int = ..., tangentScale1: bool | int | float = ..., ts1: bool | int | float = ..., tangentScale2: bool | int | float = ..., ts2: bool | int | float = ...): ...
def alignSurface(*args, attach: bool | int = ..., at: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curvatureContinuity: bool | int = ..., cc: bool | int = ..., curvatureScale1: bool | int | float = ..., cs1: bool | int | float = ..., curvatureScale2: bool | int | float = ..., cs2: bool | int | float = ..., directionU: bool | int = ..., du: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., joinParameter: bool | int | float = ..., jnp: bool | int | float = ..., keepMultipleKnots: bool | int = ..., kmk: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., positionalContinuity: bool | int = ..., pc: bool | int = ..., positionalContinuityType: bool | int | int = ..., pct: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., reverse1: bool | int = ..., rv1: bool | int = ..., reverse2: bool | int = ..., rv2: bool | int = ..., swap1: bool | int = ..., sw1: bool | int = ..., swap2: bool | int = ..., sw2: bool | int = ..., tangentContinuity: bool | int = ..., tc: bool | int = ..., tangentContinuityType: bool | int | int = ..., tct: bool | int | int = ..., tangentScale1: bool | int | float = ..., ts1: bool | int | float = ..., tangentScale2: bool | int | float = ..., ts2: bool | int | float = ..., twist: bool | int = ..., tw: bool | int = ...): ...
def angleBetween(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., euler: bool | int = ..., er: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: int = ..., nds: int = ..., vector1: Tuple[float, float, float] = ..., v1: Tuple[float, float, float] = ..., vector1X: float = ..., v1x: float = ..., vector1Y: float = ..., v1y: float = ..., vector1Z: float = ..., v1z: float = ..., vector2: Tuple[float, float, float] = ..., v2: Tuple[float, float, float] = ..., vector2X: float = ..., v2x: float = ..., vector2Y: float = ..., v2y: float = ..., vector2Z: float = ..., v2z: float = ...): ...

def applyMetadata(*args, format: _util.ProxyUnicode | str = ..., fmt: _util.ProxyUnicode | str = ..., scene: bool | int = ..., scn: bool | int = ..., value: _util.ProxyUnicode | str = ..., v: _util.ProxyUnicode | str = ...) -> Any: ...

def arcLengthDimension(*args): ...
def arclen(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...

def arubaNurbsToPoly(*args, adaptive: bool | int = ..., adp: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., chordalDeviation: float = ..., cd: float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., localSpace: bool | int = ..., ls: bool | int = ..., maxChordLength: float = ..., mcl: float = ..., minChordLength: float = ..., icl: float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalTolerance: float = ..., ntl: float = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sampleType: int = ..., st: int = ..., samples: int = ..., smp: int = ..., tolerance: float = ..., tol: float = ..., useSurfaceShader: bool | int = ..., uss: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...

def attachCurve(*args, blendBias: bool | int | float = ..., bb: bool | int | float = ..., blendKnotInsertion: bool | int = ..., bki: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepMultipleKnots: bool | int = ..., kmk: bool | int = ..., method: bool | int | int = ..., m: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float = ..., p: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., reverse1: bool | int = ..., rv1: bool | int = ..., reverse2: bool | int = ..., rv2: bool | int = ...): ...
def attachSurface(*args, blendBias: bool | int | float = ..., bb: bool | int | float = ..., blendKnotInsertion: bool | int = ..., bki: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., directionU: bool | int = ..., du: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepMultipleKnots: bool | int = ..., kmk: bool | int = ..., method: bool | int | int = ..., m: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float = ..., p: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., reverse1: bool | int = ..., rv1: bool | int = ..., reverse2: bool | int = ..., rv2: bool | int = ..., swap1: bool | int = ..., sw1: bool | int = ..., swap2: bool | int = ..., sw2: bool | int = ..., twist: bool | int = ..., tw: bool | int = ...): ...
def bevel(*args, bevelShapeType: bool | int | int = ..., bst: bool | int | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., cornerType: bool | int | int = ..., ct: bool | int | int = ..., depth: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., extrudeDepth: bool | int | float = ..., ed: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., joinSurfaces: bool | int = ..., js: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberOfSides: bool | int | int = ..., ns: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., width: bool | int | float = ..., w: bool | int | float = ...): ...
def bevelPlus(*args, bevelInside: bool | int = ..., bin: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., capSides: bool | int | int = ..., cap: bool | int | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., depth: float = ..., d: float = ..., edit: bool | int = ..., e: bool | int = ..., extrudeDepth: float = ..., ed: float = ..., frozen: bool | int = ..., fzn: bool | int = ..., innerStyle: bool | int | int = ..., joinSurfaces: bool | int = ..., js: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: int = ..., nds: int = ..., normalsOutwards: bool | int = ..., no: bool | int = ..., numberOfSides: bool | int | int = ..., ns: bool | int | int = ..., outerStyle: bool | int | int = ..., os: bool | int | int = ..., polyOutChordHeight: float = ..., cht: float = ..., polyOutChordHeightRatio: float = ..., chr: float = ..., polyOutCount: int = ..., poc: int = ..., polyOutCurveSamples: int = ..., pcs: int = ..., polyOutCurveType: int = ..., pct: int = ..., polyOutExtrusionSamples: int = ..., pes: int = ..., polyOutExtrusionType: int = ..., pet: int = ..., polyOutMethod: int = ..., pom: int = ..., polyOutUseChordHeight: bool | int = ..., uch: bool | int = ..., polyOutUseChordHeightRatio: bool | int = ..., ucr: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., tolerance: float = ..., tol: float = ..., width: float = ..., w: float = ...): ...

def bezierAnchorPreset(*args, preset: int = ..., p: int = ...) -> Any: ...
def bezierAnchorState(*args, even: bool | int = ..., ev: bool | int = ..., smooth: bool | int = ..., sm: bool | int = ...) -> Any: ...

def bezierCurveToNurbs(*args): ...

def bezierInfo(*args, anchorFromCV: int = ..., afc: int = ..., cvFromAnchor: int = ..., cfa: int = ..., isAnchorSelected: bool | int = ..., ias: bool | int = ..., isTangentSelected: bool | int = ..., its: bool | int = ..., onlyAnchorsSelected: bool | int = ..., oas: bool | int = ..., onlyTangentsSelected: bool | int = ..., ots: bool | int = ...) -> Any: ...
def blend2(*args, autoAnchor: bool | int = ..., aa: bool | int = ..., autoNormal: bool | int = ..., an: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., crvsInFirstRail: bool | int | int = ..., cfr: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., flipLeftNormal: bool | int = ..., fln: bool | int = ..., flipRightNormal: bool | int = ..., frn: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., leftAnchor: bool | int | float = ..., la: bool | int | float = ..., leftEnd: bool | int | float = ..., le: bool | int | float = ..., leftStart: bool | int | float = ..., ls: bool | int | float = ..., multipleKnots: bool | int = ..., mk: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., positionTolerance: bool | int | float = ..., pt: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., reverseLeft: bool | int = ..., rvl: bool | int = ..., reverseRight: bool | int = ..., rvr: bool | int = ..., rightAnchor: bool | int | float = ..., ra: bool | int | float = ..., rightEnd: bool | int | float = ..., re: bool | int | float = ..., rightStart: bool | int | float = ..., rs: bool | int | float = ..., tangentTolerance: bool | int | float = ..., tt: bool | int | float = ...) -> Any: ...
def blindDataType(*args, dataType: str | List[str] = ..., dt: str | List[str] = ..., longDataName: str | List[str] = ..., ldn: str | List[str] = ..., longNames: bool | int = ..., ln: bool | int = ..., query: bool | int = ..., q: bool | int = ..., shortDataName: str | List[str] = ..., sdn: str | List[str] = ..., shortNames: bool | int = ..., sn: bool | int = ..., typeId: int = ..., id: int = ..., typeNames: bool | int = ..., tn: bool | int = ...) -> Any: ...

def boundary(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endPoint: bool | int = ..., ep: bool | int = ..., endPointTolerance: bool | int | float = ..., ept: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., order: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ...): ...

def canCreateManip(*args) -> Any: ...
def changeSubdivComponentDisplayLevel(*args, level: bool | int | int = ..., l: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ...) -> Any: ...
def changeSubdivRegion(*args, action: int = ..., a: int = ..., level: int = ..., l: int = ...) -> Any: ...

def circle(*args, caching: bool | int = ..., cch: bool | int = ..., center: bool | int | Tuple[float, float, float] = ..., c: bool | int | Tuple[float, float, float] = ..., centerX: bool | int | float = ..., cx: bool | int | float = ..., centerY: bool | int | float = ..., cy: bool | int | float = ..., centerZ: bool | int | float = ..., cz: bool | int | float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., first: bool | int | Tuple[float, float, float] = ..., fp: bool | int | Tuple[float, float, float] = ..., firstPointX: bool | int | float = ..., fpx: bool | int | float = ..., firstPointY: bool | int | float = ..., fpy: bool | int | float = ..., firstPointZ: bool | int | float = ..., fpz: bool | int | float = ..., fixCenter: bool | int = ..., fc: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normal: bool | int | Tuple[float, float, float] = ..., nr: bool | int | Tuple[float, float, float] = ..., normalX: bool | int | float = ..., nrx: bool | int | float = ..., normalY: bool | int | float = ..., nry: bool | int | float = ..., normalZ: bool | int | float = ..., nrz: bool | int | float = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sections: bool | int | int = ..., s: bool | int | int = ..., sweep: bool | int | float = ..., sw: bool | int | float = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useTolerance: bool | int = ..., ut: bool | int = ...): ...

def circularFillet(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., positionTolerance: bool | int | float = ..., pt: bool | int | float = ..., primaryRadius: bool | int | float = ..., pr: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., secondaryRadius: bool | int | float = ..., sr: bool | int | float = ..., tangentTolerance: bool | int | float = ..., tt: bool | int | float = ...) -> Any: ...

def closeCurve(*args, blendBias: bool | int | float = ..., bb: bool | int | float = ..., blendKnotInsertion: bool | int = ..., bki: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float = ..., p: bool | int | float = ..., preserveShape: bool | int | int = ..., ps: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...): ...
def closeSurface(*args, blendBias: bool | int | float = ..., bb: bool | int | float = ..., blendKnotInsertion: bool | int = ..., bki: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float = ..., p: bool | int | float = ..., preserveShape: bool | int | int = ..., ps: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...): ...

def coarsenSubdivSelectionList(*args) -> Any: ...

def cone(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endSweep: bool | int | float = ..., esw: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., heightRatio: bool | int | float = ..., hr: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pivot: bool | int | Tuple[float, float, float] = ..., p: bool | int | Tuple[float, float, float] = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sections: bool | int | int = ..., s: bool | int | int = ..., spans: bool | int | int = ..., nsp: bool | int | int = ..., startSweep: bool | int | float = ..., ssw: bool | int | float = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useOldInitBehaviour: bool | int = ..., oib: bool | int = ..., useTolerance: bool | int = ..., ut: bool | int = ...): ...

def constructionHistory(*args, query: bool | int = ..., q: bool | int = ..., toggle: bool | int = ..., tgl: bool | int = ...) -> Any: ...
def createSubdivRegion(*args) -> Any: ...

def curveIntersect(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int | Tuple[float, float, float] = ..., d: bool | int | Tuple[float, float, float] = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useDirection: bool | int = ..., ud: bool | int = ...): ...

def curveOnSurface(*args, append: bool | int = ..., a: bool | int = ..., degree: float = ..., d: float = ..., knot: float | List[float] = ..., k: float | List[float] = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., periodic: bool | int = ..., per: bool | int = ..., positionUV: Tuple[float, float] | List[Tuple[float, float]] = ..., uv: Tuple[float, float] | List[Tuple[float, float]] = ..., replace: bool | int = ..., r: bool | int = ...) -> Any: ...

def cylinder(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endSweep: bool | int | float = ..., esw: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., heightRatio: bool | int | float = ..., hr: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pivot: bool | int | Tuple[float, float, float] = ..., p: bool | int | Tuple[float, float, float] = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sections: bool | int | int = ..., s: bool | int | int = ..., spans: bool | int | int = ..., nsp: bool | int | int = ..., startSweep: bool | int | float = ..., ssw: bool | int | float = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useTolerance: bool | int = ..., ut: bool | int = ...): ...

def dataStructure(*args, asFile: bool | int | _util.ProxyUnicode | str = ..., af: bool | int | _util.ProxyUnicode | str = ..., asString: bool | int | _util.ProxyUnicode | str = ..., dataType: bool | int = ..., dt: bool | int = ..., format: bool | int | _util.ProxyUnicode | str = ..., fmt: bool | int | _util.ProxyUnicode | str = ..., listMemberNames: bool | int | _util.ProxyUnicode | str = ..., lmn: bool | int | _util.ProxyUnicode | str = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rem: bool | int = ..., removeAll: bool | int = ..., ral: bool | int = ...) -> Any: ...

def detachCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keep: bool | int | bool | int | List[bool | int] = ..., k: bool | int | bool | int | List[bool | int] = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float | List[float] = ..., p: bool | int | float | List[float] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...): ...
def detachSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keep: bool | int | bool | int | List[bool | int] = ..., k: bool | int | bool | int | List[bool | int] = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float | List[float] = ..., p: bool | int | float | List[float] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...): ...

def doubleProfileBirailSurface(*args, blendFactor: bool | int | float = ..., bl: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., tangentContinuityProfile1: bool | int = ..., tp1: bool | int = ..., tangentContinuityProfile2: bool | int = ..., tp2: bool | int = ..., transformMode: bool | int | int = ..., tm: bool | int | int = ...) -> Any: ...
def duplicateCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., local: bool | int = ..., l: bool | int = ..., maxValue: bool | int | float = ..., max: bool | int | float = ..., mergeItems: bool | int = ..., mi: bool | int = ..., minValue: bool | int | float = ..., min: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., relative: bool | int = ..., r: bool | int = ...) -> Any: ...
def duplicateSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., faceCountU: bool | int | int = ..., fcu: bool | int | int = ..., faceCountV: bool | int | int = ..., fcv: bool | int | int = ..., firstFaceU: bool | int | int = ..., ffu: bool | int | int = ..., firstFaceV: bool | int | int = ..., ffv: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., local: bool | int = ..., l: bool | int = ..., mergeItems: bool | int = ..., mi: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...

def editMetadata(*args, channelName: bool | int | _util.ProxyUnicode | str = ..., cn: bool | int | _util.ProxyUnicode | str = ..., channelType: bool | int | _util.ProxyUnicode | str = ..., cht: bool | int | _util.ProxyUnicode | str = ..., endIndex: _util.ProxyUnicode | str = ..., eix: _util.ProxyUnicode | str = ..., index: bool | int | str | List[str] = ..., idx: bool | int | str | List[str] = ..., indexType: bool | int | _util.ProxyUnicode | str = ..., idt: bool | int | _util.ProxyUnicode | str = ..., memberName: _util.ProxyUnicode | str = ..., mn: _util.ProxyUnicode | str = ..., remove: bool | int = ..., rem: bool | int = ..., scene: bool | int = ..., scn: bool | int = ..., startIndex: _util.ProxyUnicode | str = ..., six: _util.ProxyUnicode | str = ..., streamName: bool | int | _util.ProxyUnicode | str = ..., stn: bool | int | _util.ProxyUnicode | str = ..., stringValue: str | List[str] = ..., sv: str | List[str] = ..., value: float | List[float] = ..., v: float | List[float] = ...): ...
def extendCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., distance: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., extendMethod: bool | int | int = ..., em: bool | int | int = ..., extensionType: bool | int | int = ..., et: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., inputPoint: bool | int | Tuple[float, float, float] = ..., ip: bool | int | Tuple[float, float, float] = ..., join: bool | int = ..., jn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., noChanges: bool | int = ..., nc: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pointX: bool | int | float = ..., px: bool | int | float = ..., pointY: bool | int | float = ..., py: bool | int | float = ..., pointZ: bool | int | float = ..., pz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., removeMultipleKnots: bool | int = ..., rmk: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., start: bool | int | int = ..., s: bool | int | int = ...): ...
def extendSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., distance: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., extendDirection: bool | int | int = ..., ed: bool | int | int = ..., extendMethod: bool | int | int = ..., em: bool | int | int = ..., extendSide: bool | int | int = ..., es: bool | int | int = ..., extensionType: bool | int | int = ..., et: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., join: bool | int = ..., jn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., noChanges: bool | int = ..., nc: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...): ...
def extrude(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degreeAlongLength: bool | int | int = ..., dl: bool | int | int = ..., direction: bool | int | Tuple[float, float, float] = ..., d: bool | int | Tuple[float, float, float] = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., extrudeType: bool | int | int = ..., et: bool | int | int = ..., fixedPath: bool | int = ..., fpt: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., length: bool | int | float = ..., l: bool | int | float = ..., mergeItems: bool | int = ..., mi: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pivot: bool | int | Tuple[float, float, float] = ..., p: bool | int | Tuple[float, float, float] = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., rebuild: bool | int = ..., rb: bool | int = ..., reverseSurfaceIfPathReversed: bool | int = ..., rsp: bool | int = ..., rotation: bool | int | float = ..., ro: bool | int | float = ..., scale: bool | int | float = ..., sc: bool | int | float = ..., subCurveSubSurface: bool | int = ..., scs: bool | int = ..., useComponentPivot: bool | int | int = ..., ucp: bool | int | int = ..., useProfileNormal: bool | int = ..., upn: bool | int = ...): ...
def filletCurve(*args, bias: bool | int | float = ..., b: bool | int | float = ..., blendControl: bool | int = ..., bc: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., circular: bool | int = ..., cir: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveParameter1: bool | int | float = ..., cp1: bool | int | float = ..., curveParameter2: bool | int | float = ..., cp2: bool | int | float = ..., depth: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., freeformBlend: bool | int = ..., fb: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., join: bool | int = ..., jn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., trim: bool | int = ..., t: bool | int = ...): ...

def filterExpand(*args, expand: bool | int = ..., ex: bool | int = ..., fullPath: bool | int = ..., fp: bool | int = ..., selectionMask: int | List[int] = ..., sm: int | List[int] = ..., symActive: bool | int = ..., sma: bool | int = ..., symNegative: bool | int = ..., smn: bool | int = ..., symPositive: bool | int = ..., smp: bool | int = ..., symSeam: bool | int = ..., sms: bool | int = ...) -> Any: ...

def fitBspline(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepRange: int = ..., kr: int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ...): ...

def freeFormFillet(*args, bias: bool | int | float = ..., b: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., depth: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., positionTolerance: bool | int | float = ..., pt: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., tangentTolerance: bool | int | float = ..., tt: bool | int | float = ...) -> Any: ...
def geomToBBox(*args, bakeAnimation: bool | int = ..., ba: bool | int = ..., combineMesh: bool | int = ..., cm: bool | int = ..., endTime: int | float = ..., et: int | float = ..., keepOriginal: bool | int = ..., ko: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nameSuffix: _util.ProxyUnicode | str = ..., ns: _util.ProxyUnicode | str = ..., sampleBy: int | float = ..., sb: int | float = ..., shaderColor: Tuple[float, float, float] = ..., sc: Tuple[float, float, float] = ..., single: bool | int = ..., s: bool | int = ..., startTime: int | float = ..., st: int | float = ...) -> Any: ...
def getMetadata(*args, channelName: bool | int | _util.ProxyUnicode | str = ..., cn: bool | int | _util.ProxyUnicode | str = ..., channelType: bool | int | _util.ProxyUnicode | str = ..., cht: bool | int | _util.ProxyUnicode | str = ..., dataType: bool | int = ..., dt: bool | int = ..., endIndex: _util.ProxyUnicode | str = ..., eix: _util.ProxyUnicode | str = ..., index: bool | int | str | List[str] = ..., idx: bool | int | str | List[str] = ..., indexType: bool | int | _util.ProxyUnicode | str = ..., idt: bool | int | _util.ProxyUnicode | str = ..., listChannelNames: bool | int = ..., lcn: bool | int = ..., listMemberNames: bool | int = ..., lmn: bool | int = ..., listStreamNames: bool | int = ..., lsn: bool | int = ..., memberName: _util.ProxyUnicode | str = ..., mn: _util.ProxyUnicode | str = ..., scene: bool | int = ..., scn: bool | int = ..., startIndex: _util.ProxyUnicode | str = ..., six: _util.ProxyUnicode | str = ..., streamName: bool | int | _util.ProxyUnicode | str = ..., stn: bool | int | _util.ProxyUnicode | str = ...) -> Any: ...

def globalStitch(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., lockSurface: bool | int | bool | int | List[bool | int] = ..., lk: bool | int | bool | int | List[bool | int] = ..., maxSeparation: bool | int | float = ..., ms: bool | int | float = ..., modificationResistance: bool | int | float = ..., mr: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., sampling: bool | int | int = ..., sam: bool | int | int = ..., stitchCorners: bool | int | int = ..., sc: bool | int | int = ..., stitchEdges: bool | int | int = ..., se: bool | int | int = ..., stitchPartialEdges: bool | int = ..., spe: bool | int = ..., stitchSmoothness: bool | int | int = ..., ss: bool | int | int = ...): ...
def grid(*args, default: bool | int = ..., df: bool | int = ..., displayAxes: bool | int = ..., da: bool | int = ..., displayAxesBold: bool | int = ..., dab: bool | int = ..., displayDivisionLines: bool | int = ..., ddl: bool | int = ..., displayGridLines: bool | int = ..., dgl: bool | int = ..., displayOrthographicLabels: bool | int = ..., dol: bool | int = ..., displayPerspectiveLabels: bool | int = ..., dpl: bool | int = ..., divisions: bool | int | int = ..., d: bool | int | int = ..., drawInfiniteGrid: bool | int = ..., dig: bool | int = ..., fogBase: bool | int | float = ..., fb: bool | int | float = ..., fogEnabled: bool | int = ..., fog: bool | int = ..., fogMinimumCameraDistance: bool | int | float = ..., fmd: bool | int | float = ..., fogPower: bool | int | float = ..., fp: bool | int | float = ..., gridSizeCameraDistanceFactor: bool | int | float = ..., cdf: bool | int | float = ..., gridSizeFixed: bool | int = ..., gsf: bool | int = ..., gridSizeLogFactorAdjustment: bool | int | float = ..., lfa: bool | int | float = ..., gridSizeMinimum: bool | int | float = ..., gsm: bool | int | float = ..., gridSizeVarying: bool | int = ..., gsv: bool | int = ..., lineWidth: bool | int | float = ..., lw: bool | int | float = ..., majorColor: bool | int | Tuple[float, float, float, float] = ..., mac: bool | int | Tuple[float, float, float, float] = ..., minorColor: bool | int | Tuple[float, float, float, float] = ..., mic: bool | int | Tuple[float, float, float, float] = ..., normalAxis: bool | int | int = ..., na: bool | int | int = ..., orthographicLabelPosition: bool | int | _util.ProxyUnicode | str = ..., olp: bool | int | _util.ProxyUnicode | str = ..., perspectiveLabelPosition: bool | int | _util.ProxyUnicode | str = ..., plp: bool | int | _util.ProxyUnicode | str = ..., query: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., r: bool | int = ..., size: bool | int | float = ..., s: bool | int | float = ..., spacing: bool | int | float = ..., sp: bool | int | float = ..., style: bool | int | int = ..., st: bool | int | int = ..., toggle: bool | int = ..., tgl: bool | int = ..., xAxisColor: bool | int | Tuple[float, float, float, float] = ..., xac: bool | int | Tuple[float, float, float, float] = ..., yAxisColor: bool | int | Tuple[float, float, float, float] = ..., yac: bool | int | Tuple[float, float, float, float] = ..., zAxisColor: bool | int | Tuple[float, float, float, float] = ..., zac: bool | int | Tuple[float, float, float, float] = ...): ...

def hardenPointCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., multiplicity: bool | int | int = ..., m: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...) -> Any: ...
def hasMetadata(*args, asList: bool | int = ..., al: bool | int = ..., channelName: bool | int | _util.ProxyUnicode | str = ..., cn: bool | int | _util.ProxyUnicode | str = ..., channelType: bool | int | _util.ProxyUnicode | str = ..., cht: bool | int | _util.ProxyUnicode | str = ..., endIndex: _util.ProxyUnicode | str = ..., eix: _util.ProxyUnicode | str = ..., ignoreDefault: bool | int = ..., id: bool | int = ..., index: bool | int | str | List[str] = ..., idx: bool | int | str | List[str] = ..., indexType: bool | int | _util.ProxyUnicode | str = ..., idt: bool | int | _util.ProxyUnicode | str = ..., memberName: _util.ProxyUnicode | str = ..., mn: _util.ProxyUnicode | str = ..., scene: bool | int = ..., scn: bool | int = ..., startIndex: _util.ProxyUnicode | str = ..., six: _util.ProxyUnicode | str = ..., streamName: bool | int | _util.ProxyUnicode | str = ..., stn: bool | int | _util.ProxyUnicode | str = ...) -> Any: ...
def illustratorCurves(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., illustratorFilename: _util.ProxyUnicode | str = ..., ifn: _util.ProxyUnicode | str = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., scaleFactor: float = ..., sf: float = ..., tolerance: bool | int | float = ..., tl: bool | int | float = ...) -> Any: ...

def insertKnotCurve(*args, addKnots: bool | int = ..., add: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertBetween: bool | int = ..., ib: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberOfKnots: bool | int | int | List[int] = ..., nk: bool | int | int | List[int] = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float | List[float] = ..., p: bool | int | float | List[float] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...): ...
def insertKnotSurface(*args, addKnots: bool | int = ..., add: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertBetween: bool | int = ..., ib: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberOfKnots: bool | int | int | List[int] = ..., nk: bool | int | int | List[int] = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float | List[float] = ..., p: bool | int | float | List[float] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...): ...

def intersect(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., firstSurface: bool | int = ..., fs: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ...) -> Any: ...

def loft(*args, autoReverse: bool | int = ..., ar: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., close: bool | int = ..., c: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createCusp: bool | int | bool | int | List[bool | int] = ..., cc: bool | int | bool | int | List[bool | int] = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., rebuild: bool | int = ..., rb: bool | int = ..., reverse: bool | int | bool | int | List[bool | int] = ..., r: bool | int | bool | int | List[bool | int] = ..., reverseSurfaceNormals: bool | int = ..., rsn: bool | int = ..., sectionSpans: bool | int | int = ..., ss: bool | int | int = ..., uniform: bool | int = ..., u: bool | int = ...): ...

def makeSingleSurface(*args, caching: bool | int = ..., cch: bool | int = ..., chordHeight: float = ..., cht: float = ..., chordHeightRatio: float = ..., chr: float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., delta: float = ..., d: float = ..., edgeSwap: bool | int = ..., es: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., format: int = ..., f: int = ..., fractionalTolerance: float = ..., ft: float = ..., frozen: bool | int = ..., fzn: bool | int = ..., matchNormalDir: bool | int = ..., mnd: bool | int = ..., minEdgeLength: float = ..., mel: float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalizeTrimmedUVRange: bool | int = ..., ntr: bool | int = ..., object: bool | int = ..., o: bool | int = ..., polygonCount: int = ..., pc: int = ..., polygonType: int = ..., pt: int = ..., query: bool | int = ..., q: bool | int = ..., stitchTolerance: float = ..., st: float = ..., uNumber: int = ..., un: int = ..., uType: int = ..., ut: int = ..., useChordHeight: bool | int = ..., uch: bool | int = ..., useChordHeightRatio: bool | int = ..., ucr: bool | int = ..., vNumber: int = ..., vn: int = ..., vType: int = ..., vt: int = ...) -> Any: ...
def manipOptions(*args, enableSmartDuplicate: bool | int = ..., esd: bool | int = ..., enableSmartExtrude: bool | int = ..., ese: bool | int = ..., forceRefresh: bool | int = ..., fr: bool | int = ..., handleSize: bool | int | float = ..., hs: bool | int | float = ..., hideManipOnCtrl: bool | int = ..., hmc: bool | int = ..., hideManipOnShift: bool | int = ..., hms: bool | int = ..., hideManipOnShiftCtrl: bool | int = ..., hsc: bool | int = ..., linePick: bool | int | float = ..., lp: bool | int | float = ..., lineSize: bool | int | float = ..., ls: bool | int | float = ..., middleMouseRepositioning: bool | int = ..., mm: bool | int = ..., pivotRotateHandleOffset: bool | int | int = ..., pro: bool | int | int = ..., planeHandleOffset: bool | int | int = ..., pho: bool | int | int = ..., pointSize: bool | int | float = ..., ps: bool | int | float = ..., preselectHighlight: bool | int = ..., psh: bool | int = ..., query: bool | int = ..., q: bool | int = ..., refreshMode: bool | int | int = ..., rm: bool | int | int = ..., relative: bool | int = ..., r: bool | int = ..., rememberActiveHandle: bool | int = ..., rah: bool | int = ..., rememberActiveHandleAfterToolSwitch: bool | int = ..., rhs: bool | int = ..., scale: bool | int | float = ..., s: bool | int | float = ..., showExtrudeSliders: bool | int = ..., ses: bool | int = ..., showPivotRotateHandle: bool | int = ..., spr: bool | int = ..., showPlaneHandles: bool | int = ..., sph: bool | int = ..., smartDuplicateType: bool | int | int = ..., sdt: bool | int | int = ...) -> Any: ...
def manipPivot(*args, bakeOri: bool | int = ..., bo: bool | int = ..., moveToolOri: int = ..., mto: int = ..., ori: bool | int | Tuple[float, float, float] = ..., o: bool | int | Tuple[float, float, float] = ..., oriValid: bool | int = ..., ov: bool | int = ..., orientation: Tuple[float, float, float] = ..., pinPivot: bool | int = ..., pin: bool | int = ..., pos: bool | int | Tuple[float, float, float] = ..., p: bool | int | Tuple[float, float, float] = ..., posValid: bool | int = ..., pv: bool | int = ..., position: Tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., r: bool | int = ..., resetOri: bool | int = ..., ro: bool | int = ..., resetPos: bool | int = ..., rp: bool | int = ..., rotateToolOri: int = ..., rto: int = ..., scaleToolOri: int = ..., sto: int = ..., snapOri: bool | int = ..., so: bool | int = ..., snapPos: bool | int = ..., sp: bool | int = ..., valid: bool | int = ..., v: bool | int = ...) -> Any: ...
def moveVertexAlongDirection(*args, direction: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., d: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., magnitude: float | List[float] = ..., m: float | List[float] = ..., normalDirection: float | List[float] = ..., n: float | List[float] = ..., uDirection: float | List[float] = ..., u: float | List[float] = ..., uvNormalDirection: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., uvn: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., vDirection: float | List[float] = ..., v: float | List[float] = ...) -> Any: ...
def multiProfileBirailSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., tangentContinuityProfile1: bool | int = ..., tp1: bool | int = ..., tangentContinuityProfile2: bool | int = ..., tp2: bool | int = ..., transformMode: bool | int | int = ..., tm: bool | int | int = ...) -> Any: ...
def nurbsBoolean(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., nsrfsInFirstShell: int = ..., nsf: int = ..., object: bool | int = ..., o: bool | int = ..., operation: bool | int | int = ..., op: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., smartConnection: bool | int = ..., sc: bool | int = ..., tolerance: bool | int | float = ..., tlb: bool | int | float = ...) -> Any: ...
def nurbsCopyUVSet(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...

def nurbsCube(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., heightRatio: bool | int | float = ..., hr: bool | int | float = ..., lengthRatio: bool | int | float = ..., lr: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., patchesU: bool | int | int = ..., u: bool | int | int = ..., patchesV: bool | int | int = ..., v: bool | int | int = ..., pivot: bool | int | Tuple[float, float, float] = ..., p: bool | int | Tuple[float, float, float] = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., width: bool | int | float = ..., w: bool | int | float = ...): ...
def nurbsCurveToBezier(*args): ...

def nurbsEditUV(*args, angle: bool | int | float = ..., a: bool | int | float = ..., pivotU: bool | int | float = ..., pu: bool | int | float = ..., pivotV: bool | int | float = ..., pv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ..., rotateRatio: bool | int | float = ..., rr: bool | int | float = ..., rotation: bool | int = ..., rot: bool | int = ..., scale: bool | int = ..., s: bool | int = ..., scaleU: bool | int | float = ..., su: bool | int | float = ..., scaleV: bool | int | float = ..., sv: bool | int | float = ..., uValue: bool | int | float = ..., u: bool | int | float = ..., vValue: bool | int | float = ..., v: bool | int | float = ...) -> Any: ...

def nurbsPlane(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., lengthRatio: bool | int | float = ..., lr: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., patchesU: bool | int | int = ..., u: bool | int | int = ..., patchesV: bool | int | int = ..., v: bool | int | int = ..., pivot: bool | int | Tuple[float, float, float] = ..., p: bool | int | Tuple[float, float, float] = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., width: bool | int | float = ..., w: bool | int | float = ...): ...

def nurbsSelect(*args, borderSelection: bool | int = ..., bs: bool | int = ..., bottomBorder: bool | int = ..., bb: bool | int = ..., growSelection: int = ..., gs: int = ..., leftBorder: bool | int = ..., lb: bool | int = ..., rightBorder: bool | int = ..., rb: bool | int = ..., shrinkSelection: int = ..., ss: int = ..., topBorder: bool | int = ..., tb: bool | int = ...) -> Any: ...

def nurbsSquare(*args, caching: bool | int = ..., cch: bool | int = ..., center: bool | int | Tuple[float, float, float] = ..., c: bool | int | Tuple[float, float, float] = ..., centerX: bool | int | float = ..., cx: bool | int | float = ..., centerY: bool | int | float = ..., cy: bool | int | float = ..., centerZ: bool | int | float = ..., cz: bool | int | float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normal: bool | int | Tuple[float, float, float] = ..., nr: bool | int | Tuple[float, float, float] = ..., normalX: bool | int | float = ..., nrx: bool | int | float = ..., normalY: bool | int | float = ..., nry: bool | int | float = ..., normalZ: bool | int | float = ..., nrz: bool | int | float = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sideLength1: bool | int | float = ..., sl1: bool | int | float = ..., sideLength2: bool | int | float = ..., sl2: bool | int | float = ..., spansPerSide: bool | int | int = ..., sps: bool | int | int = ...): ...

def nurbsToPoly(*args, caching: bool | int = ..., cch: bool | int = ..., chordHeight: float = ..., cht: float = ..., chordHeightRatio: float = ..., chr: float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curvatureTolerance: bool | int | int = ..., cvt: bool | int | int = ..., delta: float = ..., d: float = ..., edgeSwap: bool | int = ..., es: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., explicitTessellationAttributes: bool | int = ..., eta: bool | int = ..., format: int = ..., f: int = ..., fractionalTolerance: float = ..., ft: float = ..., frozen: bool | int = ..., fzn: bool | int = ..., matchNormalDir: bool | int = ..., mnd: bool | int = ..., matchRenderTessellation: bool | int = ..., mrt: bool | int = ..., minEdgeLength: float = ..., mel: float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalizeTrimmedUVRange: bool | int = ..., ntr: bool | int = ..., object: bool | int = ..., o: bool | int = ..., polygonCount: int = ..., pc: int = ..., polygonType: int = ..., pt: int = ..., query: bool | int = ..., q: bool | int = ..., smoothEdge: bool | int = ..., ues: bool | int = ..., smoothEdgeRatio: bool | int | float = ..., esr: bool | int | float = ..., uDivisionsFactor: bool | int | float = ..., nuf: bool | int | float = ..., uNumber: int = ..., un: int = ..., uType: int = ..., ut: int = ..., useChordHeight: bool | int = ..., uch: bool | int = ..., useChordHeightRatio: bool | int = ..., ucr: bool | int = ..., useSurfaceShader: bool | int = ..., uss: bool | int = ..., vDivisionsFactor: bool | int | float = ..., nvf: bool | int | float = ..., vNumber: int = ..., vn: int = ..., vType: int = ..., vt: int = ...) -> Any: ...
def nurbsToPolygonsPref(*args, chordHeight: bool | int | float = ..., cht: bool | int | float = ..., chordHeightRatio: bool | int | float = ..., chr: bool | int | float = ..., delta3D: bool | int | float = ..., d: bool | int | float = ..., edgeSwap: bool | int = ..., es: bool | int = ..., format: bool | int | int = ..., f: bool | int | int = ..., fraction: bool | int | float = ..., ft: bool | int | float = ..., matchRenderTessellation: bool | int | int = ..., mrt: bool | int | int = ..., merge: bool | int | int = ..., m: bool | int | int = ..., mergeTolerance: bool | int | float = ..., mt: bool | int | float = ..., minEdgeLen: bool | int | float = ..., mel: bool | int | float = ..., polyCount: bool | int | int = ..., pc: bool | int | int = ..., polyType: bool | int | int = ..., pt: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., uNumber: bool | int | int = ..., un: bool | int | int = ..., uType: bool | int | int = ..., ut: bool | int | int = ..., useChordHeight: bool | int = ..., uch: bool | int = ..., useChordHeightRatio: bool | int = ..., ucr: bool | int = ..., vNumber: bool | int | int = ..., vn: bool | int | int = ..., vType: bool | int | int = ..., vt: bool | int | int = ...) -> Any: ...

def nurbsToSubdiv(*args, addUnderTransform: bool | int = ..., aut: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., collapsePoles: bool | int = ..., cp: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., matchPeriodic: bool | int = ..., mp: bool | int = ..., maxPolyCount: bool | int | int = ..., mpc: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., reverseNormal: bool | int = ..., rn: bool | int = ...): ...

def nurbsToSubdivPref(*args, bridge: bool | int | int = ..., br: bool | int | int = ..., capType: bool | int | int = ..., ct: bool | int | int = ..., collapsePoles: bool | int = ..., cp: bool | int = ..., matchPeriodic: bool | int = ..., mp: bool | int = ..., maxPolyCount: bool | int | int = ..., mpc: bool | int | int = ..., offset: bool | int | float = ..., o: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., reverseNormal: bool | int = ..., rn: bool | int = ..., solidType: bool | int | int = ..., st: bool | int | int = ..., trans00: bool | int | float = ..., t00: bool | int | float = ..., trans01: bool | int | float = ..., t01: bool | int | float = ..., trans02: bool | int | float = ..., t02: bool | int | float = ..., trans10: bool | int | float = ..., t10: bool | int | float = ..., trans11: bool | int | float = ..., t11: bool | int | float = ..., trans12: bool | int | float = ..., t12: bool | int | float = ..., trans20: bool | int | float = ..., t20: bool | int | float = ..., trans21: bool | int | float = ..., t21: bool | int | float = ..., trans22: bool | int | float = ..., t22: bool | int | float = ..., trans30: bool | int | float = ..., t30: bool | int | float = ..., trans31: bool | int | float = ..., t31: bool | int | float = ..., trans32: bool | int | float = ..., t32: bool | int | float = ...) -> Any: ...
def nurbsUVSet(*args, create: bool | int = ..., c: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., useExplicit: bool | int = ..., ue: bool | int = ...) -> Any: ...

def offsetCurve(*args, caching: bool | int = ..., cch: bool | int = ..., connectBreaks: bool | int | int = ..., cb: bool | int | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., cutLoop: bool | int = ..., cl: bool | int = ..., cutRadius: bool | int | float = ..., cr: bool | int | float = ..., distance: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normal: bool | int | Tuple[float, float, float] = ..., nr: bool | int | Tuple[float, float, float] = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., reparameterize: bool | int = ..., rp: bool | int = ..., stitch: bool | int = ..., st: bool | int = ..., subdivisionDensity: bool | int | int = ..., sd: bool | int | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useGivenNormal: bool | int = ..., ugn: bool | int = ...): ...

def offsetCurveOnSurface(*args, caching: bool | int = ..., cch: bool | int = ..., checkPoints: bool | int | int = ..., cp: bool | int | int = ..., connectBreaks: bool | int | int = ..., cb: bool | int | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., cutLoop: bool | int = ..., cl: bool | int = ..., distance: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., stitch: bool | int = ..., st: bool | int = ..., subdivisionDensity: bool | int | int = ..., sd: bool | int | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ...) -> Any: ...

def offsetSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., distance: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., method: bool | int | int = ..., m: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ...): ...

def planarSrf(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepOutside: bool | int = ..., ko: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ...) -> Any: ...

def plane(*args, length: float = ..., l: float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., position: Tuple[float, float, float] = ..., p: Tuple[float, float, float] = ..., rotation: Tuple[float, float, float] = ..., r: Tuple[float, float, float] = ..., size: float = ..., s: float = ..., width: float = ..., w: float = ...): ...

def pointCurveConstraint(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pointConstraintUVW: bool | int | Tuple[float, float, float] = ..., puv: bool | int | Tuple[float, float, float] = ..., pointWeight: bool | int | float = ..., pw: bool | int | float = ..., position: Tuple[float, float, float] = ..., p: Tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., weight: float = ..., w: float = ...) -> Any: ...
def pointOnCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curvatureCenter: bool | int = ..., cc: bool | int = ..., curvatureRadius: bool | int = ..., cr: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normal: bool | int = ..., no: bool | int = ..., normalizedNormal: bool | int = ..., nn: bool | int = ..., normalizedTangent: bool | int = ..., nt: bool | int = ..., parameter: bool | int | float = ..., pr: bool | int | float = ..., position: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., tangent: bool | int = ..., t: bool | int = ..., turnOnPercentage: bool | int = ..., top: bool | int = ...) -> Any: ...
def pointOnSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normal: bool | int = ..., no: bool | int = ..., normalizedNormal: bool | int = ..., nn: bool | int = ..., normalizedTangentU: bool | int = ..., ntu: bool | int = ..., normalizedTangentV: bool | int = ..., ntv: bool | int = ..., parameterU: bool | int | float = ..., u: bool | int | float = ..., parameterV: bool | int | float = ..., v: bool | int | float = ..., position: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., tangentU: bool | int = ..., tu: bool | int = ..., tangentV: bool | int = ..., tv: bool | int = ..., turnOnPercentage: bool | int = ..., top: bool | int = ...) -> Any: ...

def polyAppend(*args, append: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., a: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edge: int | List[int] = ..., ed: int | List[int] = ..., edit: bool | int = ..., e: bool | int = ..., hole: bool | int | List[bool | int] = ..., hl: bool | int | List[bool | int] = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., point: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., p: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., subdivision: bool | int | int = ..., s: bool | int | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ...): ...
def polyAppendVertex(*args, append: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., a: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., hole: bool | int | List[bool | int] = ..., h: bool | int | List[bool | int] = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., point: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., p: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ..., vertex: int | List[int] = ..., v: int | List[int] = ...): ...

def polyAutoProjection(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., layout: bool | int | int = ..., l: bool | int | int = ..., layoutMethod: bool | int | int = ..., lm: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., optimize: bool | int | int = ..., o: bool | int | int = ..., percentageSpace: bool | int | float = ..., ps: bool | int | float = ..., pivot: bool | int | Tuple[float, float, float] = ..., pvt: bool | int | Tuple[float, float, float] = ..., pivotX: bool | int | float = ..., pvx: bool | int | float = ..., pivotY: bool | int | float = ..., pvy: bool | int | float = ..., pivotZ: bool | int | float = ..., pvz: bool | int | float = ..., planes: bool | int | int = ..., p: bool | int | int = ..., projectBothDirections: bool | int = ..., pb: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rotate: bool | int | Tuple[float, float, float] = ..., ro: bool | int | Tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., scale: bool | int | Tuple[float, float, float] = ..., s: bool | int | Tuple[float, float, float] = ..., scaleMode: bool | int | int = ..., sc: bool | int | int = ..., scaleX: bool | int | float = ..., sx: bool | int | float = ..., scaleY: bool | int | float = ..., sy: bool | int | float = ..., scaleZ: bool | int | float = ..., sz: bool | int | float = ..., skipIntersect: bool | int = ..., si: bool | int = ..., translate: bool | int | Tuple[float, float, float] = ..., t: bool | int | Tuple[float, float, float] = ..., translateX: bool | int | float = ..., tx: bool | int | float = ..., translateY: bool | int | float = ..., ty: bool | int | float = ..., translateZ: bool | int | float = ..., tz: bool | int | float = ..., uvSetName: _util.ProxyUnicode | str = ..., uvs: _util.ProxyUnicode | str = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyAverageNormal(*args, allowZeroNormal: bool | int = ..., azn: bool | int = ..., distance: float = ..., d: float = ..., postnormalize: bool | int = ..., pon: bool | int = ..., prenormalize: bool | int = ..., prn: bool | int = ..., replaceNormalXYZ: Tuple[float, float, float] = ..., xyz: Tuple[float, float, float] = ...) -> Any: ...

def polyAverageVertex(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., iterations: bool | int | int = ..., i: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...
def polyBevel(*args, angleTolerance: bool | int | float = ..., at: bool | int | float = ..., autoFit: bool | int = ..., af: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., fillNgons: bool | int = ..., fn: bool | int = ..., fraction: float = ..., f: float = ..., frozen: bool | int = ..., fzn: bool | int = ..., maya2015: bool | int = ..., m15: bool | int = ..., mergeVertexTolerance: bool | int | float = ..., mvt: bool | int | float = ..., mergeVertices: bool | int = ..., mv: bool | int = ..., miteringAngle: bool | int | float = ..., ma: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset: bool | int | float = ..., o: bool | int | float = ..., offsetAsFraction: bool | int = ..., oaf: bool | int = ..., query: bool | int = ..., q: bool | int = ..., roundness: bool | int | float = ..., r: bool | int | float = ..., segments: bool | int | int = ..., sg: bool | int | int = ..., smoothingAngle: bool | int | float = ..., sa: bool | int | float = ..., subdivideNgons: bool | int = ..., sn: bool | int = ..., useLegacyBevelAlgorithm: bool | int = ..., com: bool | int = ..., uvAssignment: bool | int | int = ..., ua: bool | int | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...
def polyBevel3(*args, angleTolerance: bool | int | float = ..., at: bool | int | float = ..., autoFit: bool | int = ..., af: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., chamfer: bool | int = ..., c: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., depth: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., fillNgons: bool | int = ..., fn: bool | int = ..., forceParallel: bool | int = ..., fp: bool | int = ..., fraction: float = ..., f: float = ..., frozen: bool | int = ..., fzn: bool | int = ..., maya2015: bool | int = ..., m15: bool | int = ..., maya2016SP3: bool | int = ..., m16: bool | int = ..., maya2017Update1: bool | int = ..., m17: bool | int = ..., mergeVertexTolerance: bool | int | float = ..., mvt: bool | int | float = ..., mergeVertices: bool | int = ..., mv: bool | int = ..., miterAlong: bool | int | int = ..., mia: bool | int | int = ..., mitering: bool | int | int = ..., m: bool | int | int = ..., miteringAngle: bool | int | float = ..., ma: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset: bool | int | float = ..., o: bool | int | float = ..., offsetAsFraction: bool | int = ..., oaf: bool | int = ..., query: bool | int = ..., q: bool | int = ..., roundness: bool | int | float = ..., r: bool | int | float = ..., segments: bool | int | int = ..., sg: bool | int | int = ..., smoothingAngle: bool | int | float = ..., sa: bool | int | float = ..., subdivideNgons: bool | int = ..., sn: bool | int = ..., uvAssignment: bool | int | int = ..., ua: bool | int | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def polyBlendColor(*args, baseColorName: bool | int | _util.ProxyUnicode | str = ..., bcn: bool | int | _util.ProxyUnicode | str = ..., blendFunc: bool | int | int = ..., bfn: bool | int | int = ..., blendWeightA: bool | int | float = ..., bwa: bool | int | float = ..., blendWeightB: bool | int | float = ..., bwb: bool | int | float = ..., blendWeightC: bool | int | float = ..., bwc: bool | int | float = ..., blendWeightD: bool | int | float = ..., bwd: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., dstColorName: bool | int | _util.ProxyUnicode | str = ..., dst: bool | int | _util.ProxyUnicode | str = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., srcColorName: bool | int | _util.ProxyUnicode | str = ..., src: bool | int | _util.ProxyUnicode | str = ...) -> Any: ...

def polyBlindData(*args, associationType: _util.ProxyUnicode | str = ..., at: _util.ProxyUnicode | str = ..., binaryData: str | List[str] = ..., bnd: str | List[str] = ..., booleanData: bool | int | List[bool | int] = ..., bd: bool | int | List[bool | int] = ..., delete: bool | int = ..., doubleData: float | List[float] = ..., dbd: float | List[float] = ..., edit: bool | int = ..., e: bool | int = ..., int64Data: int | List[int] = ..., lid: int | List[int] = ..., intData: int | List[int] = ..., ind: int | List[int] = ..., longDataName: str | List[str] = ..., ldn: str | List[str] = ..., rescan: bool | int = ..., res: bool | int = ..., reset: bool | int = ..., rst: bool | int = ..., shape: bool | int = ..., sh: bool | int = ..., shortDataName: str | List[str] = ..., sdn: str | List[str] = ..., stringData: str | List[str] = ..., sd: str | List[str] = ..., typeId: int = ..., id: int = ...): ...
def polyBoolOp(*args, caching: bool | int = ..., cch: bool | int = ..., classification: int = ..., cls: int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., faceAreaThreshold: bool | int | float = ..., fat: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., mergeUVSets: bool | int | int = ..., muv: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., operation: bool | int | int = ..., op: bool | int | int = ..., preserveColor: bool | int = ..., pcr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., useThresholds: bool | int = ..., uth: bool | int = ..., vertexDistanceThreshold: bool | int | float = ..., vdt: bool | int | float = ...): ...
def polyBridgeEdge(*args, bridgeOffset: bool | int | int = ..., bo: bool | int | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveType: bool | int | int = ..., ctp: bool | int | int = ..., direction: int = ..., d: int = ..., divisions: bool | int | int = ..., dv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., inputCurve: _general.PyNode | str = ..., inc: _general.PyNode | str = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., reverse: bool | int = ..., rev: bool | int = ..., smoothingAngle: bool | int | float = ..., sma: bool | int | float = ..., sourceDirection: int = ..., sd: int = ..., startVert1: bool | int | int = ..., sv1: bool | int | int = ..., startVert2: bool | int | int = ..., sv2: bool | int | int = ..., taper: bool | int | float = ..., tp: bool | int | float = ..., taperCurve_FloatValue: bool | int | float = ..., cfv: bool | int | float = ..., taperCurve_Interp: bool | int | int = ..., ci: bool | int | int = ..., taperCurve_Position: bool | int | float = ..., cp: bool | int | float = ..., targetDirection: int = ..., td: int = ..., twist: bool | int | float = ..., twt: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...
def polyCBoolOp(*args, caching: bool | int = ..., cch: bool | int = ..., classification: bool | int | int = ..., cls: bool | int | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edgeInterpolation: bool | int = ..., eit: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., faceAreaThreshold: bool | int | float = ..., fat: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., mergeUVSets: bool | int | int = ..., muv: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., operation: bool | int | int = ..., op: bool | int | int = ..., planarTolerance: float = ..., ptl: float = ..., preserveColor: bool | int = ..., pcr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sortOutput: bool | int = ..., sop: bool | int = ..., tagIntersection: bool | int = ..., ti: bool | int = ..., useCarveBooleans: bool | int = ..., ucb: bool | int = ..., useThresholds: bool | int = ..., uth: bool | int = ..., vertexDistanceThreshold: bool | int | float = ..., vdt: bool | int | float = ...): ...

def polyCacheMonitor(*args, cacheValue: bool | int = ..., chv: bool | int = ..., nodeName: _util.ProxyUnicode | str = ..., nm: _util.ProxyUnicode | str = ...) -> Any: ...
def polyCanBridgeEdge(*args) -> Any: ...
def polyCheck(*args, edge: bool | int = ..., e: bool | int = ..., face: bool | int = ..., f: bool | int = ..., faceOffset: bool | int = ..., fo: bool | int = ..., openFile: _util.ProxyUnicode | str = ..., of: _util.ProxyUnicode | str = ...) -> Any: ...

def polyChipOff(*args, attraction: bool | int | float = ..., att: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., duplicate: bool | int = ..., dup: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gain: bool | int | float | List[float] = ..., ga: bool | int | float | List[float] = ..., gravity: bool | int | Tuple[float, float, float] = ..., g: bool | int | Tuple[float, float, float] = ..., gravityX: bool | int | float = ..., gx: bool | int | float = ..., gravityY: bool | int | float = ..., gy: bool | int | float = ..., gravityZ: bool | int | float = ..., gz: bool | int | float = ..., keepFacesTogether: bool | int = ..., kft: bool | int = ..., keepFacetTogether: bool | int = ..., xft: bool | int = ..., localCenter: bool | int | int = ..., lc: bool | int | int = ..., localDirection: bool | int | Tuple[float, float, float] = ..., ld: bool | int | Tuple[float, float, float] = ..., localDirectionX: bool | int | float = ..., ldx: bool | int | float = ..., localDirectionY: bool | int | float = ..., ldy: bool | int | float = ..., localDirectionZ: bool | int | float = ..., ldz: bool | int | float = ..., localRotate: bool | int | Tuple[float, float, float] = ..., lr: bool | int | Tuple[float, float, float] = ..., localRotateX: bool | int | float = ..., lrx: bool | int | float = ..., localRotateY: bool | int | float = ..., lry: bool | int | float = ..., localRotateZ: bool | int | float = ..., lrz: bool | int | float = ..., localScale: bool | int | Tuple[float, float, float] = ..., ls: bool | int | Tuple[float, float, float] = ..., localScaleX: bool | int | float = ..., lsx: bool | int | float = ..., localScaleY: bool | int | float = ..., lsy: bool | int | float = ..., localScaleZ: bool | int | float = ..., lsz: bool | int | float = ..., localTranslate: bool | int | Tuple[float, float, float] = ..., lt: bool | int | Tuple[float, float, float] = ..., localTranslateX: bool | int | float = ..., ltx: bool | int | float = ..., localTranslateY: bool | int | float = ..., lty: bool | int | float = ..., localTranslateZ: bool | int | float = ..., ltz: bool | int | float = ..., magnX: bool | int | float = ..., mx: bool | int | float = ..., magnY: bool | int | float = ..., my: bool | int | float = ..., magnZ: bool | int | float = ..., mz: bool | int | float = ..., magnet: bool | int | Tuple[float, float, float] = ..., m: bool | int | Tuple[float, float, float] = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset: bool | int | float = ..., off: bool | int | float = ..., pivot: bool | int | Tuple[float, float, float] = ..., pvt: bool | int | Tuple[float, float, float] = ..., pivotX: bool | int | float = ..., pvx: bool | int | float = ..., pivotY: bool | int | float = ..., pvy: bool | int | float = ..., pivotZ: bool | int | float = ..., pvz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., rotate: Tuple[float, float, float] = ..., ro: Tuple[float, float, float] = ..., rotateX: float = ..., rx: float = ..., rotateY: float = ..., ry: float = ..., rotateZ: float = ..., rz: float = ..., scale: bool | int | Tuple[float, float, float] = ..., s: bool | int | Tuple[float, float, float] = ..., scaleX: bool | int | float = ..., sx: bool | int | float = ..., scaleY: bool | int | float = ..., sy: bool | int | float = ..., scaleZ: bool | int | float = ..., sz: bool | int | float = ..., translate: bool | int | Tuple[float, float, float] = ..., t: bool | int | Tuple[float, float, float] = ..., translateX: bool | int | float = ..., tx: bool | int | float = ..., translateY: bool | int | float = ..., ty: bool | int | float = ..., translateZ: bool | int | float = ..., tz: bool | int | float = ..., weight: bool | int | float = ..., w: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...
def polyCircularize(*args, alignment: bool | int | int = ..., al: bool | int | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createCurve: bool | int = ..., cc: bool | int = ..., divisions: int = ..., d: int = ..., edit: bool | int = ..., e: bool | int = ..., evenlyDistribute: bool | int = ..., ed: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., inputCurve: _general.PyNode | str = ..., inc: _general.PyNode | str = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalOffset: float = ..., no: float = ..., normalOrientation: bool | int | int = ..., nor: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., radialOffset: bool | int | float = ..., ro: bool | int | float = ..., relaxInterior: float = ..., ri: float = ..., smoothingAngle: bool | int | float = ..., sa: bool | int | float = ..., supportingEdges: int = ..., se: int = ..., twist: float = ..., t: float = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def polyCircularizeEdge(*args, alignment: bool | int | int = ..., al: bool | int | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createCurve: bool | int = ..., cc: bool | int = ..., divisions: int = ..., d: int = ..., edit: bool | int = ..., e: bool | int = ..., evenlyDistribute: bool | int = ..., ed: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., inputCurve: _general.PyNode | str = ..., inc: _general.PyNode | str = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalOffset: float = ..., no: float = ..., normalOrientation: bool | int | int = ..., nor: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., radialOffset: bool | int | float = ..., ro: bool | int | float = ..., relaxInterior: float = ..., ri: float = ..., smoothingAngle: bool | int | float = ..., sa: bool | int | float = ..., supportingEdges: int = ..., se: int = ..., twist: float = ..., t: float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyCircularizeFace(*args, alignment: bool | int | int = ..., al: bool | int | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createCurve: bool | int = ..., cc: bool | int = ..., divisions: int = ..., d: int = ..., edit: bool | int = ..., e: bool | int = ..., evenlyDistribute: bool | int = ..., ed: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., inputCurve: _general.PyNode | str = ..., inc: _general.PyNode | str = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalOffset: float = ..., no: float = ..., normalOrientation: bool | int | int = ..., nor: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., radialOffset: bool | int | float = ..., ro: bool | int | float = ..., relaxInterior: float = ..., ri: float = ..., smoothingAngle: bool | int | float = ..., sa: bool | int | float = ..., supportingEdges: int = ..., se: int = ..., twist: float = ..., t: float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...

def polyClean(*args, caching: bool | int = ..., cch: bool | int = ..., cleanEdges: bool | int = ..., ce: bool | int = ..., cleanPartialUVMapping: bool | int = ..., cpm: bool | int = ..., cleanUVs: bool | int = ..., cuv: bool | int = ..., cleanVertices: bool | int = ..., cv: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...

def polyClipboard(*args, clear: bool | int = ..., cl: bool | int = ..., color: bool | int = ..., clr: bool | int = ..., copy: bool | int = ..., cp: bool | int = ..., paste: bool | int = ..., ps: bool | int = ..., shader: bool | int = ..., sh: bool | int = ..., uvCoordinates: bool | int = ..., uv: bool | int = ...) -> Any: ...

def polyCloseBorder(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...
def polyCollapseEdge(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...

def polyCollapseFacet(*args, areaThreshold: bool | int | float = ..., at: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., useAreaThreshold: bool | int = ..., uat: bool | int = ...) -> Any: ...
def polyCollapseTweaks(*args, hasVertexTweaks: bool | int = ..., hvt: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyColorBlindData(*args, aboveMaxColorBlue: float | List[float] = ..., amb: float | List[float] = ..., aboveMaxColorGreen: float | List[float] = ..., amg: float | List[float] = ..., aboveMaxColorRed: float | List[float] = ..., amr: float | List[float] = ..., attrName: str | List[str] = ..., n: str | List[str] = ..., belowMinColorBlue: float | List[float] = ..., bmb: float | List[float] = ..., belowMinColorGreen: float | List[float] = ..., bmg: float | List[float] = ..., belowMinColorRed: float | List[float] = ..., bmr: float | List[float] = ..., clashColorBlue: float = ..., ccb: float = ..., clashColorGreen: float = ..., ccg: float = ..., clashColorRed: float = ..., ccr: float = ..., colorBlue: float | List[float] = ..., cb: float | List[float] = ..., colorGreen: float | List[float] = ..., cg: float | List[float] = ..., colorRed: float | List[float] = ..., cr: float | List[float] = ..., dataType: str | List[str] = ..., dt: str | List[str] = ..., enableFalseColor: bool | int = ..., efc: bool | int = ..., maxColorBlue: float | List[float] = ..., mxb: float | List[float] = ..., maxColorGreen: float | List[float] = ..., mxg: float | List[float] = ..., maxColorRed: float | List[float] = ..., mxr: float | List[float] = ..., maxValue: float | List[float] = ..., mxv: float | List[float] = ..., minColorBlue: float | List[float] = ..., mnb: float | List[float] = ..., minColorGreen: float | List[float] = ..., mng: float | List[float] = ..., minColorRed: float | List[float] = ..., mnr: float | List[float] = ..., minValue: float | List[float] = ..., mnv: float | List[float] = ..., mode: int | List[int] = ..., m: int | List[int] = ..., noColorBlue: float = ..., ncb: float = ..., noColorGreen: float = ..., ncg: float = ..., noColorRed: float = ..., ncr: float = ..., numIdTypes: int | List[int] = ..., num: int | List[int] = ..., queryMode: bool | int = ..., q: bool | int = ..., typeId: int | List[int] = ..., id: int | List[int] = ..., useMax: bool | int | List[bool | int] = ..., umx: bool | int | List[bool | int] = ..., useMin: bool | int | List[bool | int] = ..., umn: bool | int | List[bool | int] = ..., value: str | List[str] = ..., v: str | List[str] = ...) -> Any: ...

def polyColorDel(*args, caching: bool | int = ..., cch: bool | int = ..., colorSetName: bool | int | _util.ProxyUnicode | str = ..., cls: bool | int | _util.ProxyUnicode | str = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...
def polyColorMod(*args, alphaScale_FloatValue: bool | int | float = ..., afv: bool | int | float = ..., alphaScale_Interp: bool | int | int = ..., ai: bool | int | int = ..., alphaScale_Position: bool | int | float = ..., ap: bool | int | float = ..., baseColorName: _util.ProxyUnicode | str = ..., bcn: _util.ProxyUnicode | str = ..., blueScale_FloatValue: bool | int | float = ..., bfv: bool | int | float = ..., blueScale_Interp: bool | int | int = ..., bi: bool | int | int = ..., blueScale_Position: bool | int | float = ..., bp: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., greenScale_FloatValue: bool | int | float = ..., gfv: bool | int | float = ..., greenScale_Interp: bool | int | int = ..., gi: bool | int | int = ..., greenScale_Position: bool | int | float = ..., gp: bool | int | float = ..., huev: bool | int | float = ..., h: bool | int | float = ..., intensityScale_FloatValue: bool | int | float = ..., nfv: bool | int | float = ..., intensityScale_Interp: bool | int | int = ..., ni: bool | int | int = ..., intensityScale_Position: bool | int | float = ..., np: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., redScale_FloatValue: bool | int | float = ..., rfv: bool | int | float = ..., redScale_Interp: bool | int | int = ..., ri: bool | int | int = ..., redScale_Position: bool | int | float = ..., rp: bool | int | float = ..., satv: bool | int | float = ..., s: bool | int | float = ..., value: bool | int | float = ..., v: bool | int | float = ...): ...
def polyColorPerVertex(*args, alpha: bool | int | float = ..., a: bool | int | float = ..., clamped: bool | int = ..., cla: bool | int = ..., colorB: bool | int | float = ..., b: bool | int | float = ..., colorDisplayOption: bool | int = ..., cdo: bool | int = ..., colorG: bool | int | float = ..., g: bool | int | float = ..., colorR: bool | int | float = ..., r: bool | int | float = ..., colorRGB: bool | int | Tuple[float, float, float] = ..., rgb: bool | int | Tuple[float, float, float] = ..., edit: bool | int = ..., e: bool | int = ..., notUndoable: bool | int = ..., nun: bool | int = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., rel: bool | int = ..., remove: bool | int = ..., rem: bool | int = ..., representation: bool | int | int = ..., rpt: bool | int | int = ...): ...

def polyColorSet(*args, allColorSets: bool | int = ..., acs: bool | int = ..., clamped: bool | int = ..., cla: bool | int = ..., colorSet: bool | int | _util.ProxyUnicode | str = ..., cs: bool | int | _util.ProxyUnicode | str = ..., copy: bool | int = ..., cp: bool | int = ..., create: bool | int = ..., cr: bool | int = ..., currentColorSet: bool | int = ..., ccs: bool | int = ..., currentPerInstanceSet: bool | int = ..., cpi: bool | int = ..., delete: bool | int = ..., d: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., newColorSet: bool | int | _util.ProxyUnicode | str = ..., nc: bool | int | _util.ProxyUnicode | str = ..., perInstance: bool | int = ..., pi: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rename: bool | int = ..., rn: bool | int = ..., representation: bool | int | _util.ProxyUnicode | str = ..., rpt: bool | int | _util.ProxyUnicode | str = ..., shareInstances: bool | int = ..., si: bool | int = ..., unshared: bool | int = ..., us: bool | int = ...) -> Any: ...
def polyCompare(*args, colorSetIndices: bool | int = ..., ic: bool | int = ..., colorSets: bool | int = ..., c: bool | int = ..., edges: bool | int = ..., e: bool | int = ..., faceDesc: bool | int = ..., fd: bool | int = ..., userNormals: bool | int = ..., un: bool | int = ..., uvSetIndices: bool | int = ..., iuv: bool | int = ..., uvSets: bool | int = ..., uv: bool | int = ..., vertices: bool | int = ..., v: bool | int = ...) -> Any: ...

def polyCone(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int | int = ..., cuv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., height: bool | int | float = ..., h: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., roundCap: bool | int = ..., rcp: bool | int = ..., subdivisionsAxis: bool | int | int = ..., sa: bool | int | int = ..., subdivisionsCap: bool | int | int = ..., sc: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., subdivisionsX: bool | int | int = ..., sx: bool | int | int = ..., subdivisionsY: bool | int | int = ..., sy: bool | int | int = ..., subdivisionsZ: bool | int | int = ..., sz: bool | int | int = ..., texture: bool | int = ..., tx: bool | int = ...): ...
def polyConnectComponents(*args, adjustEdgeFlow: bool | int | float = ..., aef: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertWithEdgeFlow: bool | int = ..., ief: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...

def polyContourProjection(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., flipRails: bool | int = ..., fr: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., method: bool | int | int = ..., m: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset0: bool | int | float = ..., o0: bool | int | float = ..., offset1: bool | int | float = ..., o1: bool | int | float = ..., offset2: bool | int | float = ..., o2: bool | int | float = ..., offset3: bool | int | float = ..., o3: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., reduceShear: bool | int | float = ..., rs: bool | int | float = ..., smoothness0: bool | int | float = ..., s0: bool | int | float = ..., smoothness1: bool | int | float = ..., s1: bool | int | float = ..., smoothness2: bool | int | float = ..., s2: bool | int | float = ..., smoothness3: bool | int | float = ..., s3: bool | int | float = ..., userDefinedCorners: bool | int = ..., udc: bool | int = ..., uvSetName: _util.ProxyUnicode | str = ..., uvs: _util.ProxyUnicode | str = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...

def polyCopyUV(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., uvSetName: _util.ProxyUnicode | str = ..., uvs: _util.ProxyUnicode | str = ..., uvSetNameInput: bool | int | _util.ProxyUnicode | str = ..., uvi: bool | int | _util.ProxyUnicode | str = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...
def polyCrease(*args, createHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., operation: bool | int | int = ..., op: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., relativeValue: bool | int | float = ..., rv: bool | int | float = ..., value: bool | int | float | List[float] = ..., v: bool | int | float | List[float] = ..., vertexValue: bool | int | float | List[float] = ..., vv: bool | int | float | List[float] = ...): ...

def polyCreateFacet(*args, constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., hole: bool | int | List[bool | int] = ..., hl: bool | int | List[bool | int] = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., point: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., p: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., subdivision: bool | int | int = ..., s: bool | int | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ...) -> Any: ...

def polyCube(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int | int = ..., cuv: bool | int | int = ..., depth: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., height: bool | int | float = ..., h: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., subdivisionsDepth: bool | int | int = ..., sd: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., subdivisionsWidth: bool | int | int = ..., sw: bool | int | int = ..., subdivisionsX: bool | int | int = ..., sx: bool | int | int = ..., subdivisionsY: bool | int | int = ..., sy: bool | int | int = ..., subdivisionsZ: bool | int | int = ..., sz: bool | int | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ..., width: bool | int | float = ..., w: bool | int | float = ...): ...
def polyCut(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., cutPlaneCenter: bool | int | Tuple[float, float, float] = ..., pc: bool | int | Tuple[float, float, float] = ..., cutPlaneCenterX: bool | int | float = ..., pcx: bool | int | float = ..., cutPlaneCenterY: bool | int | float = ..., pcy: bool | int | float = ..., cutPlaneCenterZ: bool | int | float = ..., pcz: bool | int | float = ..., cutPlaneHeight: bool | int | float = ..., ph: bool | int | float = ..., cutPlaneRotate: bool | int | Tuple[float, float, float] = ..., ro: bool | int | Tuple[float, float, float] = ..., cutPlaneRotateX: bool | int | float = ..., rx: bool | int | float = ..., cutPlaneRotateY: bool | int | float = ..., ry: bool | int | float = ..., cutPlaneRotateZ: bool | int | float = ..., rz: bool | int | float = ..., cutPlaneSize: bool | int | Tuple[float, float] = ..., ps: bool | int | Tuple[float, float] = ..., cutPlaneWidth: bool | int | float = ..., pw: bool | int | float = ..., cuttingDirection: _util.ProxyUnicode | str = ..., cd: _util.ProxyUnicode | str = ..., deleteFaces: bool | int = ..., df: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., extractFaces: bool | int = ..., ef: bool | int = ..., extractOffset: bool | int | Tuple[float, float, float] = ..., eo: bool | int | Tuple[float, float, float] = ..., extractOffsetX: bool | int | float = ..., eox: bool | int | float = ..., extractOffsetY: bool | int | float = ..., eoy: bool | int | float = ..., extractOffsetZ: bool | int | float = ..., eoz: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., onObject: bool | int = ..., oo: bool | int = ..., query: bool | int = ..., q: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...
def polyCylinder(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int | int = ..., cuv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., height: bool | int | float = ..., h: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., roundCap: bool | int = ..., rcp: bool | int = ..., subdivisionsAxis: bool | int | int = ..., sa: bool | int | int = ..., subdivisionsCaps: bool | int | int = ..., sc: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., subdivisionsX: bool | int | int = ..., sx: bool | int | int = ..., subdivisionsY: bool | int | int = ..., sy: bool | int | int = ..., subdivisionsZ: bool | int | int = ..., sz: bool | int | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ...): ...

def polyCylindricalProjection(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., imageCenter: bool | int | Tuple[float, float] = ..., ic: bool | int | Tuple[float, float] = ..., imageCenterX: bool | int | float = ..., icx: bool | int | float = ..., imageCenterY: bool | int | float = ..., icy: bool | int | float = ..., imageScale: bool | int | Tuple[float, float] = ..., imageScaleU: bool | int | float = ..., isu: bool | int | float = ..., imageScaleV: bool | int | float = ..., isv: bool | int | float = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., keepImageRatio: bool | int = ..., kir: bool | int = ..., mapDirection: _util.ProxyUnicode | str = ..., md: _util.ProxyUnicode | str = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., perInstance: bool | int = ..., pi: bool | int = ..., projectionCenter: bool | int | Tuple[float, float, float] = ..., pc: bool | int | Tuple[float, float, float] = ..., projectionCenterX: bool | int | float = ..., pcx: bool | int | float = ..., projectionCenterY: bool | int | float = ..., pcy: bool | int | float = ..., projectionCenterZ: bool | int | float = ..., pcz: bool | int | float = ..., projectionHeight: bool | int | float = ..., ph: bool | int | float = ..., projectionHorizontalSweep: bool | int | float = ..., phs: bool | int | float = ..., projectionScale: bool | int | Tuple[float, float] = ..., ps: bool | int | Tuple[float, float] = ..., projectionScaleU: bool | int | float = ..., psu: bool | int | float = ..., projectionScaleV: bool | int | float = ..., psv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., rotate: Tuple[float, float, float] = ..., ro: Tuple[float, float, float] = ..., rotateX: float = ..., rx: float = ..., rotateY: float = ..., ry: float = ..., rotateZ: float = ..., rz: float = ..., rotationAngle: bool | int | float = ..., ra: bool | int | float = ..., seamCorrect: bool | int = ..., sc: bool | int = ..., smartFit: bool | int = ..., sf: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...

def polyDelEdge(*args, caching: bool | int = ..., cch: bool | int = ..., cleanVertices: bool | int = ..., cv: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...
def polyDelFacet(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...
def polyDelVertex(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...

def polyDuplicateAndConnect(*args, removeOriginalFromShaders: bool | int = ..., ros: bool | int = ..., renameChildren: bool | int = ..., rc: bool | int = ...) -> Any: ...

def polyDuplicateEdge(*args, adjustEdgeFlow: bool | int | float = ..., aef: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., deleteEdge: bool | int = ..., de: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endVertexOffset: bool | int | float = ..., evo: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertWithEdgeFlow: bool | int = ..., ief: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset: float = ..., of: float = ..., query: bool | int = ..., q: bool | int = ..., smoothingAngle: bool | int | float = ..., sma: bool | int | float = ..., splitType: bool | int | int = ..., stp: bool | int | int = ..., startVertexOffset: bool | int | float = ..., svo: bool | int | float = ...): ...
def polyEditEdgeFlow(*args, adjustEdgeFlow: float = ..., aef: float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edgeFlow: bool | int = ..., ef: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...

def polyEditUV(*args, angle: bool | int | float = ..., a: bool | int | float = ..., pivotU: bool | int | float = ..., pu: bool | int | float = ..., pivotV: bool | int | float = ..., pv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ..., rotateRatio: bool | int | float = ..., rr: bool | int | float = ..., rotation: bool | int = ..., rot: bool | int = ..., scale: bool | int = ..., s: bool | int = ..., scaleU: bool | int | float = ..., su: bool | int | float = ..., scaleV: bool | int | float = ..., sv: bool | int | float = ..., uValue: bool | int | float = ..., u: bool | int | float = ..., uvSetName: bool | int | _util.ProxyUnicode | str = ..., uvs: bool | int | _util.ProxyUnicode | str = ..., vValue: bool | int | float = ..., v: bool | int | float = ...) -> Any: ...
def polyEditUVShell(*args, angle: bool | int | float = ..., a: bool | int | float = ..., pivotU: bool | int | float = ..., pu: bool | int | float = ..., pivotV: bool | int | float = ..., pv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ..., rotateRatio: bool | int | float = ..., rr: bool | int | float = ..., rotation: bool | int = ..., rot: bool | int = ..., scale: bool | int = ..., s: bool | int = ..., scaleU: bool | int | float = ..., su: bool | int | float = ..., scaleV: bool | int | float = ..., sv: bool | int | float = ..., uValue: bool | int | float = ..., u: bool | int | float = ..., uvSetName: bool | int | _util.ProxyUnicode | str = ..., uvs: bool | int | _util.ProxyUnicode | str = ..., vValue: bool | int | float = ..., v: bool | int | float = ...) -> Any: ...
def polyEvaluate(*args, accurateEvaluation: bool | int = ..., ae: bool | int = ..., activeShells: bool | int = ..., activeUVShells: bool | int = ..., aus: bool | int = ..., area: bool | int = ..., a: bool | int = ..., boundingBox: bool | int = ..., b: bool | int = ..., boundingBox2d: bool | int = ..., b2: bool | int = ..., boundingBoxComponent: bool | int = ..., bc: bool | int = ..., boundingBoxComponent2d: bool | int = ..., bc2: bool | int = ..., displayStats: bool | int = ..., ds: bool | int = ..., edge: bool | int = ..., e: bool | int = ..., edgeComponent: bool | int = ..., ec: bool | int = ..., face: bool | int = ..., f: bool | int = ..., faceArea: bool | int = ..., fa: bool | int = ..., faceComponent: bool | int = ..., fc: bool | int = ..., format: bool | int = ..., fmt: bool | int = ..., shell: bool | int = ..., s: bool | int = ..., triangle: bool | int = ..., t: bool | int = ..., triangleComponent: bool | int = ..., tc: bool | int = ..., uvArea: bool | int = ..., uva: bool | int = ..., uvComponent: bool | int = ..., uvc: bool | int = ..., uvEdgePairs: bool | int = ..., uep: bool | int = ..., uvFaceArea: bool | int = ..., ufa: bool | int = ..., uvSetName: _util.ProxyUnicode | str = ..., uvs: _util.ProxyUnicode | str = ..., uvShell: bool | int = ..., us: bool | int = ..., uvShellIds: bool | int = ..., usi: bool | int = ..., uvcoord: bool | int = ..., uv: bool | int = ..., uvsInShell: int = ..., uis: int = ..., vertex: bool | int = ..., v: bool | int = ..., vertexComponent: bool | int = ..., vc: bool | int = ..., worldArea: bool | int = ..., wa: bool | int = ..., worldFaceArea: bool | int = ..., wfa: bool | int = ...) -> Any: ...

def polyExtrudeEdge(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createCurve: bool | int = ..., cc: bool | int = ..., divisions: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gain: bool | int | float | List[float] = ..., ga: bool | int | float | List[float] = ..., inputCurve: _general.PyNode | str = ..., inc: _general.PyNode | str = ..., keepFacesTogether: bool | int = ..., kft: bool | int = ..., localCenter: bool | int | int = ..., lc: bool | int | int = ..., localDirection: bool | int | Tuple[float, float, float] = ..., ld: bool | int | Tuple[float, float, float] = ..., localDirectionX: bool | int | float = ..., ldx: bool | int | float = ..., localDirectionY: bool | int | float = ..., ldy: bool | int | float = ..., localDirectionZ: bool | int | float = ..., ldz: bool | int | float = ..., localRotate: bool | int | Tuple[float, float, float] = ..., lr: bool | int | Tuple[float, float, float] = ..., localRotateX: bool | int | float = ..., lrx: bool | int | float = ..., localRotateY: bool | int | float = ..., lry: bool | int | float = ..., localRotateZ: bool | int | float = ..., lrz: bool | int | float = ..., localScale: bool | int | Tuple[float, float, float] = ..., ls: bool | int | Tuple[float, float, float] = ..., localScaleX: bool | int | float = ..., lsx: bool | int | float = ..., localScaleY: bool | int | float = ..., lsy: bool | int | float = ..., localScaleZ: bool | int | float = ..., lsz: bool | int | float = ..., localTranslate: bool | int | Tuple[float, float, float] = ..., lt: bool | int | Tuple[float, float, float] = ..., localTranslateX: bool | int | float = ..., ltx: bool | int | float = ..., localTranslateY: bool | int | float = ..., lty: bool | int | float = ..., localTranslateZ: bool | int | float = ..., ltz: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset: bool | int | float = ..., off: bool | int | float = ..., pivot: bool | int | Tuple[float, float, float] = ..., pvt: bool | int | Tuple[float, float, float] = ..., pivotX: bool | int | float = ..., pvx: bool | int | float = ..., pivotY: bool | int | float = ..., pvy: bool | int | float = ..., pivotZ: bool | int | float = ..., pvz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., rotate: bool | int | Tuple[float, float, float] = ..., ro: bool | int | Tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., scale: bool | int | Tuple[float, float, float] = ..., s: bool | int | Tuple[float, float, float] = ..., scaleX: bool | int | float = ..., sx: bool | int | float = ..., scaleY: bool | int | float = ..., sy: bool | int | float = ..., scaleZ: bool | int | float = ..., sz: bool | int | float = ..., smoothingAngle: bool | int | float = ..., sma: bool | int | float = ..., taper: bool | int | float = ..., tp: bool | int | float = ..., taperCurve_FloatValue: bool | int | float = ..., cfv: bool | int | float = ..., taperCurve_Interp: bool | int | int = ..., ci: bool | int | int = ..., taperCurve_Position: bool | int | float = ..., cp: bool | int | float = ..., thickness: bool | int | float = ..., tk: bool | int | float = ..., translate: bool | int | Tuple[float, float, float] = ..., t: bool | int | Tuple[float, float, float] = ..., translateX: bool | int | float = ..., tx: bool | int | float = ..., translateY: bool | int | float = ..., ty: bool | int | float = ..., translateZ: bool | int | float = ..., tz: bool | int | float = ..., twist: bool | int | float = ..., twt: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def polyExtrudeFacet(*args, attraction: bool | int | float = ..., att: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createCurve: bool | int = ..., cc: bool | int = ..., divisions: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gain: bool | int | float | List[float] = ..., ga: bool | int | float | List[float] = ..., gravity: bool | int | Tuple[float, float, float] = ..., g: bool | int | Tuple[float, float, float] = ..., gravityX: bool | int | float = ..., gx: bool | int | float = ..., gravityY: bool | int | float = ..., gy: bool | int | float = ..., gravityZ: bool | int | float = ..., gz: bool | int | float = ..., inputCurve: _general.PyNode | str = ..., inc: _general.PyNode | str = ..., keepFacesTogether: bool | int = ..., kft: bool | int = ..., keepFacetTogether: bool | int = ..., xft: bool | int = ..., localCenter: bool | int | int = ..., lc: bool | int | int = ..., localDirection: bool | int | Tuple[float, float, float] = ..., ld: bool | int | Tuple[float, float, float] = ..., localDirectionX: bool | int | float = ..., ldx: bool | int | float = ..., localDirectionY: bool | int | float = ..., ldy: bool | int | float = ..., localDirectionZ: bool | int | float = ..., ldz: bool | int | float = ..., localRotate: bool | int | Tuple[float, float, float] = ..., lr: bool | int | Tuple[float, float, float] = ..., localRotateX: bool | int | float = ..., lrx: bool | int | float = ..., localRotateY: bool | int | float = ..., lry: bool | int | float = ..., localRotateZ: bool | int | float = ..., lrz: bool | int | float = ..., localScale: bool | int | Tuple[float, float, float] = ..., ls: bool | int | Tuple[float, float, float] = ..., localScaleX: bool | int | float = ..., lsx: bool | int | float = ..., localScaleY: bool | int | float = ..., lsy: bool | int | float = ..., localScaleZ: bool | int | float = ..., lsz: bool | int | float = ..., localTranslate: bool | int | Tuple[float, float, float] = ..., lt: bool | int | Tuple[float, float, float] = ..., localTranslateX: bool | int | float = ..., ltx: bool | int | float = ..., localTranslateY: bool | int | float = ..., lty: bool | int | float = ..., localTranslateZ: bool | int | float = ..., ltz: bool | int | float = ..., magnX: bool | int | float = ..., mx: bool | int | float = ..., magnY: bool | int | float = ..., my: bool | int | float = ..., magnZ: bool | int | float = ..., mz: bool | int | float = ..., magnet: bool | int | Tuple[float, float, float] = ..., m: bool | int | Tuple[float, float, float] = ..., maya2012: bool | int = ..., m12: bool | int = ..., maya2018: bool | int = ..., m18: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., newThickness: bool | int = ..., ntk: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset: bool | int | float = ..., off: bool | int | float = ..., pivot: bool | int | Tuple[float, float, float] = ..., pvt: bool | int | Tuple[float, float, float] = ..., pivotX: bool | int | float = ..., pvx: bool | int | float = ..., pivotY: bool | int | float = ..., pvy: bool | int | float = ..., pivotZ: bool | int | float = ..., pvz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., reverseAllFaces: bool | int = ..., raf: bool | int = ..., rotate: bool | int | Tuple[float, float, float] = ..., ro: bool | int | Tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., scale: bool | int | Tuple[float, float, float] = ..., s: bool | int | Tuple[float, float, float] = ..., scaleX: bool | int | float = ..., sx: bool | int | float = ..., scaleY: bool | int | float = ..., sy: bool | int | float = ..., scaleZ: bool | int | float = ..., sz: bool | int | float = ..., smoothingAngle: bool | int | float = ..., sma: bool | int | float = ..., taper: bool | int | float = ..., tp: bool | int | float = ..., taperCurve_FloatValue: bool | int | float = ..., cfv: bool | int | float = ..., taperCurve_Interp: bool | int | int = ..., ci: bool | int | int = ..., taperCurve_Position: bool | int | float = ..., cp: bool | int | float = ..., thickness: bool | int | float = ..., tk: bool | int | float = ..., translate: bool | int | Tuple[float, float, float] = ..., t: bool | int | Tuple[float, float, float] = ..., translateX: bool | int | float = ..., tx: bool | int | float = ..., translateY: bool | int | float = ..., ty: bool | int | float = ..., translateZ: bool | int | float = ..., tz: bool | int | float = ..., twist: bool | int | float = ..., twt: bool | int | float = ..., weight: bool | int | float = ..., w: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...

def polyExtrudeVertex(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., divisions: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., length: bool | int | float = ..., l: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., width: bool | int | float = ..., w: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...
def polyFlipEdge(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ...): ...
def polyFlipUV(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., cutUV: bool | int = ..., cut: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., flipType: bool | int | int = ..., ft: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., local: bool | int = ..., l: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., pivotU: bool | int | float = ..., pu: bool | int | float = ..., pivotV: bool | int | float = ..., pv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., usePivot: bool | int = ..., up: bool | int = ..., uvSetName: _util.ProxyUnicode | str = ..., uvs: _util.ProxyUnicode | str = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def polyForceUV(*args, cameraProjection: bool | int = ..., cp: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., flipHorizontal: bool | int = ..., fh: bool | int = ..., flipVertical: bool | int = ..., fv: bool | int = ..., g: bool | int = ..., local: bool | int = ..., l: bool | int = ..., normalize: _util.ProxyUnicode | str = ..., nor: _util.ProxyUnicode | str = ..., numItems: int = ..., ni: int = ..., preserveAspectRatio: bool | int = ..., par: bool | int = ..., unitize: bool | int = ..., uni: bool | int = ..., unshare: bool | int = ..., u: bool | int = ..., uvSetName: _util.ProxyUnicode | str = ..., uvs: _util.ProxyUnicode | str = ...) -> Any: ...
def polyGeoSampler(*args, alphaBlend: _util.ProxyUnicode | str = ..., abl: _util.ProxyUnicode | str = ..., averageColor: bool | int = ..., ac: bool | int = ..., clampAlphaMax: float = ..., amx: float = ..., clampAlphaMin: float = ..., amn: float = ..., clampRGBMax: Tuple[float, float, float] = ..., cmx: Tuple[float, float, float] = ..., clampRGBMin: Tuple[float, float, float] = ..., cmn: Tuple[float, float, float] = ..., colorBlend: _util.ProxyUnicode | str = ..., cbl: _util.ProxyUnicode | str = ..., colorDisplayOption: bool | int = ..., cdo: bool | int = ..., computeShadows: bool | int = ..., cs: bool | int = ..., displaceGeometry: bool | int = ..., dg: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., flatShading: bool | int = ..., fs: bool | int = ..., ignoreDoubleSided: bool | int = ..., ids: bool | int = ..., lightingOnly: bool | int = ..., lo: bool | int = ..., reuseShadows: bool | int = ..., rs: bool | int = ..., sampleByFace: bool | int = ..., bf: bool | int = ..., scaleFactor: float = ..., sf: float = ..., shareUV: bool | int = ..., su: bool | int = ..., useLightShadows: bool | int = ..., ul: bool | int = ...) -> Any: ...

def polyHelix(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., coils: bool | int | float = ..., c: bool | int | float = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int | int = ..., cuv: bool | int | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., height: bool | int | float = ..., h: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., roundCap: bool | int = ..., rcp: bool | int = ..., subdivisionsAxis: bool | int | int = ..., sa: bool | int | int = ..., subdivisionsCaps: bool | int | int = ..., sc: bool | int | int = ..., subdivisionsCoil: bool | int | int = ..., sco: bool | int | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ..., useOldInitBehaviour: bool | int = ..., oib: bool | int = ..., width: bool | int | float = ..., w: bool | int | float = ...): ...

def polyHole(*args, assignHole: bool | int = ..., ah: bool | int = ..., createHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyInfo(*args, edgeToFace: bool | int = ..., ef: bool | int = ..., edgeToVertex: bool | int = ..., ev: bool | int = ..., faceNormals: bool | int = ..., fn: bool | int = ..., faceToEdge: bool | int = ..., fe: bool | int = ..., faceToVertex: bool | int = ..., fv: bool | int = ..., invalidEdges: bool | int = ..., ie: bool | int = ..., invalidVertices: bool | int = ..., iv: bool | int = ..., laminaFaces: bool | int = ..., lf: bool | int = ..., nonManifoldEdges: bool | int = ..., nme: bool | int = ..., nonManifoldUVEdges: bool | int = ..., nue: bool | int = ..., nonManifoldUVs: bool | int = ..., nuv: bool | int = ..., nonManifoldVertices: bool | int = ..., nmv: bool | int = ..., vertexToEdge: bool | int = ..., ve: bool | int = ..., vertexToFace: bool | int = ..., vf: bool | int = ...) -> Any: ...

def polyInstallAction(*args, commandName: bool | int = ..., cn: bool | int = ..., convertSelection: bool | int = ..., cs: bool | int = ..., installConstraint: bool | int = ..., ic: bool | int = ..., installDisplay: bool | int = ..., id: bool | int = ..., keepInstances: bool | int = ..., ki: bool | int = ..., query: bool | int = ..., q: bool | int = ..., uninstallConstraint: bool | int = ..., uc: bool | int = ..., uninstallDisplay: bool | int = ..., ud: bool | int = ...): ...
def polyLayoutUV(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., flipReversed: bool | int = ..., fr: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gridU: int = ..., gu: int = ..., gridV: int = ..., gv: int = ..., layout: bool | int | int = ..., l: bool | int | int = ..., layoutMethod: bool | int | int = ..., lm: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., percentageSpace: bool | int | float = ..., ps: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., rotateForBestFit: bool | int | int = ..., rbf: bool | int | int = ..., scale: bool | int | int = ..., sc: bool | int | int = ..., separate: bool | int | int = ..., se: bool | int | int = ..., uvSetName: _util.ProxyUnicode | str = ..., uvs: _util.ProxyUnicode | str = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def polyListComponentConversion(*args, border: bool | int = ..., bo: bool | int = ..., fromEdge: bool | int = ..., fe: bool | int = ..., fromFace: bool | int = ..., ff: bool | int = ..., fromUV: bool | int = ..., fuv: bool | int = ..., fromVertex: bool | int = ..., fv: bool | int = ..., fromVertexFace: bool | int = ..., fvf: bool | int = ..., internal: bool | int = ..., toEdge: bool | int = ..., te: bool | int = ..., toFace: bool | int = ..., tf: bool | int = ..., toUV: bool | int = ..., tuv: bool | int = ..., toVertex: bool | int = ..., tv: bool | int = ..., toVertexFace: bool | int = ..., tvf: bool | int = ..., uvShell: bool | int = ..., uvs: bool | int = ..., vertexFaceAllEdges: bool | int = ..., vfa: bool | int = ...) -> Any: ...

def polyMapCut(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., moveRatio: float = ..., mr: float = ..., moveratio: bool | int | float = ..., mvr: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., usePinning: bool | int = ..., pin: bool | int = ...): ...
def polyMapDel(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...
def polyMapSew(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., usePinning: bool | int = ..., pin: bool | int = ...): ...
def polyMapSewMove(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., limitPieceSize: bool | int = ..., lps: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberFaces: bool | int | int = ..., nf: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., uvSetName: _util.ProxyUnicode | str = ..., uvs: _util.ProxyUnicode | str = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...
def polyMergeEdge(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., firstEdge: bool | int | int = ..., fe: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., mergeMode: bool | int | int = ..., mm: bool | int | int = ..., mergeTexture: bool | int = ..., mt: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., secondEdge: bool | int | int = ..., se: bool | int | int = ...): ...

def polyMergeFacet(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., firstFacet: bool | int | int = ..., ff: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., mergeMode: bool | int | int = ..., mm: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., secondFacet: bool | int | int = ..., sf: bool | int | int = ...) -> Any: ...

def polyMergeUV(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., distance: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., uvSetName: _util.ProxyUnicode | str = ..., uvs: _util.ProxyUnicode | str = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def polyMergeVertex(*args, alwaysMergeTwoVertices: bool | int = ..., am: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., distance: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., mergeToComponents: bool | int | _util.ProxyUnicode | str = ..., mtc: bool | int | _util.ProxyUnicode | str = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., texture: bool | int = ..., tx: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyMirrorFace(*args, axis: bool | int | int = ..., a: bool | int | int = ..., axisDirection: bool | int | int = ..., ad: bool | int | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., cutMesh: bool | int = ..., cm: bool | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., firstNewFace: int = ..., fnf: int = ..., flipUVs: int = ..., fuv: int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepVertexIDs: bool | int = ..., kv: bool | int = ..., lastNewFace: int = ..., lnf: int = ..., mergeMode: bool | int | int = ..., mm: bool | int | int = ..., mergeThreshold: bool | int | float = ..., mt: bool | int | float = ..., mergeThresholdType: bool | int | int = ..., mtt: bool | int | int = ..., mirrorAxis: bool | int | int = ..., ma: bool | int | int = ..., mirrorPlaneCenter: Tuple[float, float, float] = ..., pc: Tuple[float, float, float] = ..., mirrorPlaneCenterX: float = ..., pcx: float = ..., mirrorPlaneCenterY: float = ..., pcy: float = ..., mirrorPlaneCenterZ: float = ..., pcz: float = ..., mirrorPlaneRotate: Tuple[float, float, float] = ..., ro: Tuple[float, float, float] = ..., mirrorPlaneRotateX: float = ..., rx: float = ..., mirrorPlaneRotateY: float = ..., ry: float = ..., mirrorPlaneRotateZ: float = ..., rz: float = ..., mirrorPosition: bool | int | float = ..., mps: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., pivot: bool | int | Tuple[float, float, float] = ..., p: bool | int | Tuple[float, float, float] = ..., pivotX: bool | int | float = ..., px: bool | int | float = ..., pivotY: bool | int | float = ..., py: bool | int | float = ..., pivotZ: bool | int | float = ..., pz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., scalePivotX: float = ..., spx: float = ..., scalePivotY: float = ..., spy: float = ..., scalePivotZ: float = ..., spz: float = ..., smoothingAngle: float = ..., sa: float = ..., userSpecifiedPivot: bool | int = ..., pu: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...

def polyMoveEdge(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gain: bool | int | float | List[float] = ..., ga: bool | int | float | List[float] = ..., localCenter: bool | int | int = ..., lc: bool | int | int = ..., localDirection: bool | int | Tuple[float, float, float] = ..., ld: bool | int | Tuple[float, float, float] = ..., localDirectionX: bool | int | float = ..., ldx: bool | int | float = ..., localDirectionY: bool | int | float = ..., ldy: bool | int | float = ..., localDirectionZ: bool | int | float = ..., ldz: bool | int | float = ..., localRotate: bool | int | Tuple[float, float, float] = ..., lr: bool | int | Tuple[float, float, float] = ..., localRotateX: bool | int | float = ..., lrx: bool | int | float = ..., localRotateY: bool | int | float = ..., lry: bool | int | float = ..., localRotateZ: bool | int | float = ..., lrz: bool | int | float = ..., localScale: bool | int | Tuple[float, float, float] = ..., ls: bool | int | Tuple[float, float, float] = ..., localScaleX: bool | int | float = ..., lsx: bool | int | float = ..., localScaleY: bool | int | float = ..., lsy: bool | int | float = ..., localScaleZ: bool | int | float = ..., lsz: bool | int | float = ..., localTranslate: bool | int | Tuple[float, float, float] = ..., lt: bool | int | Tuple[float, float, float] = ..., localTranslateX: bool | int | float = ..., ltx: bool | int | float = ..., localTranslateY: bool | int | float = ..., lty: bool | int | float = ..., localTranslateZ: bool | int | float = ..., ltz: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., pivot: bool | int | Tuple[float, float, float] = ..., pvt: bool | int | Tuple[float, float, float] = ..., pivotX: bool | int | float = ..., pvx: bool | int | float = ..., pivotY: bool | int | float = ..., pvy: bool | int | float = ..., pivotZ: bool | int | float = ..., pvz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., rotate: bool | int | Tuple[float, float, float] = ..., ro: bool | int | Tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., scale: bool | int | Tuple[float, float, float] = ..., s: bool | int | Tuple[float, float, float] = ..., scaleX: bool | int | float = ..., sx: bool | int | float = ..., scaleY: bool | int | float = ..., sy: bool | int | float = ..., scaleZ: bool | int | float = ..., sz: bool | int | float = ..., translate: bool | int | Tuple[float, float, float] = ..., t: bool | int | Tuple[float, float, float] = ..., translateX: bool | int | float = ..., tx: bool | int | float = ..., translateY: bool | int | float = ..., ty: bool | int | float = ..., translateZ: bool | int | float = ..., tz: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def polyMoveFacet(*args, attraction: bool | int | float = ..., att: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gain: bool | int | float | List[float] = ..., ga: bool | int | float | List[float] = ..., gravity: bool | int | Tuple[float, float, float] = ..., g: bool | int | Tuple[float, float, float] = ..., gravityX: bool | int | float = ..., gx: bool | int | float = ..., gravityY: bool | int | float = ..., gy: bool | int | float = ..., gravityZ: bool | int | float = ..., gz: bool | int | float = ..., localCenter: bool | int | int = ..., lc: bool | int | int = ..., localDirection: bool | int | Tuple[float, float, float] = ..., ld: bool | int | Tuple[float, float, float] = ..., localDirectionX: bool | int | float = ..., ldx: bool | int | float = ..., localDirectionY: bool | int | float = ..., ldy: bool | int | float = ..., localDirectionZ: bool | int | float = ..., ldz: bool | int | float = ..., localRotate: bool | int | Tuple[float, float, float] = ..., lr: bool | int | Tuple[float, float, float] = ..., localRotateX: bool | int | float = ..., lrx: bool | int | float = ..., localRotateY: bool | int | float = ..., lry: bool | int | float = ..., localRotateZ: bool | int | float = ..., lrz: bool | int | float = ..., localScale: bool | int | Tuple[float, float, float] = ..., ls: bool | int | Tuple[float, float, float] = ..., localScaleX: bool | int | float = ..., lsx: bool | int | float = ..., localScaleY: bool | int | float = ..., lsy: bool | int | float = ..., localScaleZ: bool | int | float = ..., lsz: bool | int | float = ..., localTranslate: bool | int | Tuple[float, float, float] = ..., lt: bool | int | Tuple[float, float, float] = ..., localTranslateX: bool | int | float = ..., ltx: bool | int | float = ..., localTranslateY: bool | int | float = ..., lty: bool | int | float = ..., localTranslateZ: bool | int | float = ..., ltz: bool | int | float = ..., magnX: bool | int | float = ..., mx: bool | int | float = ..., magnY: bool | int | float = ..., my: bool | int | float = ..., magnZ: bool | int | float = ..., mz: bool | int | float = ..., magnet: bool | int | Tuple[float, float, float] = ..., m: bool | int | Tuple[float, float, float] = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset: bool | int | float = ..., off: bool | int | float = ..., pivot: bool | int | Tuple[float, float, float] = ..., pvt: bool | int | Tuple[float, float, float] = ..., pivotX: bool | int | float = ..., pvx: bool | int | float = ..., pivotY: bool | int | float = ..., pvy: bool | int | float = ..., pivotZ: bool | int | float = ..., pvz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., rotate: bool | int | Tuple[float, float, float] = ..., ro: bool | int | Tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., scale: bool | int | Tuple[float, float, float] = ..., s: bool | int | Tuple[float, float, float] = ..., scaleX: bool | int | float = ..., sx: bool | int | float = ..., scaleY: bool | int | float = ..., sy: bool | int | float = ..., scaleZ: bool | int | float = ..., sz: bool | int | float = ..., translate: bool | int | Tuple[float, float, float] = ..., t: bool | int | Tuple[float, float, float] = ..., translateX: bool | int | float = ..., tx: bool | int | float = ..., translateY: bool | int | float = ..., ty: bool | int | float = ..., translateZ: bool | int | float = ..., tz: bool | int | float = ..., weight: bool | int | float = ..., w: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...

def polyMoveFacetUV(*args, axisLen: bool | int | Tuple[float, float] = ..., l: bool | int | Tuple[float, float] = ..., axisLenX: bool | int | float = ..., lx: bool | int | float = ..., axisLenY: bool | int | float = ..., ly: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., pivot: bool | int | Tuple[float, float] = ..., pvt: bool | int | Tuple[float, float] = ..., pivotU: bool | int | float = ..., pvu: bool | int | float = ..., pivotV: bool | int | float = ..., pvv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., rotationAngle: bool | int | float = ..., ra: bool | int | float = ..., scale: bool | int | Tuple[float, float] = ..., s: bool | int | Tuple[float, float] = ..., scaleU: bool | int | float = ..., su: bool | int | float = ..., scaleV: bool | int | float = ..., sv: bool | int | float = ..., translate: bool | int | Tuple[float, float] = ..., t: bool | int | Tuple[float, float] = ..., translateU: bool | int | float = ..., tu: bool | int | float = ..., translateV: bool | int | float = ..., tv: bool | int | float = ...): ...
def polyMoveUV(*args, axisLen: bool | int | Tuple[float, float] = ..., l: bool | int | Tuple[float, float] = ..., axisLenX: bool | int | float = ..., lx: bool | int | float = ..., axisLenY: bool | int | float = ..., ly: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., pivot: bool | int | Tuple[float, float] = ..., pvt: bool | int | Tuple[float, float] = ..., pivotU: bool | int | float = ..., pvu: bool | int | float = ..., pivotV: bool | int | float = ..., pvv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., rotationAngle: bool | int | float = ..., ra: bool | int | float = ..., scale: bool | int | Tuple[float, float] = ..., s: bool | int | Tuple[float, float] = ..., scaleU: bool | int | float = ..., su: bool | int | float = ..., scaleV: bool | int | float = ..., sv: bool | int | float = ..., translate: bool | int | Tuple[float, float] = ..., t: bool | int | Tuple[float, float] = ..., translateU: bool | int | float = ..., tu: bool | int | float = ..., translateV: bool | int | float = ..., tv: bool | int | float = ...): ...
def polyMoveVertex(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gain: bool | int | float | List[float] = ..., ga: bool | int | float | List[float] = ..., localDirection: bool | int | Tuple[float, float, float] = ..., ld: bool | int | Tuple[float, float, float] = ..., localDirectionX: bool | int | float = ..., ldx: bool | int | float = ..., localDirectionY: bool | int | float = ..., ldy: bool | int | float = ..., localDirectionZ: bool | int | float = ..., ldz: bool | int | float = ..., localTranslate: bool | int | Tuple[float, float, float] = ..., lt: bool | int | Tuple[float, float, float] = ..., localTranslateX: bool | int | float = ..., ltx: bool | int | float = ..., localTranslateY: bool | int | float = ..., lty: bool | int | float = ..., localTranslateZ: bool | int | float = ..., ltz: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., pivot: bool | int | Tuple[float, float, float] = ..., pvt: bool | int | Tuple[float, float, float] = ..., pivotX: bool | int | float = ..., pvx: bool | int | float = ..., pivotY: bool | int | float = ..., pvy: bool | int | float = ..., pivotZ: bool | int | float = ..., pvz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., rotate: bool | int | Tuple[float, float, float] = ..., ro: bool | int | Tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., scale: bool | int | Tuple[float, float, float] = ..., s: bool | int | Tuple[float, float, float] = ..., scaleX: bool | int | float = ..., sx: bool | int | float = ..., scaleY: bool | int | float = ..., sy: bool | int | float = ..., scaleZ: bool | int | float = ..., sz: bool | int | float = ..., translate: bool | int | Tuple[float, float, float] = ..., t: bool | int | Tuple[float, float, float] = ..., translateX: bool | int | float = ..., tx: bool | int | float = ..., translateY: bool | int | float = ..., ty: bool | int | float = ..., translateZ: bool | int | float = ..., tz: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def polyMultiLayoutUV(*args, flipReversed: bool | int = ..., fr: bool | int = ..., gridU: int = ..., gu: int = ..., gridV: int = ..., gv: int = ..., layout: int = ..., l: int = ..., layoutMethod: int = ..., lm: int = ..., offsetU: float = ..., ou: float = ..., offsetV: float = ..., ov: float = ..., percentageSpace: float = ..., ps: float = ..., prescale: int = ..., psc: int = ..., rotateForBestFit: int = ..., rbf: int = ..., scale: int = ..., sc: int = ..., sizeU: float = ..., su: float = ..., sizeV: float = ..., sv: float = ..., uvSetName: _util.ProxyUnicode | str = ..., uvs: _util.ProxyUnicode | str = ...) -> Any: ...

def polyNormal(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalMode: bool | int | int = ..., nm: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., userNormalMode: bool | int = ..., unm: bool | int = ...): ...
def polyNormalPerVertex(*args, allLocked: bool | int = ..., al: bool | int = ..., deformable: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., freezeNormal: bool | int = ..., fn: bool | int = ..., normalX: bool | int | float = ..., x: bool | int | float = ..., normalXYZ: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., xyz: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., normalY: bool | int | float = ..., y: bool | int | float = ..., normalZ: bool | int | float = ..., z: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., rel: bool | int = ..., unFreezeNormal: bool | int = ..., ufn: bool | int = ...): ...
def polyNormalizeUV(*args, caching: bool | int = ..., cch: bool | int = ..., centerOnTile: bool | int = ..., cot: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalizeDirection: bool | int | int = ..., nd: bool | int | int = ..., normalizeType: bool | int | int = ..., nt: bool | int | int = ..., preserveAspectRatio: bool | int = ..., pa: bool | int = ..., query: bool | int = ..., q: bool | int = ..., uvSetName: _util.ProxyUnicode | str = ..., uvs: _util.ProxyUnicode | str = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...
def polyOptUvs(*args, applyToShell: bool | int = ..., areaWeight: float = ..., aw: float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., globalBlend: float = ..., gb: float = ..., globalMethodBlend: float = ..., gmb: float = ..., iterations: int = ..., i: int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., optimizeAxis: int = ..., oa: int = ..., pinSelected: bool | int = ..., ps: bool | int = ..., pinUvBorder: bool | int = ..., pub: bool | int = ..., query: bool | int = ..., q: bool | int = ..., scale: float = ..., s: float = ..., stoppingThreshold: float = ..., ss: float = ..., useScale: bool | int = ..., us: bool | int = ..., uvSetName: _util.ProxyUnicode | str = ..., uvs: _util.ProxyUnicode | str = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def polyOptions(*args, activeObjects: bool | int = ..., ao: bool | int = ..., allEdges: bool | int = ..., ae: bool | int = ..., backCullVertex: bool | int = ..., bcv: bool | int = ..., backCulling: bool | int = ..., bc: bool | int = ..., colorMaterialChannel: bool | int | _util.ProxyUnicode | str = ..., cm: bool | int | _util.ProxyUnicode | str = ..., colorShadedDisplay: bool | int = ..., cs: bool | int = ..., displayAlphaAsGreyScale: bool | int = ..., dal: bool | int = ..., displayBlueChannel: bool | int = ..., dbc: bool | int = ..., displayBorder: bool | int = ..., db: bool | int = ..., displayCenter: bool | int = ..., dc: bool | int = ..., displayCreaseEdge: bool | int = ..., dce: bool | int = ..., displayCreaseVertex: bool | int = ..., dcv: bool | int = ..., displayGeometry: bool | int = ..., dg: bool | int = ..., displayGreenChannel: bool | int = ..., dgc: bool | int = ..., displayInvisibleFaces: bool | int = ..., dif: bool | int = ..., displayItemNumbers: bool | int | Tuple[bool | int, bool | int, bool | int, bool | int] = ..., din: bool | int | Tuple[bool | int, bool | int, bool | int, bool | int] = ..., displayMapBorder: bool | int = ..., dmb: bool | int = ..., displayMetadata: bool | int | Tuple[bool | int, bool | int, bool | int] = ..., dmt: bool | int | Tuple[bool | int, bool | int, bool | int] = ..., displayNormal: bool | int = ..., dn: bool | int = ..., displayRedChannel: bool | int = ..., drc: bool | int = ..., displayShellBorder: bool | int = ..., dsb: bool | int = ..., displaySubdComps: bool | int = ..., dsc: bool | int = ..., displayTangent: bool | int = ..., dtn: bool | int = ..., displayTriangle: bool | int = ..., dt: bool | int = ..., displayUVTopology: bool | int = ..., uvt: bool | int = ..., displayUVs: bool | int = ..., duv: bool | int = ..., displayVertex: bool | int = ..., dv: bool | int = ..., displayWarp: bool | int = ..., dw: bool | int = ..., facet: bool | int = ..., f: bool | int = ..., fullBack: bool | int = ..., fb: bool | int = ..., gl: bool | int = ..., hardBack: bool | int = ..., hb: bool | int = ..., hardEdge: bool | int = ..., he: bool | int = ..., hardEdgeColor: bool | int = ..., hec: bool | int = ..., materialBlend: bool | int | _util.ProxyUnicode | str = ..., mb: bool | int | _util.ProxyUnicode | str = ..., newPolymesh: bool | int = ..., np: bool | int = ..., point: bool | int = ..., pt: bool | int = ..., pointFacet: bool | int = ..., pf: bool | int = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ..., reuseTriangles: bool | int = ..., rt: bool | int = ..., sizeBorder: bool | int | float = ..., sb: bool | int | float = ..., sizeNormal: bool | int | float = ..., sn: bool | int | float = ..., sizeUV: bool | int | float = ..., suv: bool | int | float = ..., sizeVertex: bool | int | float = ..., sv: bool | int | float = ..., smoothDrawType: bool | int | int = ..., sdt: bool | int | int = ..., softEdge: bool | int = ..., se: bool | int = ..., vertexNormalMethod: bool | int | int = ..., vnm: bool | int | int = ..., wireBackCulling: bool | int = ..., wbc: bool | int = ...) -> Any: ...
def polyOutput(*args, allValues: bool | int = ..., a: bool | int = ..., color: bool | int = ..., c: bool | int = ..., colorDesc: bool | int = ..., cd: bool | int = ..., edge: bool | int = ..., e: bool | int = ..., edgeFace: bool | int = ..., ef: bool | int = ..., face: bool | int = ..., f: bool | int = ..., faceNorm: bool | int = ..., fn: bool | int = ..., force: bool | int = ..., fo: bool | int = ..., group: bool | int = ..., g: bool | int = ..., noOutput: bool | int = ..., no: bool | int = ..., normDesc: bool | int = ..., nd: bool | int = ..., outputFile: _util.ProxyUnicode | str = ..., of: _util.ProxyUnicode | str = ..., triangle: bool | int = ..., t: bool | int = ..., uvDesc: bool | int = ..., uvd: bool | int = ..., uvValue: bool | int = ..., uv: bool | int = ..., vert: bool | int = ..., v: bool | int = ..., vertEdge: bool | int = ..., ve: bool | int = ..., vertNorm: bool | int = ..., vn: bool | int = ...) -> Any: ...

def polyPinUV(*args, createHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., operation: bool | int | int = ..., op: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., unpinned: bool | int = ..., unp: bool | int = ..., uvSetName: bool | int | _util.ProxyUnicode | str = ..., uvs: bool | int | _util.ProxyUnicode | str = ..., value: bool | int | float | List[float] = ..., v: bool | int | float | List[float] = ...): ...
def polyPipe(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int = ..., cuv: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., height: bool | int | float = ..., h: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., roundCap: bool | int = ..., rcp: bool | int = ..., subdivisionsAxis: bool | int | int = ..., sa: bool | int | int = ..., subdivisionsCaps: bool | int | int = ..., sc: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., texture: bool | int = ..., tx: bool | int = ..., thickness: bool | int | float = ..., t: bool | int | float = ...): ...

def polyPlanarProjection(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., imageCenter: bool | int | Tuple[float, float] = ..., ic: bool | int | Tuple[float, float] = ..., imageCenterX: bool | int | float = ..., icx: bool | int | float = ..., imageCenterY: bool | int | float = ..., icy: bool | int | float = ..., imageScale: bool | int | Tuple[float, float] = ..., imageScaleU: bool | int | float = ..., isu: bool | int | float = ..., imageScaleV: bool | int | float = ..., isv: bool | int | float = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., keepImageRatio: bool | int = ..., kir: bool | int = ..., mapDirection: _util.ProxyUnicode | str = ..., md: _util.ProxyUnicode | str = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., perInstance: bool | int = ..., pi: bool | int = ..., projectionCenter: bool | int | Tuple[float, float, float] = ..., pc: bool | int | Tuple[float, float, float] = ..., projectionCenterX: bool | int | float = ..., pcx: bool | int | float = ..., projectionCenterY: bool | int | float = ..., pcy: bool | int | float = ..., projectionCenterZ: bool | int | float = ..., pcz: bool | int | float = ..., projectionHeight: bool | int | float = ..., ph: bool | int | float = ..., projectionHorizontalSweep: bool | int | float = ..., phs: bool | int | float = ..., projectionScale: bool | int | Tuple[float, float] = ..., ps: bool | int | Tuple[float, float] = ..., projectionScaleU: float = ..., psu: float = ..., projectionScaleV: float = ..., psv: float = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., rotate: bool | int | Tuple[float, float, float] = ..., ro: bool | int | Tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., rotationAngle: bool | int | float = ..., ra: bool | int | float = ..., seamCorrect: bool | int = ..., sc: bool | int = ..., smartFit: bool | int = ..., sf: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...

def polyPlane(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int | int = ..., cuv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., height: bool | int | float = ..., h: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., subdivisionsWidth: bool | int | int = ..., sw: bool | int | int = ..., subdivisionsX: bool | int | int = ..., sx: bool | int | int = ..., subdivisionsY: bool | int | int = ..., sy: bool | int | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ..., width: bool | int | float = ..., w: bool | int | float = ...): ...
def polyPlatonicSolid(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: int = ..., cuv: int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sideLength: bool | int | float = ..., l: bool | int | float = ..., solidType: int = ..., st: int = ..., texture: int = ..., tx: int = ...): ...
def polyPoke(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., localTranslate: Tuple[float, float, float] = ..., lt: Tuple[float, float, float] = ..., localTranslateX: float = ..., ltx: float = ..., localTranslateY: float = ..., lty: float = ..., localTranslateZ: float = ..., ltz: float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., translate: Tuple[float, float, float] = ..., t: Tuple[float, float, float] = ..., translateX: float = ..., tx: float = ..., translateY: float = ..., ty: float = ..., translateZ: float = ..., tz: float = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...
def polyPrimitive(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int | int = ..., cuv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polyType: int = ..., pt: int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sideLength: bool | int | float = ..., l: bool | int | float = ..., texture: bool | int | int = ..., tx: bool | int | int = ...): ...
def polyPrism(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: int = ..., cuv: int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., length: bool | int | float = ..., l: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberOfSides: bool | int | int = ..., ns: bool | int | int = ..., numderOfSides: bool | int | int = ..., nsi: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sideLength: bool | int | float = ..., w: bool | int | float = ..., subdivisionsCaps: bool | int | int = ..., sc: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., texture: int = ..., tx: int = ...): ...
def polyProjectCurve(*args, addUnderTransform: bool | int = ..., aut: bool | int = ..., automatic: bool | int = ..., baryCoord: Tuple[float, float, float] = ..., bc: Tuple[float, float, float] = ..., baryCoord1: float = ..., bc1: float = ..., baryCoord2: float = ..., bc2: float = ..., baryCoord3: float = ..., bc3: float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveSamples: int = ..., cs: int = ..., direction: bool | int | Tuple[float, float, float] = ..., d: bool | int | Tuple[float, float, float] = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., face: int = ..., f: int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pointsOnEdges: bool | int = ..., poe: bool | int = ..., query: bool | int = ..., q: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., triangle: int = ..., t: int = ...): ...

def polyProjection(*args, constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., imageCenterX: float = ..., icx: float = ..., imageCenterY: float = ..., icy: float = ..., imageScaleU: float = ..., isu: float = ..., imageScaleV: float = ..., isv: float = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., keepImageRatio: bool | int = ..., kir: bool | int = ..., mapDirection: _util.ProxyUnicode | str = ..., md: _util.ProxyUnicode | str = ..., projectionCenterX: float = ..., pcx: float = ..., projectionCenterY: float = ..., pcy: float = ..., projectionCenterZ: float = ..., pcz: float = ..., projectionScaleU: float = ..., psu: float = ..., projectionScaleV: float = ..., psv: float = ..., rotateX: float = ..., rx: float = ..., rotateY: float = ..., ry: float = ..., rotateZ: float = ..., rz: float = ..., rotationAngle: float = ..., ra: float = ..., seamCorrect: bool | int = ..., sc: bool | int = ..., smartFit: bool | int = ..., sf: bool | int = ..., type: _util.ProxyUnicode | str = ..., t: _util.ProxyUnicode | str = ..., uvSetName: _util.ProxyUnicode | str = ..., uvs: _util.ProxyUnicode | str = ...) -> Any: ...

def polyPyramid(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int | int = ..., cuv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberOfSides: bool | int | int = ..., ns: bool | int | int = ..., numderOfSides: bool | int | int = ..., nsi: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sideLength: bool | int | float = ..., w: bool | int | float = ..., subdivisionsCaps: bool | int | int = ..., sc: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., texture: bool | int = ..., tx: bool | int = ...): ...
def polyQuad(*args, angle: bool | int | float = ..., a: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepGroupBorder: bool | int = ..., kgb: bool | int = ..., keepHardEdges: bool | int = ..., khe: bool | int = ..., keepTextureBorders: bool | int = ..., ktb: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def polyQueryBlindData(*args, associationType: _util.ProxyUnicode | str = ..., at: _util.ProxyUnicode | str = ..., binaryData: _util.ProxyUnicode | str = ..., bnd: _util.ProxyUnicode | str = ..., booleanData: bool | int = ..., bd: bool | int = ..., doubleData: float = ..., dbd: float = ..., intData: int = ..., ind: int = ..., longDataName: str | List[str] = ..., ldn: str | List[str] = ..., maxValue: float = ..., max: float = ..., minValue: float = ..., min: float = ..., shortDataName: str | List[str] = ..., sdn: str | List[str] = ..., showComp: bool | int = ..., sc: bool | int = ..., stringData: _util.ProxyUnicode | str = ..., sd: _util.ProxyUnicode | str = ..., subString: _util.ProxyUnicode | str = ..., ss: _util.ProxyUnicode | str = ..., typeId: int = ..., id: int = ...) -> Any: ...

def polyReduce(*args, border: float = ..., b: float = ..., caching: bool | int = ..., cch: bool | int = ..., cachingReduce: bool | int = ..., cr: bool | int = ..., colorWeights: bool | int | float = ..., cwt: bool | int | float = ..., compactness: bool | int | float = ..., com: bool | int | float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., detail: float = ..., d: float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., geomWeights: bool | int | float = ..., gwt: bool | int | float = ..., invertVertexWeights: bool | int = ..., iwt: bool | int = ..., keepBorder: bool | int = ..., kb: bool | int = ..., keepBorderWeight: bool | int | float = ..., kbw: bool | int | float = ..., keepColorBorder: bool | int = ..., kcb: bool | int = ..., keepColorBorderWeight: bool | int | float = ..., kcw: bool | int | float = ..., keepCreaseEdge: bool | int = ..., kce: bool | int = ..., keepCreaseEdgeWeight: bool | int | float = ..., cew: bool | int | float = ..., keepFaceGroupBorder: bool | int = ..., kfb: bool | int = ..., keepFaceGroupBorderWeight: bool | int | float = ..., kfw: bool | int | float = ..., keepHardEdge: bool | int = ..., khe: bool | int = ..., keepHardEdgeWeight: bool | int | float = ..., khw: bool | int | float = ..., keepMapBorder: bool | int = ..., kmb: bool | int = ..., keepMapBorderWeight: bool | int | float = ..., kmw: bool | int | float = ..., keepOriginalVertices: bool | int = ..., kev: bool | int = ..., keepQuadsWeight: bool | int | float = ..., kqw: bool | int | float = ..., line: float = ..., l: float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., percentage: bool | int | float = ..., p: bool | int | float = ..., preserveLocation: bool | int = ..., pl: bool | int = ..., preserveTopology: bool | int = ..., top: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., sharpness: bool | int | float = ..., shp: bool | int | float = ..., symmetryPlane: Tuple[float, float, float, float] = ..., sym: Tuple[float, float, float, float] = ..., symmetryPlaneW: bool | int | float = ..., sw: bool | int | float = ..., symmetryPlaneX: bool | int | float = ..., sx: bool | int | float = ..., symmetryPlaneY: bool | int | float = ..., sy: bool | int | float = ..., symmetryPlaneZ: bool | int | float = ..., sz: bool | int | float = ..., symmetryTolerance: bool | int | float = ..., stl: bool | int | float = ..., termination: bool | int | int = ..., trm: bool | int | int = ..., triangleCount: bool | int | int = ..., tct: bool | int | int = ..., triangulate: bool | int = ..., t: bool | int = ..., useVirtualSymmetry: bool | int | int = ..., uvs: bool | int | int = ..., uvWeights: bool | int | float = ..., uwt: bool | int | float = ..., version: bool | int | int = ..., ver: bool | int | int = ..., vertexCount: bool | int | int = ..., vct: bool | int | int = ..., vertexMapName: bool | int | _util.ProxyUnicode | str = ..., vmp: bool | int | _util.ProxyUnicode | str = ..., vertexWeightCoefficient: bool | int | float = ..., vwc: bool | int | float = ..., weightCoefficient: bool | int | float = ..., wc: bool | int | float = ...): ...
def polyRemesh(*args, caching: bool | int = ..., cch: bool | int = ..., collapseThreshold: bool | int | float = ..., cot: bool | int | float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., interpolationType: bool | int | int = ..., ipt: bool | int | int = ..., maxEdgeLength: bool | int | float = ..., mel: bool | int | float = ..., maxTriangleCount: int = ..., mtc: int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., smoothStrength: bool | int | float = ..., smt: bool | int | float = ..., tessellateBorders: bool | int = ..., tsb: bool | int = ..., useRelativeValues: bool | int = ..., urv: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...
def polyRetopo(*args, anisotropy: float = ..., a: float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveInfluenceDirection: float = ..., cid: float = ..., curveSingularitySeparation: float = ..., css: float = ..., edit: bool | int = ..., e: bool | int = ..., faceUniformity: float = ..., fun: float = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: int = ..., nds: int = ..., preserveHardEdges: bool | int = ..., phe: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., targetEdgeDeviation: float = ..., ted: float = ..., targetFaceCount: int = ..., tfc: int = ..., targetFaceCountTolerance: int = ..., tft: int = ..., topologyRegularity: float = ..., trg: float = ...): ...

def polySelect(*args, add: bool | int = ..., addFirst: bool | int = ..., af: bool | int = ..., asSelectString: bool | int = ..., ass: bool | int = ..., deselect: bool | int = ..., d: bool | int = ..., edgeBorder: bool | int | int | List[int] = ..., eb: bool | int | int | List[int] = ..., edgeBorderPath: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., ebp: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., edgeBorderPattern: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., bpt: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., edgeLoop: bool | int | int | List[int] = ..., el: bool | int | int | List[int] = ..., edgeLoopOrBorder: bool | int | int | List[int] = ..., elb: bool | int | int | List[int] = ..., edgeLoopOrBorderPattern: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., lbp: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., edgeLoopPath: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., elp: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., edgeLoopPattern: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., lpt: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., edgeRing: bool | int | int | List[int] = ..., er: bool | int | int | List[int] = ..., edgeRingPath: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., erp: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., edgeRingPattern: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., rpt: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., edgeUVLoopOrBorder: bool | int | int | List[int] = ..., euv: bool | int | int | List[int] = ..., everyN: int = ..., en: int = ..., extendToShell: bool | int | int | List[int] = ..., ets: bool | int | int | List[int] = ..., noSelection: bool | int = ..., ns: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replace: bool | int = ..., r: bool | int = ..., shortestEdgePath: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., sep: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., shortestEdgePathUV: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., spu: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., shortestFacePath: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., sfp: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., toggle: bool | int = ..., tgl: bool | int = ...) -> Any: ...
def polySelectConstraint(*args, angle: bool | int | int = ..., a: bool | int | int = ..., anglePropagation: bool | int = ..., ap: bool | int = ..., angleTolerance: bool | int | float = ..., at: bool | int | float = ..., anglebound: bool | int | Tuple[float, float] = ..., ab: bool | int | Tuple[float, float] = ..., border: bool | int = ..., bo: bool | int = ..., borderPropagation: bool | int = ..., bp: bool | int = ..., convexity: bool | int | int = ..., c: bool | int | int = ..., crease: bool | int = ..., cr: bool | int = ..., disable: bool | int = ..., dis: bool | int = ..., dist: bool | int | int = ..., d: bool | int | int = ..., distaxis: bool | int | Tuple[float, float, float] = ..., da: bool | int | Tuple[float, float, float] = ..., distbound: bool | int | Tuple[float, float] = ..., db: bool | int | Tuple[float, float] = ..., distpoint: bool | int | Tuple[float, float, float] = ..., dp: bool | int | Tuple[float, float, float] = ..., edgeDistance: int = ..., ed: int = ..., geometricarea: bool | int | int = ..., ga: bool | int | int = ..., geometricareabound: bool | int | Tuple[float, float] = ..., gab: bool | int | Tuple[float, float] = ..., holes: bool | int | int = ..., h: bool | int | int = ..., length: bool | int | int = ..., l: bool | int | int = ..., lengthbound: bool | int | Tuple[float, float] = ..., lb: bool | int | Tuple[float, float] = ..., loopPropagation: bool | int = ..., lp: bool | int = ..., max2dAngle: float = ..., m2a: float = ..., max3dAngle: float = ..., m3a: float = ..., mode: bool | int | int = ..., m: bool | int | int = ..., nonmanifold: bool | int | int = ..., nm: bool | int | int = ..., oppositeEdges: bool | int = ..., oe: bool | int = ..., order: bool | int | int = ..., orderbound: bool | int | Tuple[int, int] = ..., orb: bool | int | Tuple[int, int] = ..., orient: bool | int | int = ..., o: bool | int | int = ..., orientaxis: bool | int | Tuple[float, float, float] = ..., oa: bool | int | Tuple[float, float, float] = ..., orientbound: bool | int | Tuple[float, float] = ..., ob: bool | int | Tuple[float, float] = ..., planarity: bool | int | int = ..., p: bool | int | int = ..., propagate: bool | int | int = ..., pp: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | int = ..., r: bool | int | int = ..., randomratio: bool | int | float = ..., rr: bool | int | float = ..., returnSelection: bool | int = ..., rs: bool | int = ..., ringPropagation: bool | int = ..., rp: bool | int = ..., shell: bool | int = ..., sh: bool | int = ..., size: bool | int | int = ..., sz: bool | int | int = ..., smoothness: bool | int | int = ..., sm: bool | int | int = ..., stateString: bool | int = ..., sts: bool | int = ..., textured: bool | int | int = ..., tx: bool | int | int = ..., texturedarea: bool | int | int = ..., ta: bool | int | int = ..., texturedareabound: bool | int | Tuple[float, float] = ..., tab: bool | int | Tuple[float, float] = ..., textureshared: bool | int | int = ..., ts: bool | int | int = ..., topology: bool | int | int = ..., tp: bool | int | int = ..., type: bool | int | int = ..., t: bool | int | int = ..., uvBorderSelection: bool | int = ..., ubs: bool | int = ..., uvConstraint: bool | int = ..., uvc: bool | int = ..., uvEdgeLoopPropagation: bool | int = ..., ulp: bool | int = ..., uvEdgeRingPropagation: bool | int = ..., urp: bool | int = ..., uvFaceOrientation: bool | int | int = ..., ufo: bool | int | int = ..., uvShell: bool | int = ..., uv: bool | int = ..., visibility: bool | int | int = ..., v: bool | int | int = ..., visibilityangle: bool | int | float = ..., va: bool | int | float = ..., visibilitypoint: bool | int | Tuple[float, float, float] = ..., vp: bool | int | Tuple[float, float, float] = ..., where: bool | int | int = ..., w: bool | int | int = ..., wholeSensitive: bool | int = ..., ws: bool | int = ...) -> Any: ...

def polySelectConstraintMonitor(*args, changeCommand: Tuple[str, str] = ..., cc: Tuple[str, str] = ..., create: bool | int = ..., c: bool | int = ..., delete: bool | int = ..., d: bool | int = ...): ...
def polySeparate(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endFace: int = ..., ef: int = ..., frozen: bool | int = ..., fzn: bool | int = ..., inPlace: bool | int = ..., inp: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeShells: bool | int = ..., rs: bool | int = ..., separateSpecificShell: int | List[int] = ..., sss: int | List[int] = ..., startFace: int = ..., sf: int = ..., userSpecifiedShells: bool | int = ..., uss: bool | int = ...): ...

def polySetToFaceNormal(*args, setUserNormal: bool | int = ..., su: bool | int = ...) -> Any: ...

def polySewEdge(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., texture: bool | int = ..., tx: bool | int = ..., tolerance: bool | int | float = ..., t: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def polySlideEdge(*args, absolute: bool | int = ..., a: bool | int = ..., direction: int = ..., d: int = ..., edgeDirection: float = ..., ed: float = ..., symmetry: bool | int = ..., sym: bool | int = ...) -> Any: ...

def polySmooth(*args, boundaryRule: int = ..., bnr: int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., continuity: bool | int | float = ..., c: bool | int | float = ..., degree: int = ..., deg: int = ..., divisions: bool | int | int = ..., dv: bool | int | int = ..., divisionsPerEdge: int = ..., dpe: int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepBorder: bool | int = ..., kb: bool | int = ..., keepHardEdge: bool | int = ..., khe: bool | int = ..., keepMapBorders: int = ..., kmb: int = ..., keepSelectionBorder: bool | int = ..., ksb: bool | int = ..., keepTesselation: bool | int = ..., xkt: bool | int = ..., keepTessellation: bool | int = ..., kt: bool | int = ..., method: int = ..., mth: int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., osdCreaseMethod: bool | int | int = ..., ocr: bool | int | int = ..., osdFvarBoundary: bool | int | int = ..., ofb: bool | int | int = ..., osdFvarPropagateCorners: bool | int = ..., ofc: bool | int = ..., osdSmoothTriangles: bool | int = ..., ost: bool | int = ..., osdVertBoundary: bool | int | int = ..., ovb: bool | int | int = ..., propagateEdgeHardness: bool | int = ..., peh: bool | int = ..., pushStrength: float = ..., ps: float = ..., query: bool | int = ..., q: bool | int = ..., roundness: float = ..., ro: float = ..., smoothUVs: bool | int = ..., suv: bool | int = ..., subdivisionLevels: int = ..., sl: int = ..., subdivisionType: bool | int | int = ..., sdt: bool | int | int = ...): ...
def polySoftEdge(*args, angle: bool | int | float = ..., a: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...
def polySphere(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: int = ..., cuv: int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., subdivisionsAxis: bool | int | int = ..., sa: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., subdivisionsX: bool | int | int = ..., sx: bool | int | int = ..., subdivisionsY: bool | int | int = ..., sy: bool | int | int = ..., texture: int = ..., tx: int = ...): ...

def polySphericalProjection(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., imageCenter: bool | int | Tuple[float, float] = ..., ic: bool | int | Tuple[float, float] = ..., imageCenterX: bool | int | float = ..., icx: bool | int | float = ..., imageCenterY: bool | int | float = ..., icy: bool | int | float = ..., imageScale: bool | int | Tuple[float, float] = ..., imageScaleU: bool | int | float = ..., isu: bool | int | float = ..., imageScaleV: bool | int | float = ..., isv: bool | int | float = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., keepImageRatio: bool | int = ..., kir: bool | int = ..., mapDirection: _util.ProxyUnicode | str = ..., md: _util.ProxyUnicode | str = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., perInstance: bool | int = ..., pi: bool | int = ..., projectionCenter: bool | int | Tuple[float, float, float] = ..., pc: bool | int | Tuple[float, float, float] = ..., projectionCenterX: bool | int | float = ..., pcx: bool | int | float = ..., projectionCenterY: bool | int | float = ..., pcy: bool | int | float = ..., projectionCenterZ: bool | int | float = ..., pcz: bool | int | float = ..., projectionHeight: float = ..., ph: float = ..., projectionHorizontalSweep: bool | int | float = ..., phs: bool | int | float = ..., projectionScale: bool | int | Tuple[float, float] = ..., ps: bool | int | Tuple[float, float] = ..., projectionScaleU: bool | int | float = ..., psu: bool | int | float = ..., projectionScaleV: bool | int | float = ..., psv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., rotate: bool | int | Tuple[float, float, float] = ..., ro: bool | int | Tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., rotationAngle: bool | int | float = ..., ra: bool | int | float = ..., seamCorrect: bool | int = ..., sc: bool | int = ..., smartFit: bool | int = ..., sf: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...

def polySplit(*args, adjustEdgeFlow: bool | int | float = ..., aef: bool | int | float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., detachEdges: bool | int = ..., de: bool | int = ..., edgepoint: Tuple[int, float] | List[Tuple[int, float]] = ..., ep: Tuple[int, float] | List[Tuple[int, float]] = ..., edit: bool | int = ..., e: bool | int = ..., facepoint: Tuple[int, float, float, float] | List[Tuple[int, float, float, float]] = ..., fp: Tuple[int, float, float, float] | List[Tuple[int, float, float, float]] = ..., insertWithEdgeFlow: bool | int = ..., ief: bool | int = ..., insertpoint: Tuple[int, float, float, float] | List[Tuple[int, float, float, float]] = ..., ip: Tuple[int, float, float, float] | List[Tuple[int, float, float, float]] = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., projectedCurve: _general.PyNode | str | List[_general.PyNode | str] = ..., pc: _general.PyNode | str | List[_general.PyNode | str] = ..., projectedCurveTolerance: float = ..., pct: float = ..., query: bool | int = ..., q: bool | int = ..., smoothingangle: float = ..., sma: float = ..., subdivision: bool | int | int = ..., s: bool | int | int = ...): ...
def polySplitEdge(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., operation: bool | int | int = ..., op: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...
def polySplitRing(*args, adjustEdgeFlow: bool | int | float = ..., aef: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int = ..., dr: bool | int = ..., divisions: bool | int | int = ..., div: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., enableProfileCurve: bool | int = ..., epc: bool | int = ..., fixQuads: bool | int = ..., fq: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertWithEdgeFlow: bool | int = ..., ief: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., profileCurveInputOffset: bool | int | float = ..., pio: bool | int | float = ..., profileCurveInputScale: bool | int | float = ..., pis: bool | int | float = ..., profileCurve_FloatValue: bool | int | float = ..., pfv: bool | int | float = ..., profileCurve_Interp: bool | int | int = ..., pi: bool | int | int = ..., profileCurve_Position: bool | int | float = ..., pp: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., rootEdge: bool | int | int = ..., re: bool | int | int = ..., smoothingAngle: bool | int | float = ..., sma: bool | int | float = ..., splitType: bool | int | int = ..., stp: bool | int | int = ..., useEqualMultiplier: bool | int = ..., uem: bool | int = ..., useFaceNormalsAtEnds: bool | int = ..., fne: bool | int = ..., weight: bool | int | float = ..., wt: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def polySplitVertex(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...

def polyStraightenUVBorder(*args, blendOriginal: bool | int | float = ..., bo: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curvature: bool | int | float = ..., c: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gapTolerance: bool | int | int = ..., gt: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., preserveLength: bool | int | float = ..., pl: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., uvSetName: _util.ProxyUnicode | str = ..., uvs: _util.ProxyUnicode | str = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def polySubdivideEdge(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., divisions: bool | int | int = ..., dv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., size: bool | int | float = ..., s: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polySubdivideFacet(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., divisions: bool | int | int = ..., dv: bool | int | int = ..., divisionsU: bool | int | int = ..., duv: bool | int | int = ..., divisionsV: bool | int | int = ..., dvv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., mode: bool | int | int = ..., m: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., subdMethod: bool | int | int = ..., sbm: bool | int | int = ...) -> Any: ...

def polyToSubdiv(*args, absolutePosition: bool | int = ..., ap: bool | int = ..., addUnderTransform: bool | int = ..., aut: bool | int = ..., applyMatrixToResult: bool | int = ..., amr: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., maxEdgesPerVert: bool | int | int = ..., me: bool | int | int = ..., maxPolyCount: bool | int | int = ..., mpc: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., preserveVertexOrdering: bool | int = ..., pvo: bool | int = ..., query: bool | int = ..., q: bool | int = ..., quickConvert: bool | int = ..., qc: bool | int = ..., uvPoints: bool | int | Tuple[float, float] | List[Tuple[float, float]] = ..., uvp: bool | int | Tuple[float, float] | List[Tuple[float, float]] = ..., uvPointsU: bool | int | float = ..., uvu: bool | int | float = ..., uvPointsV: bool | int | float = ..., uvv: bool | int | float = ..., uvTreatment: bool | int | int = ..., uvt: bool | int | int = ...): ...
def polyTorus(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int = ..., cuv: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sectionRadius: bool | int | float = ..., sr: bool | int | float = ..., subdivisionsAxis: bool | int | int = ..., sa: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., subdivisionsX: bool | int | int = ..., sx: bool | int | int = ..., subdivisionsY: bool | int | int = ..., sy: bool | int | int = ..., texture: bool | int = ..., tx: bool | int = ..., twist: bool | int | float = ..., tw: bool | int | float = ...): ...
def polyTransfer(*args, alternateObject: bool | int | _util.ProxyUnicode | str = ..., ao: bool | int | _util.ProxyUnicode | str = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., uvSets: bool | int = ..., uv: bool | int = ..., vertexColor: bool | int = ..., vc: bool | int = ..., vertices: bool | int = ..., v: bool | int = ...): ...
def polyTriangulate(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...

def polyUVCoverage(*args, uvRange: Tuple[float, float, float, float] = ..., ur: Tuple[float, float, float, float] = ...) -> Any: ...
def polyUVOverlap(*args, nonOverlappingComponents: bool | int = ..., noc: bool | int = ..., overlappingComponents: bool | int = ..., oc: bool | int = ...) -> Any: ...

def polyUVRectangle(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...

def polyUVSet(*args, allUVSets: bool | int = ..., auv: bool | int = ..., allUVSetsIndices: bool | int = ..., uvn: bool | int = ..., allUVSetsWithCount: bool | int = ..., awc: bool | int = ..., copy: bool | int = ..., cp: bool | int = ..., create: bool | int = ..., cr: bool | int = ..., currentLastUVSet: bool | int = ..., luv: bool | int = ..., currentPerInstanceUVSet: bool | int = ..., cpi: bool | int = ..., currentUVSet: bool | int = ..., cuv: bool | int = ..., delete: bool | int = ..., d: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., genNewUVSet: bool | int = ..., gen: bool | int = ..., newUVSet: bool | int | _util.ProxyUnicode | str = ..., nuv: bool | int | _util.ProxyUnicode | str = ..., perInstance: bool | int = ..., pi: bool | int = ..., projections: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rename: bool | int = ..., rn: bool | int = ..., reorder: bool | int = ..., ro: bool | int = ..., shareInstances: bool | int = ..., si: bool | int = ..., unshared: bool | int = ..., us: bool | int = ..., uvSet: bool | int | _util.ProxyUnicode | str = ..., uvs: bool | int | _util.ProxyUnicode | str = ...) -> Any: ...
def polyUVStackSimilarShells(*args, onlyMatch: bool | int = ..., om: bool | int = ..., tolerance: float = ..., to: float = ...) -> Any: ...

def polyUnite(*args, caching: bool | int = ..., cch: bool | int = ..., centerPivot: bool | int = ..., cp: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., mergeUVSets: int = ..., muv: int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., objectPivot: bool | int = ..., op: bool | int = ..., query: bool | int = ..., q: bool | int = ...): ...
def polyWedgeFace(*args, axis: Tuple[float, float, float] = ..., ax: Tuple[float, float, float] = ..., axisX: float = ..., asx: float = ..., axisY: float = ..., asy: float = ..., axisZ: float = ..., asz: float = ..., caching: bool | int = ..., cch: bool | int = ..., center: Tuple[float, float, float] = ..., cen: Tuple[float, float, float] = ..., centerX: float = ..., ctx: float = ..., centerY: float = ..., cty: float = ..., centerZ: float = ..., ctz: float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., divisions: int = ..., d: int = ..., edge: int | List[int] = ..., ed: int | List[int] = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., wedgeAngle: float = ..., wa: float = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...
def projectCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int | Tuple[float, float, float] = ..., d: bool | int | Tuple[float, float, float] = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useNormal: bool | int = ..., un: bool | int = ...): ...
def projectTangent(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curvature: bool | int = ..., c: bool | int = ..., curvatureScale: bool | int | float = ..., cs: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., ignoreEdges: bool | int = ..., ie: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., reverseTangent: bool | int = ..., rt: bool | int = ..., rotate: bool | int | float = ..., ro: bool | int | float = ..., tangentDirection: bool | int | int = ..., td: bool | int | int = ..., tangentScale: bool | int | float = ..., ts: bool | int | float = ...): ...

def propMove(*args, percent: float | List[float] = ..., p: float | List[float] = ..., percentX: float | List[float] = ..., px: float | List[float] = ..., percentY: float | List[float] = ..., py: float | List[float] = ..., percentZ: float | List[float] = ..., pz: float | List[float] = ..., pivot: Tuple[float, float, float] = ..., pi: Tuple[float, float, float] = ..., rotate: Tuple[float, float, float] = ..., r: Tuple[float, float, float] = ..., scale: Tuple[float, float, float] = ..., s: Tuple[float, float, float] = ..., translate: Tuple[float, float, float] = ..., t: Tuple[float, float, float] = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def querySubdiv(*args, action: int = ..., a: int = ..., level: int = ..., l: int = ..., relative: bool | int = ..., r: bool | int = ...) -> Any: ...

def rebuildCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endKnots: bool | int | int = ..., end: bool | int | int = ..., fitRebuild: bool | int = ..., fr: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepControlPoints: bool | int = ..., kcp: bool | int = ..., keepEndPoints: bool | int = ..., kep: bool | int = ..., keepRange: bool | int | int = ..., kr: bool | int | int = ..., keepTangents: bool | int = ..., kt: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., noChanges: bool | int = ..., nc: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., rebuildType: bool | int | int = ..., rt: bool | int | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., smartSurfaceCurveRebuild: bool | int = ..., scr: bool | int = ..., smooth: float = ..., sm: float = ..., spans: bool | int | int = ..., s: bool | int | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ...): ...
def rebuildSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degreeU: bool | int | int = ..., du: bool | int | int = ..., degreeV: bool | int | int = ..., dv: bool | int | int = ..., direction: bool | int | int = ..., dir: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endKnots: bool | int | int = ..., end: bool | int | int = ..., fitRebuild: bool | int | int = ..., fr: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepControlPoints: bool | int = ..., kcp: bool | int = ..., keepCorners: bool | int = ..., kc: bool | int = ..., keepRange: bool | int | int = ..., kr: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., noChanges: bool | int = ..., nc: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., rebuildType: bool | int | int = ..., rt: bool | int | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., spansU: bool | int | int = ..., su: bool | int | int = ..., spansV: bool | int | int = ..., sv: bool | int | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ...): ...

def refineSubdivSelectionList(*args) -> Any: ...

def reverseCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., noChanges: bool | int = ..., nc: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...): ...
def reverseSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., noChanges: bool | int = ..., nc: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...): ...
def revolve(*args, autoCorrectNormal: bool | int = ..., acn: bool | int = ..., axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., axisChoice: bool | int | int = ..., aco: bool | int | int = ..., axisX: bool | int | float = ..., axx: bool | int | float = ..., axisY: bool | int | float = ..., axy: bool | int | float = ..., axisZ: bool | int | float = ..., axz: bool | int | float = ..., bridge: bool | int = ..., br: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., computePivotAndAxis: bool | int | int = ..., cpa: bool | int | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endSweep: bool | int | float = ..., esw: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., mergeItems: bool | int = ..., mi: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pivot: bool | int | Tuple[float, float, float] = ..., p: bool | int | Tuple[float, float, float] = ..., pivotX: bool | int | float = ..., px: bool | int | float = ..., pivotY: bool | int | float = ..., py: bool | int | float = ..., pivotZ: bool | int | float = ..., pz: bool | int | float = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., radiusAnchor: bool | int | float = ..., ra: bool | int | float = ..., range: bool | int = ..., rn: bool | int = ..., rebuild: bool | int = ..., rb: bool | int = ..., sections: bool | int | int = ..., s: bool | int | int = ..., startSweep: bool | int | float = ..., ssw: bool | int | float = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useLocalPivot: bool | int = ..., ulp: bool | int = ..., useTolerance: bool | int = ..., ut: bool | int = ...): ...
def roundConstantRadius(*args, append: bool | int = ..., a: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: int = ..., nds: int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: float | List[float] = ..., r: float | List[float] = ..., radiuss: float | List[float] = ..., rad: float | List[float] = ..., side: Tuple[str, int] | List[Tuple[str, int]] = ..., s: Tuple[str, int] | List[Tuple[str, int]] = ..., sidea: int | List[int] = ..., sa: int | List[int] = ..., sideb: int | List[int] = ..., sb: int | List[int] = ..., tolerance: float = ..., tol: float = ...): ...

def setXformManip(*args, query: bool | int = ..., q: bool | int = ..., showUnits: bool | int = ..., su: bool | int = ..., suppress: bool | int = ..., s: bool | int = ..., useRotatePivot: bool | int = ..., urp: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def showMetadata(*args, auto: bool | int = ..., a: bool | int = ..., dataType: bool | int | _util.ProxyUnicode | str = ..., dt: bool | int | _util.ProxyUnicode | str = ..., interpolation: bool | int = ..., i: bool | int = ..., isActivated: bool | int = ..., ia: bool | int = ..., listAllStreams: bool | int = ..., las: bool | int = ..., listMembers: bool | int = ..., lm: bool | int = ..., listValidMethods: bool | int = ..., lvm: bool | int = ..., listVisibleStreams: bool | int = ..., lvs: bool | int = ..., member: bool | int | _util.ProxyUnicode | str = ..., mb: bool | int | _util.ProxyUnicode | str = ..., method: bool | int | _util.ProxyUnicode | str = ..., m: bool | int | _util.ProxyUnicode | str = ..., off: bool | int | Tuple[Any, Any, Any] = ..., boolean: bool | int | Tuple[Any, Any, Any] = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int | Tuple[float, float] = ..., r: bool | int | Tuple[float, float] = ..., rayScale: bool | int | float = ..., rs: bool | int | float = ..., stream: bool | int | _util.ProxyUnicode | str = ..., s: bool | int | _util.ProxyUnicode | str = ...) -> Any: ...
def singleProfileBirailSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., tangentContinuityProfile1: bool | int = ..., tp1: bool | int = ..., transformMode: bool | int | int = ..., tm: bool | int | int = ...) -> Any: ...

def smoothCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., smoothness: bool | int | float = ..., s: bool | int | float = ...): ...

def smoothTangentSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float | List[float] = ..., p: bool | int | float | List[float] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., smoothness: bool | int | int = ..., s: bool | int | int = ...) -> Any: ...

def sphere(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endSweep: bool | int | float = ..., esw: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., heightRatio: bool | int | float = ..., hr: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pivot: bool | int | Tuple[float, float, float] = ..., p: bool | int | Tuple[float, float, float] = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sections: bool | int | int = ..., s: bool | int | int = ..., spans: bool | int | int = ..., nsp: bool | int | int = ..., startSweep: bool | int | float = ..., ssw: bool | int | float = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useTolerance: bool | int = ..., ut: bool | int = ...): ...

def squareSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., continuityType1: bool | int | int = ..., ct1: bool | int | int = ..., continuityType2: bool | int | int = ..., ct2: bool | int | int = ..., continuityType3: bool | int | int = ..., ct3: bool | int | int = ..., continuityType4: bool | int | int = ..., ct4: bool | int | int = ..., curveFitCheckpoints: bool | int | int = ..., cfc: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endPointTolerance: bool | int | float = ..., ept: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., rebuildCurve1: bool | int = ..., rc1: bool | int = ..., rebuildCurve2: bool | int = ..., rc2: bool | int = ..., rebuildCurve3: bool | int = ..., rc3: bool | int = ..., rebuildCurve4: bool | int = ..., rc4: bool | int = ...) -> Any: ...
def stitchSurface(*args, bias: bool | int | float = ..., b: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., cascade: bool | int = ..., c: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., cvIthIndex: bool | int | int | List[int] = ..., ci: bool | int | int | List[int] = ..., cvJthIndex: bool | int | int | List[int] = ..., cj: bool | int | int | List[int] = ..., edit: bool | int = ..., e: bool | int = ..., fixBoundary: bool | int = ..., fb: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepG0Continuity: bool | int = ..., kg0: bool | int = ..., keepG1Continuity: bool | int = ..., kg1: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberOfSamples: int = ..., ns: int = ..., object: bool | int = ..., o: bool | int = ..., parameterU: bool | int | float | List[float] = ..., u: bool | int | float | List[float] = ..., parameterV: bool | int | float | List[float] = ..., v: bool | int | float | List[float] = ..., positionalContinuity: bool | int | bool | int | List[bool | int] = ..., pc: bool | int | bool | int | List[bool | int] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., stepCount: bool | int | int | List[int] = ..., sc: bool | int | int | List[int] = ..., tangentialContinuity: bool | int | bool | int | List[bool | int] = ..., tc: bool | int | bool | int | List[bool | int] = ..., togglePointNormals: bool | int = ..., tpn: bool | int = ..., togglePointPosition: bool | int = ..., tpp: bool | int = ..., toggleTolerance: bool | int | bool | int | List[bool | int] = ..., tt: bool | int | bool | int | List[bool | int] = ..., tolerance: bool | int | float | List[float] = ..., tol: bool | int | float | List[float] = ..., weight0: float = ..., wt0: float = ..., weight1: float = ..., wt1: float = ...) -> Any: ...
def stitchSurfacePoints(*args, bias: bool | int | float = ..., b: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., cascade: bool | int = ..., c: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., cvIthIndex: bool | int | int | List[int] = ..., ci: bool | int | int | List[int] = ..., cvJthIndex: bool | int | int | List[int] = ..., cj: bool | int | int | List[int] = ..., edit: bool | int = ..., e: bool | int = ..., equalWeight: bool | int = ..., ewt: bool | int = ..., fixBoundary: bool | int = ..., fb: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepG0Continuity: bool | int = ..., kg0: bool | int = ..., keepG1Continuity: bool | int = ..., kg1: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameterU: bool | int | float | List[float] = ..., u: bool | int | float | List[float] = ..., parameterV: bool | int | float | List[float] = ..., v: bool | int | float | List[float] = ..., positionalContinuity: bool | int | bool | int | List[bool | int] = ..., pc: bool | int | bool | int | List[bool | int] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., stepCount: bool | int | int | List[int] = ..., sc: bool | int | int | List[int] = ..., tangentialContinuity: bool | int | bool | int | List[bool | int] = ..., tc: bool | int | bool | int | List[bool | int] = ..., togglePointNormals: bool | int = ..., tpn: bool | int = ..., togglePointPosition: bool | int = ..., tpp: bool | int = ..., toggleTolerance: bool | int | bool | int | List[bool | int] = ..., tt: bool | int | bool | int | List[bool | int] = ..., tolerance: bool | int | float | List[float] = ..., tol: bool | int | float | List[float] = ...) -> Any: ...
def subdAutoProjection(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., layout: bool | int | int = ..., l: bool | int | int = ..., layoutMethod: bool | int | int = ..., lm: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., optimize: bool | int | int = ..., o: bool | int | int = ..., percentageSpace: bool | int | float = ..., ps: bool | int | float = ..., planes: bool | int | int = ..., p: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., scale: bool | int | int = ..., sc: bool | int | int = ..., skipIntersect: bool | int = ..., si: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...

def subdCleanTopology(*args): ...

def subdCollapse(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., level: bool | int | int = ..., l: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def subdDuplicateAndConnect(*args) -> Any: ...
def subdEditUV(*args, angle: bool | int | float = ..., a: bool | int | float = ..., pivotU: bool | int | float = ..., pu: bool | int | float = ..., pivotV: bool | int | float = ..., pv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ..., rotateRatio: bool | int | float = ..., rr: bool | int | float = ..., rotation: bool | int = ..., rot: bool | int = ..., scale: bool | int = ..., s: bool | int = ..., scaleU: bool | int | float = ..., su: bool | int | float = ..., scaleV: bool | int | float = ..., sv: bool | int | float = ..., uValue: bool | int | float = ..., u: bool | int | float = ..., uvSetName: bool | int | _util.ProxyUnicode | str = ..., uvs: bool | int | _util.ProxyUnicode | str = ..., vValue: bool | int | float = ..., v: bool | int | float = ...) -> Any: ...

def subdLayoutUV(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., flipReversed: bool | int = ..., fr: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., layout: bool | int | int = ..., l: bool | int | int = ..., layoutMethod: bool | int | int = ..., lm: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., percentageSpace: bool | int | float = ..., ps: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., rotateForBestFit: bool | int | int = ..., rbf: bool | int | int = ..., scale: bool | int | int = ..., sc: bool | int | int = ..., separate: bool | int | int = ..., se: bool | int | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def subdListComponentConversion(*args, border: bool | int = ..., bo: bool | int = ..., fromEdge: bool | int = ..., fe: bool | int = ..., fromFace: bool | int = ..., ff: bool | int = ..., fromUV: bool | int = ..., fuv: bool | int = ..., fromVertex: bool | int = ..., fv: bool | int = ..., internal: bool | int = ..., toEdge: bool | int = ..., te: bool | int = ..., toFace: bool | int = ..., tf: bool | int = ..., toUV: bool | int = ..., tuv: bool | int = ..., toVertex: bool | int = ..., tv: bool | int = ..., uvShell: bool | int = ..., uvs: bool | int = ..., uvShellBorder: bool | int = ..., uvb: bool | int = ...) -> Any: ...

def subdMapCut(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...
def subdMapSewMove(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., limitPieceSize: bool | int = ..., lps: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberFaces: bool | int | int = ..., nf: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...): ...

def subdMatchTopology(*args, frontOfChain: bool | int = ..., foc: bool | int = ...) -> Any: ...
def subdMirror(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., xMirror: bool | int = ..., xm: bool | int = ..., yMirror: bool | int = ..., ym: bool | int = ..., zMirror: bool | int = ..., zm: bool | int = ...) -> Any: ...
def subdPlanarProjection(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., imageCenter: bool | int | Tuple[float, float] = ..., ic2: bool | int | Tuple[float, float] = ..., imageCenterX: bool | int | float = ..., icx: bool | int | float = ..., imageCenterY: bool | int | float = ..., icy: bool | int | float = ..., imageScale: bool | int | Tuple[float, float] = ..., is2: bool | int | Tuple[float, float] = ..., imageScaleU: bool | int | float = ..., isu: bool | int | float = ..., imageScaleV: bool | int | float = ..., isv: bool | int | float = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., keepImageRatio: bool | int = ..., kir: bool | int = ..., mapDirection: _util.ProxyUnicode | str = ..., md: _util.ProxyUnicode | str = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., projectionCenter: bool | int | Tuple[float, float, float] = ..., pc: bool | int | Tuple[float, float, float] = ..., projectionCenterX: bool | int | float = ..., pcx: bool | int | float = ..., projectionCenterY: bool | int | float = ..., pcy: bool | int | float = ..., projectionCenterZ: bool | int | float = ..., pcz: bool | int | float = ..., projectionHeight: bool | int | float = ..., ph: bool | int | float = ..., projectionScale: bool | int | Tuple[float, float] = ..., ps: bool | int | Tuple[float, float] = ..., projectionWidth: bool | int | float = ..., pw: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., rotate: bool | int | Tuple[float, float, float] = ..., ro: bool | int | Tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., rotationAngle: bool | int | float = ..., ra: bool | int | float = ..., smartFit: bool | int = ..., sf: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def subdToBlind(*args, absolutePosition: bool | int = ..., ap: bool | int = ..., includeCreases: bool | int = ..., ic: bool | int = ..., includeZeroOffsets: bool | int = ..., izo: bool | int = ...) -> Any: ...
def subdToPoly(*args, addUnderTransform: bool | int = ..., aut: bool | int = ..., applyMatrixToResult: bool | int = ..., amr: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., connectShaders: bool | int = ..., cs: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., copyUVTopology: bool | int = ..., cut: bool | int = ..., depth: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., extractPointPosition: bool | int = ..., epp: bool | int = ..., format: bool | int | int = ..., f: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., inSubdCVId: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., inSubdCVIdLeft: bool | int | int = ..., isl: bool | int | int = ..., inSubdCVIdRight: bool | int | int = ..., isr: bool | int | int = ..., maxPolys: bool | int | int = ..., mp: bool | int | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., outSubdCVId: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., os: bool | int | Tuple[int, int] | List[Tuple[int, int]] = ..., outSubdCVIdLeft: bool | int | int = ..., osl: bool | int | int = ..., outSubdCVIdRight: bool | int | int = ..., osr: bool | int | int = ..., outv: bool | int | int | List[int] = ..., ov: bool | int | int | List[int] = ..., preserveVertexOrdering: bool | int = ..., pvo: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sampleCount: bool | int | int = ..., sc: bool | int | int = ..., shareUVs: bool | int = ..., suv: bool | int = ..., subdNormals: bool | int = ..., un: bool | int = ...) -> Any: ...
def subdTransferUVsToCache(*args) -> Any: ...

def subdiv(*args, currentLevel: bool | int = ..., cl: bool | int = ..., currentSubdLevel: bool | int = ..., csl: bool | int = ..., deepestLevel: bool | int | int = ..., dl: bool | int | int = ..., displayLoad: bool | int = ..., dsl: bool | int = ..., edgeStats: bool | int = ..., est: bool | int = ..., faceStats: bool | int = ..., fst: bool | int = ..., maxPossibleLevel: bool | int | int = ..., mpl: bool | int | int = ..., proxyMode: bool | int | int = ..., pm: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., smallOffsets: bool | int = ..., so: bool | int = ...): ...

def subdivCrease(*args, sharpness: bool | int = ..., sh: bool | int = ...) -> Any: ...
def subdivDisplaySmoothness(*args, all: bool | int | Tuple[Any, Any] = ..., boolean: bool | int | Tuple[Any, Any] = ..., query: bool | int = ..., q: bool | int = ..., smoothness: bool | int | int = ..., s: bool | int | int = ...) -> Any: ...
def textCurves(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., deprecatedFontName: bool | int = ..., dfn: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., font: _util.ProxyUnicode | str = ..., f: _util.ProxyUnicode | str = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: int = ..., nds: int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., text: _util.ProxyUnicode | str = ..., t: _util.ProxyUnicode | str = ...) -> Any: ...
def tolerance(*args, angular: bool | int | float = ..., a: bool | int | float = ..., linear: bool | int | float = ..., l: bool | int | float = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...

def torus(*args, axis: bool | int | Tuple[float, float, float] = ..., ax: bool | int | Tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endSweep: bool | int | float = ..., esw: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., heightRatio: bool | int | float = ..., hr: bool | int | float = ..., minorSweep: bool | int | float = ..., msw: bool | int | float = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pivot: bool | int | Tuple[float, float, float] = ..., p: bool | int | Tuple[float, float, float] = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sections: bool | int | int = ..., s: bool | int | int = ..., spans: bool | int | int = ..., nsp: bool | int | int = ..., startSweep: bool | int | float = ..., ssw: bool | int | float = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useTolerance: bool | int = ..., ut: bool | int = ...): ...
def transferAttributes(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., colorBorders: int = ..., clb: int = ..., deformerTools: bool | int = ..., dt: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exclusive: bool | int | _util.ProxyUnicode | str = ..., ex: bool | int | _util.ProxyUnicode | str = ..., flipUVs: int = ..., fuv: int = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | List[str] = ..., g: bool | int | str | List[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., ignoreSelected: bool | int = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., matchChoice: int = ..., mch: int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., parallel: bool | int = ..., par: bool | int = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int | List[bool | int] = ..., rm: bool | int | List[bool | int] = ..., sampleSpace: int = ..., spa: int = ..., searchMethod: int = ..., sm: int = ..., searchScaleX: float = ..., ssx: float = ..., searchScaleY: float = ..., ssy: float = ..., searchScaleZ: float = ..., ssz: float = ..., sourceColorSet: _util.ProxyUnicode | str = ..., scs: _util.ProxyUnicode | str = ..., sourceUvSet: _util.ProxyUnicode | str = ..., suv: _util.ProxyUnicode | str = ..., sourceUvSpace: _util.ProxyUnicode | str = ..., sus: _util.ProxyUnicode | str = ..., split: bool | int = ..., sp: bool | int = ..., targetColorSet: _util.ProxyUnicode | str = ..., tcs: _util.ProxyUnicode | str = ..., targetUvSet: _util.ProxyUnicode | str = ..., tuv: _util.ProxyUnicode | str = ..., targetUvSpace: _util.ProxyUnicode | str = ..., tus: _util.ProxyUnicode | str = ..., transferColors: int = ..., col: int = ..., transferNormals: int = ..., nml: int = ..., transferPositions: int = ..., pos: int = ..., transferUVs: int = ..., uvs: int = ..., useComponentTags: bool | int = ..., uct: bool | int = ...): ...

def transferShadingSets(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sampleSpace: bool | int | int = ..., spa: bool | int | int = ..., searchMethod: bool | int | int = ..., sm: bool | int | int = ...) -> Any: ...

def trim(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., locatorU: bool | int | float | List[float] = ..., lu: bool | int | float | List[float] = ..., locatorV: bool | int | float | List[float] = ..., lv: bool | int | float | List[float] = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., selected: bool | int | int = ..., sl: bool | int | int = ..., shrink: bool | int = ..., sh: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ...): ...

def unfold(*args, applyToShell: bool | int = ..., areaWeight: float = ..., aw: float = ..., globalBlend: float = ..., gb: float = ..., globalMethodBlend: float = ..., gmb: float = ..., iterations: int = ..., i: int = ..., optimizeAxis: int = ..., oa: int = ..., pinSelected: bool | int = ..., ps: bool | int = ..., pinUvBorder: bool | int = ..., pub: bool | int = ..., scale: float = ..., s: float = ..., stoppingThreshold: float = ..., ss: float = ..., useScale: bool | int = ..., us: bool | int = ...) -> Any: ...
def untangleUV(*args, mapBorder: _util.ProxyUnicode | str = ..., mb: _util.ProxyUnicode | str = ..., maxRelaxIterations: int = ..., mri: int = ..., pinBorder: bool | int = ..., pb: bool | int = ..., pinSelected: bool | int = ..., ps: bool | int = ..., pinUnselected: bool | int = ..., pu: bool | int = ..., relax: _util.ProxyUnicode | str = ..., r: _util.ProxyUnicode | str = ..., relaxTolerance: float = ..., rt: float = ..., shapeDetail: float = ..., sd: float = ...) -> Any: ...

def untrim(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., noChanges: bool | int = ..., nc: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., untrimAll: bool | int = ..., all: bool | int = ...): ...

def uvSnapshot(*args, antiAliased: bool | int = ..., aa: bool | int = ..., blueColor: int = ..., b: int = ..., entireUVRange: bool | int = ..., euv: bool | int = ..., fileFormat: _util.ProxyUnicode | str = ..., ff: _util.ProxyUnicode | str = ..., greenColor: int = ..., g: int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., overwrite: bool | int = ..., o: bool | int = ..., redColor: int = ..., r: int = ..., uMax: float = ..., umx: float = ..., uMin: float = ..., umn: float = ..., uvSetName: _util.ProxyUnicode | str = ..., uvs: _util.ProxyUnicode | str = ..., vMax: float = ..., vmx: float = ..., vMin: float = ..., vmn: float = ..., xResolution: int = ..., xr: int = ..., yResolution: int = ..., yr: int = ...) -> Any: ...
