import pymel.core.general as _general
import pymel.util as _util
from typing import Any, Callable, List, Optional, Tuple, Union, overload

def addDynamic(*args): ...
def addPP(*args, attribute: _util.ProxyUnicode | str = ..., atr: _util.ProxyUnicode | str = ...): ...
def air(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., enableSpread: bool | int = ..., es: bool | int = ..., fanSetup: bool | int = ..., fs: bool | int = ..., inheritRotation: bool | int = ..., iro: bool | int = ..., inheritVelocity: bool | int | float = ..., iv: bool | int | float = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., pos: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., speed: bool | int | float = ..., s: bool | int | float = ..., spread: bool | int | float = ..., sp: bool | int | float = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., velocityComponentOnly: bool | int = ..., vco: bool | int = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | Tuple[float, float, float] = ..., vof: bool | int | Tuple[float, float, float] = ..., volumeShape: bool | int | _util.ProxyUnicode | str = ..., vsh: bool | int | _util.ProxyUnicode | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ..., wakeSetup: bool | int = ..., wks: bool | int = ..., windSetup: bool | int = ..., wns: bool | int = ...): ...
def arrayMapper(*args, destAttr: _util.ProxyUnicode | str = ..., da: _util.ProxyUnicode | str = ..., inputU: _util.ProxyUnicode | str = ..., iu: _util.ProxyUnicode | str = ..., inputV: _util.ProxyUnicode | str = ..., iv: _util.ProxyUnicode | str = ..., mapTo: _util.ProxyUnicode | str = ..., mt: _util.ProxyUnicode | str = ..., target: str | List[str] = ..., t: str | List[str] = ..., type: _util.ProxyUnicode | str = ..., ty: _util.ProxyUnicode | str = ...): ...

def collision(*args, edit: bool | int = ..., e: bool | int = ..., friction: bool | int | float = ..., f: bool | int | float = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., offset: bool | int | float = ..., o: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., resilience: bool | int | float = ..., r: bool | int | float = ...) -> Any: ...
def colorAtPoint(*args, coordU: float | List[float] = ..., u: float | List[float] = ..., coordV: float | List[float] = ..., v: float | List[float] = ..., maxU: float = ..., xu: float = ..., maxV: float = ..., xv: float = ..., minU: float = ..., mu: float = ..., minV: float = ..., mv: float = ..., output: _util.ProxyUnicode | str = ..., o: _util.ProxyUnicode | str = ..., samplesU: int = ..., su: int = ..., samplesV: int = ..., sv: int = ...) -> Any: ...

def connectDynamic(*args, addScriptHandler: str | Callable = ..., ash: str | Callable = ..., collisions: str | List[str] = ..., c: str | List[str] = ..., delete: bool | int = ..., d: bool | int = ..., emitters: str | List[str] = ..., em: str | List[str] = ..., fields: str | List[str] = ..., f: str | List[str] = ..., removeScriptHandler: int = ..., rsh: int = ...): ...

def constrain(*args, barrier: bool | int = ..., br: bool | int = ..., damping: bool | int | float = ..., d: bool | int | float = ..., directionalHinge: bool | int = ..., dhi: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., hinge: bool | int = ..., hi: bool | int = ..., interpenetrate: bool | int = ..., i: bool | int = ..., nail: bool | int = ..., na: bool | int = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., orientation: bool | int | Tuple[float, float, float] = ..., o: bool | int | Tuple[float, float, float] = ..., pinConstraint: bool | int = ..., pin: bool | int = ..., position: bool | int | Tuple[float, float, float] = ..., p: bool | int | Tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., restLength: bool | int | float = ..., rl: bool | int | float = ..., spring: bool | int = ..., s: bool | int = ..., stiffness: bool | int | float = ..., st: bool | int | float = ...) -> Any: ...

def drag(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., pos: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., useDirection: bool | int = ..., ud: bool | int = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | Tuple[float, float, float] = ..., vof: bool | int | Tuple[float, float, float] = ..., volumeShape: bool | int | _util.ProxyUnicode | str = ..., vsh: bool | int | _util.ProxyUnicode | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...): ...

def dynCache(*args) -> Any: ...
def dynControl(*args, autoCreate: bool | int = ..., ac: bool | int = ..., oversample: int = ..., os: int = ..., particleCache: bool | int = ..., pc: bool | int = ..., particleLOD: float = ..., pld: float = ..., particlesOn: bool | int = ..., po: bool | int = ..., rigidOn: bool | int = ..., ro: bool | int = ..., seed: int = ..., sd: int = ..., startTime: int | float = ..., st: int | float = ..., traceDepth: int = ..., td: int = ...) -> Any: ...
def dynExport(*args, allObjects: bool | int = ..., all: bool | int = ..., attribute: str | List[str] = ..., atr: str | List[str] = ..., format: _util.ProxyUnicode | str = ..., f: _util.ProxyUnicode | str = ..., maxFrame: int | float = ..., mxf: int | float = ..., minFrame: int | float = ..., mnf: int | float = ..., onlyUpdateParticles: bool | int = ..., oup: bool | int = ..., overSampling: int = ..., os: int = ..., path: _util.ProxyUnicode | str = ..., p: _util.ProxyUnicode | str = ...) -> Any: ...
def dynExpression(*args, creation: bool | int = ..., c: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., runtime: bool | int = ..., r: bool | int = ..., runtimeAfterDynamics: bool | int = ..., rad: bool | int = ..., runtimeBeforeDynamics: bool | int = ..., rbd: bool | int = ..., string: _util.ProxyUnicode | str = ..., s: _util.ProxyUnicode | str = ...) -> Any: ...

def dynGlobals(*args, active: bool | int = ..., a: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., listAll: bool | int = ..., la: bool | int = ..., overSampling: bool | int | int = ..., os: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...): ...
def dynPaintEditor(*args, activeOnly: bool | int = ..., ao: bool | int = ..., autoSave: bool | int = ..., camera: bool | int | _util.ProxyUnicode | str = ..., cam: bool | int | _util.ProxyUnicode | str = ..., canvasMode: bool | int = ..., cm: bool | int = ..., canvasUndo: bool | int = ..., cu: bool | int = ..., changeCommand: bool | int | Tuple[str, str, str, str] = ..., cc: bool | int | Tuple[str, str, str, str] = ..., clear: Tuple[float, float, float] = ..., cl: Tuple[float, float, float] = ..., control: bool | int = ..., ctl: bool | int = ..., currentCanvasSize: bool | int = ..., ccs: bool | int = ..., defineTemplate: _util.ProxyUnicode | str = ..., dt: _util.ProxyUnicode | str = ..., displayAppearance: bool | int | _util.ProxyUnicode | str = ..., dsa: bool | int | _util.ProxyUnicode | str = ..., displayFog: bool | int = ..., dfg: bool | int = ..., displayImage: bool | int | int = ..., di: bool | int | int = ..., displayLights: bool | int | _util.ProxyUnicode | str = ..., dsl: bool | int | _util.ProxyUnicode | str = ..., displayStyle: bool | int | _util.ProxyUnicode | str = ..., dst: bool | int | _util.ProxyUnicode | str = ..., displayTextures: bool | int = ..., dtx: bool | int = ..., docTag: bool | int | _util.ProxyUnicode | str = ..., dtg: bool | int | _util.ProxyUnicode | str = ..., doubleBuffer: bool | int = ..., dbf: bool | int = ..., drawAxis: bool | int = ..., da: bool | int = ..., drawContext: bool | int = ..., drc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fastUpdate: int = ..., fu: int = ..., fileName: bool | int | _util.ProxyUnicode | str = ..., fil: bool | int | _util.ProxyUnicode | str = ..., filter: bool | int | _util.ProxyUnicode | str = ..., f: bool | int | _util.ProxyUnicode | str = ..., forceMainConnection: bool | int | _util.ProxyUnicode | str = ..., fmc: bool | int | _util.ProxyUnicode | str = ..., highlightConnection: bool | int | _util.ProxyUnicode | str = ..., hlc: bool | int | _util.ProxyUnicode | str = ..., iconGrab: bool | int = ..., ig: bool | int = ..., loadImage: _util.ProxyUnicode | str = ..., li: _util.ProxyUnicode | str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., mainListConnection: bool | int | _util.ProxyUnicode | str = ..., mlc: bool | int | _util.ProxyUnicode | str = ..., menu: _util.ProxyUnicode | str = ..., mn: _util.ProxyUnicode | str = ..., nbImages: bool | int = ..., nim: bool | int = ..., newImage: bool | int | Tuple[int, int, float, float, float] = ..., ni: bool | int | Tuple[int, int, float, float, float] = ..., paintAll: float = ..., pa: float = ..., panel: bool | int | _util.ProxyUnicode | str = ..., pnl: bool | int | _util.ProxyUnicode | str = ..., parent: bool | int | _util.ProxyUnicode | str = ..., p: bool | int | _util.ProxyUnicode | str = ..., query: bool | int = ..., q: bool | int = ..., redrawLast: bool | int = ..., rl: bool | int = ..., refresh: bool | int = ..., ref: bool | int = ..., refreshMode: bool | int | int = ..., rmd: bool | int | int = ..., removeAllImages: bool | int = ..., ra: bool | int = ..., removeImage: bool | int = ..., ri: bool | int = ..., rollImage: Tuple[float, float] = ..., rig: Tuple[float, float] = ..., saveAlpha: bool | int = ..., sa: bool | int = ..., saveBumpmap: bool | int | _util.ProxyUnicode | str = ..., sbm: bool | int | _util.ProxyUnicode | str = ..., saveImage: bool | int = ..., si: bool | int = ..., scaleBlue: bool | int | float = ..., sb: bool | int | float = ..., scaleGreen: bool | int | float = ..., sg: bool | int | float = ..., scaleRed: bool | int | float = ..., sr: bool | int | float = ..., selectionConnection: bool | int | _util.ProxyUnicode | str = ..., slc: bool | int | _util.ProxyUnicode | str = ..., singleBuffer: bool | int = ..., sbf: bool | int = ..., snapShot: bool | int = ..., snp: bool | int = ..., stateString: bool | int = ..., sts: bool | int = ..., swap: int = ..., swp: int = ..., tileSize: int = ..., ts: int = ..., unParent: bool | int = ..., up: bool | int = ..., undoCache: bool | int = ..., uc: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: _util.ProxyUnicode | str = ..., ut: _util.ProxyUnicode | str = ..., wrap: bool | int | Tuple[bool | int, bool | int] = ..., wr: bool | int | Tuple[bool | int, bool | int] = ..., writeImage: _util.ProxyUnicode | str = ..., wi: _util.ProxyUnicode | str = ..., zoom: bool | int | float = ..., zm: bool | int | float = ...): ...

def dynPref(*args, autoCreate: bool | int = ..., ac: bool | int = ..., echoCollision: bool | int = ..., ec: bool | int = ..., query: bool | int = ..., q: bool | int = ..., runupFrom: bool | int | int = ..., rf: bool | int | int = ..., runupToCurrentTime: bool | int = ..., rt: bool | int = ..., saveOnQuit: bool | int = ..., sq: bool | int = ..., saveRuntimeState: bool | int = ..., sr: bool | int = ...) -> Any: ...
def emit(*args, attribute: str | List[str] = ..., at: str | List[str] = ..., floatValue: float | List[float] = ..., fv: float | List[float] = ..., object: _util.ProxyUnicode | str = ..., o: _util.ProxyUnicode | str = ..., position: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., pos: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., vectorValue: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., vv: Tuple[float, float, float] | List[Tuple[float, float, float]] = ...) -> Any: ...

def emitter(*args, alongAxis: bool | int | float = ..., alx: bool | int | float = ..., aroundAxis: bool | int | float = ..., arx: bool | int | float = ..., awayFromAxis: bool | int | float = ..., afx: bool | int | float = ..., awayFromCenter: bool | int | float = ..., afc: bool | int | float = ..., cycleEmission: bool | int | _util.ProxyUnicode | str = ..., cye: bool | int | _util.ProxyUnicode | str = ..., cycleInterval: bool | int | int = ..., cyi: bool | int | int = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., directionalSpeed: bool | int | float = ..., drs: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., minDistance: bool | int | float = ..., mnd: bool | int | float = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., needParentUV: bool | int = ..., nuv: bool | int = ..., normalSpeed: bool | int | float = ..., nsp: bool | int | float = ..., position: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., pos: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., randomDirection: bool | int | float = ..., rnd: bool | int | float = ..., rate: bool | int | float = ..., r: bool | int | float = ..., scaleRateByObjectSize: bool | int = ..., sro: bool | int = ..., scaleSpeedBySize: bool | int = ..., ssz: bool | int = ..., speed: bool | int | float = ..., spd: bool | int | float = ..., speedRandom: bool | int | float = ..., srn: bool | int | float = ..., spread: bool | int | float = ..., sp: bool | int | float = ..., tangentSpeed: bool | int | float = ..., tsp: bool | int | float = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., type: bool | int | _util.ProxyUnicode | str = ..., typ: bool | int | _util.ProxyUnicode | str = ..., volumeOffset: bool | int | Tuple[float, float, float] = ..., vof: bool | int | Tuple[float, float, float] = ..., volumeShape: bool | int | _util.ProxyUnicode | str = ..., vsh: bool | int | _util.ProxyUnicode | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...): ...
def event(*args, count: bool | int | int = ..., ct: bool | int | int = ..., delete: bool | int = ..., d: bool | int = ..., dieAtCollision: bool | int = ..., die: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., emit: bool | int | int = ..., em: bool | int | int = ..., idNumber: int = ..., id: int = ..., list: bool | int = ..., ls: bool | int = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., proc: bool | int | str | Callable = ..., pr: bool | int | str | Callable = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int = ..., r: bool | int = ..., rename: bool | int | _util.ProxyUnicode | str = ..., re: bool | int | _util.ProxyUnicode | str = ..., select: bool | int = ..., s: bool | int = ..., split: bool | int | int = ..., spl: bool | int | int = ..., spread: bool | int | float = ..., sp: bool | int | float = ..., target: bool | int | _util.ProxyUnicode | str = ..., t: bool | int | _util.ProxyUnicode | str = ...): ...
def expression(*args, alwaysEvaluate: bool | int | int = ..., ae: bool | int | int = ..., animated: bool | int | int = ..., an: bool | int | int = ..., attribute: bool | int | _util.ProxyUnicode | str = ..., a: bool | int | _util.ProxyUnicode | str = ..., edit: bool | int = ..., e: bool | int = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., object: bool | int | _util.ProxyUnicode | str = ..., o: bool | int | _util.ProxyUnicode | str = ..., query: bool | int = ..., q: bool | int = ..., safe: bool | int = ..., sf: bool | int = ..., shortNames: bool | int = ..., sn: bool | int = ..., string: bool | int | _util.ProxyUnicode | str = ..., s: bool | int | _util.ProxyUnicode | str = ..., timeDependent: bool | int = ..., td: bool | int = ..., unitConversion: bool | int | _util.ProxyUnicode | str = ..., uc: bool | int | _util.ProxyUnicode | str = ...): ...

def expressionEditorListen(*args, listenFile: _util.ProxyUnicode | str = ..., lf: _util.ProxyUnicode | str = ..., listenForAttr: _util.ProxyUnicode | str = ..., la: _util.ProxyUnicode | str = ..., listenForExpression: _util.ProxyUnicode | str = ..., le: _util.ProxyUnicode | str = ..., listenForName: _util.ProxyUnicode | str = ..., ln: _util.ProxyUnicode | str = ..., stopListenForAttr: _util.ProxyUnicode | str = ..., sla: _util.ProxyUnicode | str = ..., stopListenForExpression: _util.ProxyUnicode | str = ..., sle: _util.ProxyUnicode | str = ..., stopListenForName: _util.ProxyUnicode | str = ..., sln: _util.ProxyUnicode | str = ...) -> Any: ...
def fluidCacheInfo(*args, attribute: bool | int | _util.ProxyUnicode | str = ..., at: bool | int | _util.ProxyUnicode | str = ..., cacheTime: bool | int | int | float = ..., t: bool | int | int | float = ..., edit: bool | int = ..., e: bool | int = ..., endFrame: bool | int = ..., ef: bool | int = ..., hasCache: bool | int = ..., hc: bool | int = ..., hasData: bool | int = ..., hd: bool | int = ..., initialConditions: bool | int = ..., ic: bool | int = ..., playback: bool | int = ..., pb: bool | int = ..., query: bool | int = ..., q: bool | int = ..., resolution: bool | int = ..., re: bool | int = ..., startFrame: bool | int = ..., sf: bool | int = ...) -> Any: ...

def fluidEmitter(*args, cycleEmission: bool | int | _util.ProxyUnicode | str = ..., cye: bool | int | _util.ProxyUnicode | str = ..., cycleInterval: bool | int | int = ..., cyi: bool | int | int = ..., densityEmissionRate: bool | int | float = ..., der: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., fluidDropoff: bool | int | float = ..., fdr: bool | int | float = ..., fuelEmissionRate: bool | int | float = ..., fer: bool | int | float = ..., heatEmissionRate: bool | int | float = ..., her: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., minDistance: bool | int | float = ..., mnd: bool | int | float = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., position: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., pos: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., rate: bool | int | float = ..., r: bool | int | float = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., type: bool | int | _util.ProxyUnicode | str = ..., typ: bool | int | _util.ProxyUnicode | str = ..., volumeOffset: bool | int | Tuple[float, float, float] = ..., vof: bool | int | Tuple[float, float, float] = ..., volumeShape: bool | int | _util.ProxyUnicode | str = ..., vsh: bool | int | _util.ProxyUnicode | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...): ...

def fluidVoxelInfo(*args, checkBounds: bool | int = ..., cb: bool | int = ..., inBounds: Tuple[int, int, int] = ..., ib: Tuple[int, int, int] = ..., objectSpace: bool | int = ..., os: bool | int = ..., radius: float = ..., r: float = ..., voxel: Tuple[float, float, float] = ..., v: Tuple[float, float, float] = ..., voxelCenter: bool | int = ..., vc: bool | int = ..., xIndex: int = ..., xi: int = ..., yIndex: int = ..., yi: int = ..., zIndex: int = ..., zi: int = ...) -> Any: ...
def getDefaultBrush(*args) -> Any: ...
def getFluidAttr(*args, attribute: _util.ProxyUnicode | str = ..., at: _util.ProxyUnicode | str = ..., lowerFace: bool | int = ..., lf: bool | int = ..., xIndex: int = ..., xi: int = ..., xvalue: bool | int = ..., x: bool | int = ..., yIndex: int = ..., yi: int = ..., yvalue: bool | int = ..., y: bool | int = ..., zIndex: int = ..., zi: int = ..., zvalue: bool | int = ..., z: bool | int = ...) -> Any: ...
def getParticleAttr(*args, array: bool | int = ..., a: bool | int = ..., attribute: _util.ProxyUnicode | str = ..., at: _util.ProxyUnicode | str = ..., object: _util.ProxyUnicode | str = ..., o: _util.ProxyUnicode | str = ...) -> Any: ...
def goal(*args, goal: bool | int | str | List[str] = ..., g: bool | int | str | List[str] = ..., index: bool | int = ..., i: bool | int = ..., query: bool | int = ..., q: bool | int = ..., useTransformAsGoal: bool | int = ..., utr: bool | int = ..., weight: float = ..., w: float = ...) -> Any: ...

def gravity(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., pos: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | Tuple[float, float, float] = ..., vof: bool | int | Tuple[float, float, float] = ..., volumeShape: bool | int | _util.ProxyUnicode | str = ..., vsh: bool | int | _util.ProxyUnicode | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...): ...

def loadFluid(*args, currentTime: bool | int = ..., ct: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frame: bool | int | float = ..., f: bool | int | float = ..., initialConditions: bool | int = ..., ic: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...

def nBase(*args, clearCachedTextureMap: _util.ProxyUnicode | str = ..., cct: _util.ProxyUnicode | str = ..., clearStart: bool | int = ..., cs: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., stuffStart: bool | int = ..., ss: bool | int = ..., textureToVertex: _util.ProxyUnicode | str = ..., ttv: _util.ProxyUnicode | str = ...): ...
def nParticle(*args, attribute: bool | int | _util.ProxyUnicode | str = ..., at: bool | int | _util.ProxyUnicode | str = ..., cache: bool | int = ..., ch: bool | int = ..., conserve: bool | int | float = ..., c: bool | int | float = ..., count: bool | int = ..., ct: bool | int = ..., deleteCache: bool | int = ..., dc: bool | int = ..., dynamicAttrList: bool | int = ..., dal: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., floatValue: float = ..., fv: float = ..., gridSpacing: bool | int | float | List[float] = ..., grs: bool | int | float | List[float] = ..., inherit: bool | int | float = ..., i: bool | int | float = ..., jitterBasePoint: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., jbp: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., jitterRadius: bool | int | float | List[float] = ..., jr: bool | int | float | List[float] = ..., lowerLeft: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., ll: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., numJitters: bool | int | int | List[int] = ..., nj: bool | int | int | List[int] = ..., order: bool | int | int = ..., particleId: bool | int | int = ..., id: bool | int | int = ..., perParticleDouble: bool | int = ..., ppd: bool | int = ..., perParticleVector: bool | int = ..., ppv: bool | int = ..., position: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., p: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., shapeName: bool | int | _util.ProxyUnicode | str = ..., sn: bool | int | _util.ProxyUnicode | str = ..., upperRight: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., ur: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., vectorValue: Tuple[float, float, float] = ..., vv: Tuple[float, float, float] = ...): ...

def nSoft(*args, convert: bool | int = ..., c: bool | int = ..., duplicate: bool | int = ..., d: bool | int = ..., duplicateHistory: bool | int = ..., dh: bool | int = ..., goal: float = ..., g: float = ..., hideOriginal: bool | int = ..., h: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def newton(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., minDistance: bool | int | float = ..., mnd: bool | int | float = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., pos: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | Tuple[float, float, float] = ..., vof: bool | int | Tuple[float, float, float] = ..., volumeShape: bool | int | _util.ProxyUnicode | str = ..., vsh: bool | int | _util.ProxyUnicode | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...) -> Any: ...
def paintEffectsDisplay(*args, meshDrawEnable: bool | int = ..., me: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...

def particle(*args, attribute: bool | int | _util.ProxyUnicode | str = ..., at: bool | int | _util.ProxyUnicode | str = ..., cache: bool | int = ..., ch: bool | int = ..., conserve: bool | int | float = ..., c: bool | int | float = ..., count: bool | int = ..., ct: bool | int = ..., deleteCache: bool | int = ..., dc: bool | int = ..., dynamicAttrList: bool | int = ..., dal: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., floatValue: float = ..., fv: float = ..., gridSpacing: bool | int | float | List[float] = ..., grs: bool | int | float | List[float] = ..., inherit: bool | int | float = ..., i: bool | int | float = ..., jitterBasePoint: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., jbp: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., jitterRadius: bool | int | float | List[float] = ..., jr: bool | int | float | List[float] = ..., lowerLeft: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., ll: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., numJitters: bool | int | int | List[int] = ..., nj: bool | int | int | List[int] = ..., order: bool | int | int = ..., particleId: bool | int | int = ..., id: bool | int | int = ..., perParticleDouble: bool | int = ..., ppd: bool | int = ..., perParticleVector: bool | int = ..., ppv: bool | int = ..., position: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., p: Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., shapeName: bool | int | _util.ProxyUnicode | str = ..., sn: bool | int | _util.ProxyUnicode | str = ..., upperRight: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., ur: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., vectorValue: Tuple[float, float, float] = ..., vv: Tuple[float, float, float] = ...): ...

def particleExists(*args) -> Any: ...
def particleFill(*args, closePacking: bool | int = ..., cp: bool | int = ..., doubleWalled: bool | int = ..., dw: bool | int = ..., maxX: float = ..., mxx: float = ..., maxY: float = ..., mxy: float = ..., maxZ: float = ..., mxz: float = ..., minX: float = ..., mnx: float = ..., minY: float = ..., mny: float = ..., minZ: float = ..., mnz: float = ..., particleDensity: float = ..., pd: float = ..., resolution: int = ..., rs: int = ...) -> Any: ...
def particleInstancer(*args, addObject: bool | int = ..., a: bool | int = ..., aimAxis: bool | int | _util.ProxyUnicode | str = ..., aa: bool | int | _util.ProxyUnicode | str = ..., aimDirection: bool | int | _util.ProxyUnicode | str = ..., ad: bool | int | _util.ProxyUnicode | str = ..., aimPosition: bool | int | _util.ProxyUnicode | str = ..., ap: bool | int | _util.ProxyUnicode | str = ..., aimUpAxis: bool | int | _util.ProxyUnicode | str = ..., aua: bool | int | _util.ProxyUnicode | str = ..., aimWorldUp: bool | int | _util.ProxyUnicode | str = ..., awu: bool | int | _util.ProxyUnicode | str = ..., attributeMapping: bool | int = ..., am: bool | int = ..., cycle: bool | int | _util.ProxyUnicode | str = ..., c: bool | int | _util.ProxyUnicode | str = ..., cycleStartObject: bool | int | _util.ProxyUnicode | str = ..., sto: bool | int | _util.ProxyUnicode | str = ..., cycleStep: bool | int | float = ..., cs: bool | int | float = ..., cycleStepUnits: bool | int | _util.ProxyUnicode | str = ..., csu: bool | int | _util.ProxyUnicode | str = ..., edit: bool | int = ..., e: bool | int = ..., index: bool | int | int = ..., i: bool | int | int = ..., instanceId: bool | int | _util.ProxyUnicode | str = ..., id: bool | int | _util.ProxyUnicode | str = ..., levelOfDetail: bool | int | _util.ProxyUnicode | str = ..., lod: bool | int | _util.ProxyUnicode | str = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., object: bool | int | str | List[str] = ..., obj: bool | int | str | List[str] = ..., objectIndex: bool | int | _util.ProxyUnicode | str = ..., oi: bool | int | _util.ProxyUnicode | str = ..., particleAge: bool | int | _util.ProxyUnicode | str = ..., age: bool | int | _util.ProxyUnicode | str = ..., position: bool | int | _util.ProxyUnicode | str = ..., p: bool | int | _util.ProxyUnicode | str = ..., query: bool | int = ..., q: bool | int = ..., removeObject: bool | int = ..., rm: bool | int = ..., rotation: bool | int | _util.ProxyUnicode | str = ..., r: bool | int | _util.ProxyUnicode | str = ..., rotationOrder: bool | int | _util.ProxyUnicode | str = ..., ro: bool | int | _util.ProxyUnicode | str = ..., rotationType: bool | int | _util.ProxyUnicode | str = ..., rt: bool | int | _util.ProxyUnicode | str = ..., rotationUnits: bool | int | _util.ProxyUnicode | str = ..., ru: bool | int | _util.ProxyUnicode | str = ..., scale: bool | int | _util.ProxyUnicode | str = ..., sc: bool | int | _util.ProxyUnicode | str = ..., shear: bool | int | _util.ProxyUnicode | str = ..., sh: bool | int | _util.ProxyUnicode | str = ..., visibility: bool | int | _util.ProxyUnicode | str = ..., vis: bool | int | _util.ProxyUnicode | str = ...) -> Any: ...
def particleRenderInfo(*args, attrList: bool | int | int = ..., al: bool | int | int = ..., attrListAll: bool | int = ..., ala: bool | int = ..., name: bool | int | int = ..., n: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., renderTypeCount: bool | int = ..., rtc: bool | int = ...) -> Any: ...
def pfxstrokes(*args, filename: _util.ProxyUnicode | str = ..., fn: _util.ProxyUnicode | str = ..., postCallback: bool | int = ..., pc: bool | int = ..., selected: bool | int = ..., sl: bool | int = ...) -> Any: ...
def radial(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., pos: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., type: bool | int | float = ..., typ: bool | int | float = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | Tuple[float, float, float] = ..., vof: bool | int | Tuple[float, float, float] = ..., volumeShape: bool | int | _util.ProxyUnicode | str = ..., vsh: bool | int | _util.ProxyUnicode | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...) -> Any: ...
def resampleFluid(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., resampleDepth: bool | int | int = ..., rd: bool | int | int = ..., resampleHeight: bool | int | int = ..., rh: bool | int | int = ..., resampleWidth: bool | int | int = ..., rw: bool | int | int = ...) -> Any: ...

def rigidBody(*args, active: bool | int = ..., act: bool | int = ..., angularVelocity: bool | int = ..., av: bool | int = ..., applyForceAt: bool | int | _util.ProxyUnicode | str = ..., afa: bool | int | _util.ProxyUnicode | str = ..., bounciness: bool | int | float = ..., b: bool | int | float = ..., cache: bool | int = ..., c: bool | int = ..., centerOfMass: bool | int | Tuple[float, float, float] = ..., com: bool | int | Tuple[float, float, float] = ..., collisions: bool | int = ..., cl: bool | int = ..., contactCount: bool | int = ..., cc: bool | int = ..., contactName: bool | int = ..., cn: bool | int = ..., contactPosition: bool | int = ..., cp: bool | int = ..., damping: bool | int | float = ..., dp: bool | int | float = ..., deleteCache: bool | int = ..., dc: bool | int = ..., dynamicFriction: bool | int | float = ..., df: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., force: bool | int = ..., f: bool | int = ..., ignore: bool | int = ..., ig: bool | int = ..., impulse: Tuple[float, float, float] = ..., i: Tuple[float, float, float] = ..., impulsePosition: Tuple[float, float, float] = ..., imp: Tuple[float, float, float] = ..., initialAngularVelocity: bool | int | Tuple[float, float, float] = ..., iav: bool | int | Tuple[float, float, float] = ..., initialVelocity: bool | int | Tuple[float, float, float] = ..., iv: bool | int | Tuple[float, float, float] = ..., layer: bool | int | int = ..., l: bool | int | int = ..., lockCenterOfMass: bool | int = ..., lcm: bool | int = ..., mass: bool | int | float = ..., m: bool | int | float = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., orientation: bool | int | Tuple[float, float, float] = ..., o: bool | int | Tuple[float, float, float] = ..., particleCollision: bool | int = ..., pc: bool | int = ..., passive: bool | int = ..., pas: bool | int = ..., position: bool | int | Tuple[float, float, float] = ..., p: bool | int | Tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., removeShape: bool | int | _util.ProxyUnicode | str = ..., rs: bool | int | _util.ProxyUnicode | str = ..., solver: bool | int | _util.ProxyUnicode | str = ..., slv: bool | int | _util.ProxyUnicode | str = ..., spinImpulse: Tuple[float, float, float] = ..., si: Tuple[float, float, float] = ..., standInObject: bool | int | _util.ProxyUnicode | str = ..., sio: bool | int | _util.ProxyUnicode | str = ..., staticFriction: bool | int | float = ..., sf: bool | int | float = ..., tesselationFactor: bool | int | int = ..., tf: bool | int | int = ..., velocity: bool | int = ..., vel: bool | int = ...): ...
def rigidSolver(*args, autoTolerances: bool | int = ..., at: bool | int = ..., bounciness: bool | int = ..., b: bool | int = ..., cacheData: bool | int = ..., cd: bool | int = ..., collide: bool | int = ..., c: bool | int = ..., collisionTolerance: bool | int | float = ..., ct: bool | int | float = ..., contactData: bool | int = ..., ctd: bool | int = ..., create: bool | int = ..., cr: bool | int = ..., current: bool | int = ..., cu: bool | int = ..., deleteCache: bool | int = ..., displayCenterOfMass: bool | int = ..., dcm: bool | int = ..., displayConstraint: bool | int = ..., dc: bool | int = ..., displayVelocity: bool | int = ..., dv: bool | int = ..., dynamics: bool | int = ..., d: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., friction: bool | int = ..., f: bool | int = ..., interpenetrate: bool | int = ..., i: bool | int = ..., interpenetrationCheck: bool | int = ..., ic: bool | int = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., query: bool | int = ..., q: bool | int = ..., rigidBodies: bool | int = ..., rb: bool | int = ..., rigidBodyCount: bool | int = ..., rbc: bool | int = ..., showCollision: bool | int = ..., sc: bool | int = ..., showInterpenetration: bool | int = ..., si: bool | int = ..., solverMethod: bool | int | int = ..., sm: bool | int | int = ..., startTime: bool | int | float = ..., stt: bool | int | float = ..., state: bool | int = ..., st: bool | int = ..., statistics: bool | int = ..., sta: bool | int = ..., stepSize: bool | int | float = ..., s: bool | int | float = ..., velocityVectorScale: bool | int | float = ..., vs: bool | int | float = ...): ...

def runup(*args, cache: bool | int = ..., cch: bool | int = ..., fromPreviousFrame: bool | int = ..., fpf: bool | int = ..., fromStartFrame: bool | int = ..., fsf: bool | int = ..., maxFrame: int | float = ..., mxf: int | float = ..., state: bool | int = ..., st: bool | int = ...) -> Any: ...
def saveFluid(*args, currentTime: bool | int | int = ..., ct: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endTime: bool | int | int = ..., et: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., startTime: bool | int | int = ..., st: bool | int | int = ...) -> Any: ...
def saveInitialState(*args, attribute: str | List[str] = ..., atr: str | List[str] = ..., saveall: bool | int = ..., all: bool | int = ...) -> Any: ...
def setDynamic(*args, allOnWhenRun: bool | int = ..., awr: bool | int = ..., disableAllOnWhenRun: bool | int = ..., dwr: bool | int = ..., setAll: bool | int = ..., all: bool | int = ..., setOff: bool | int = ..., off: bool | int = ..., setOn: bool | int = ..., on: bool | int = ...) -> Any: ...
def setFluidAttr(*args, addValue: bool | int = ..., ad: bool | int = ..., attribute: _util.ProxyUnicode | str = ..., at: _util.ProxyUnicode | str = ..., clear: bool | int = ..., cl: bool | int = ..., floatRandom: float = ..., fr: float = ..., floatValue: float = ..., fv: float = ..., lowerFace: bool | int = ..., lf: bool | int = ..., reset: bool | int = ..., re: bool | int = ..., vectorRandom: Tuple[float, float, float] = ..., vr: Tuple[float, float, float] = ..., vectorValue: Tuple[float, float, float] = ..., vv: Tuple[float, float, float] = ..., xIndex: int = ..., xi: int = ..., xvalue: bool | int = ..., x: bool | int = ..., yIndex: int = ..., yi: int = ..., yvalue: bool | int = ..., y: bool | int = ..., zIndex: int = ..., zi: int = ..., zvalue: bool | int = ..., z: bool | int = ...) -> Any: ...
def setParticleAttr(*args, attribute: _util.ProxyUnicode | str = ..., at: _util.ProxyUnicode | str = ..., floatValue: float = ..., fv: float = ..., object: _util.ProxyUnicode | str = ..., o: _util.ProxyUnicode | str = ..., randomFloat: float = ..., rf: float = ..., randomVector: Tuple[float, float, float] = ..., rv: Tuple[float, float, float] = ..., relative: bool | int = ..., r: bool | int = ..., vectorValue: Tuple[float, float, float] = ..., vv: Tuple[float, float, float] = ...) -> Any: ...
def soft(*args, convert: bool | int = ..., c: bool | int = ..., duplicate: bool | int = ..., d: bool | int = ..., duplicateHistory: bool | int = ..., dh: bool | int = ..., goal: float = ..., g: float = ..., hideOriginal: bool | int = ..., h: bool | int = ..., name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...

def spring(*args, addSprings: bool | int = ..., add: bool | int = ..., allPoints: bool | int = ..., all: bool | int = ..., count: bool | int = ..., ct: bool | int = ..., damp: float = ..., dmp: float = ..., damping: bool | int | float = ..., d: bool | int | float = ..., dampingPS: bool | int | float = ..., dPS: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., endForceWeight: bool | int | float = ..., efw: bool | int | float = ..., exclusive: bool | int = ..., exc: bool | int = ..., length: bool | int | float = ..., l: bool | int | float = ..., maxDistance: float = ..., mxd: float = ..., minDistance: float = ..., mnd: float = ..., minMax: bool | int = ..., mm: bool | int = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., noDuplicate: bool | int = ..., nd: bool | int = ..., query: bool | int = ..., q: bool | int = ..., restLength: bool | int | float = ..., rl: bool | int | float = ..., restLengthPS: bool | int | float = ..., rPS: bool | int | float = ..., startForceWeight: bool | int | float = ..., sfw: bool | int | float = ..., stiffness: bool | int | float = ..., s: bool | int | float = ..., stiffnessPS: bool | int | float = ..., sPS: bool | int | float = ..., strength: float = ..., str: float = ..., useDampingPS: bool | int = ..., udp: bool | int = ..., useRestLengthPS: bool | int = ..., urp: bool | int = ..., useStiffnessPS: bool | int = ..., usp: bool | int = ..., walkLength: int = ..., wl: int = ..., wireframe: bool | int = ..., wf: bool | int = ...): ...
def stroke(*args, name: _util.ProxyUnicode | str = ..., n: _util.ProxyUnicode | str = ..., pressure: bool | int = ..., pr: bool | int = ..., seed: int = ..., s: int = ...): ...

def truncateFluidCache(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def truncateHairCache(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...

def turbulence(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frequency: bool | int | float = ..., f: bool | int | float = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., noiseLevel: bool | int | int = ..., nsl: bool | int | int = ..., noiseRatio: bool | int | float = ..., nsr: bool | int | float = ..., perVertex: bool | int = ..., pv: bool | int = ..., phase: bool | int | float = ..., p: bool | int | float = ..., phaseX: bool | int | float = ..., px: bool | int | float = ..., phaseY: bool | int | float = ..., py: bool | int | float = ..., phaseZ: bool | int | float = ..., pz: bool | int | float = ..., position: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., pos: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | Tuple[float, float, float] = ..., vof: bool | int | Tuple[float, float, float] = ..., volumeShape: bool | int | _util.ProxyUnicode | str = ..., vsh: bool | int | _util.ProxyUnicode | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...): ...
def uniform(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., pos: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | Tuple[float, float, float] = ..., vof: bool | int | Tuple[float, float, float] = ..., volumeShape: bool | int | _util.ProxyUnicode | str = ..., vsh: bool | int | _util.ProxyUnicode | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...): ...
def volumeAxis(*args, alongAxis: bool | int | float = ..., alx: bool | int | float = ..., aroundAxis: bool | int | float = ..., arx: bool | int | float = ..., attenuation: bool | int | float = ..., att: bool | int | float = ..., awayFromAxis: bool | int | float = ..., afx: bool | int | float = ..., awayFromCenter: bool | int | float = ..., afc: bool | int | float = ..., detailTurbulence: bool | int | float = ..., dtr: bool | int | float = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., directionalSpeed: bool | int | float = ..., drs: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., invertAttenuation: bool | int = ..., ia: bool | int = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., pos: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., turbulence: bool | int | float = ..., trb: bool | int | float = ..., turbulenceFrequencyX: bool | int | float = ..., tfx: bool | int | float = ..., turbulenceFrequencyY: bool | int | float = ..., tfy: bool | int | float = ..., turbulenceFrequencyZ: bool | int | float = ..., tfz: bool | int | float = ..., turbulenceOffsetX: bool | int | float = ..., tox: bool | int | float = ..., turbulenceOffsetY: bool | int | float = ..., toy: bool | int | float = ..., turbulenceOffsetZ: bool | int | float = ..., toz: bool | int | float = ..., turbulenceSpeed: bool | int | float = ..., trs: bool | int | float = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | Tuple[float, float, float] = ..., vof: bool | int | Tuple[float, float, float] = ..., volumeShape: bool | int | _util.ProxyUnicode | str = ..., vsh: bool | int | _util.ProxyUnicode | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...): ...
def vortex(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., axisX: bool | int | float = ..., ax: bool | int | float = ..., axisY: bool | int | float = ..., ay: bool | int | float = ..., axisZ: bool | int | float = ..., az: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | _util.ProxyUnicode | str = ..., n: bool | int | _util.ProxyUnicode | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., pos: bool | int | Tuple[float, float, float] | List[Tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | Tuple[float, float, float] = ..., vof: bool | int | Tuple[float, float, float] = ..., volumeShape: bool | int | _util.ProxyUnicode | str = ..., vsh: bool | int | _util.ProxyUnicode | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...): ...
