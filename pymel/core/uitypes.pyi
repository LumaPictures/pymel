from typing import *
import pymel.core.general as _general
import pymel.util as _util
from _typeshed import Incomplete
from builtins import str
from pymel.core import animation as animation, effects as effects, general as general, modeling as modeling, other as other, rendering as rendering, system as system, windows as windows
from typing import Any, Callable, List, Optional, Tuple, Union, overload

mayaTypeNameToPymelTypeName: Incomplete
pymelTypeNameToMayaTypeName: Incomplete

def toPyQtObject(mayaName): ...
def toPyQtControl(mayaName): ...
def toPyQtLayout(mayaName): ...
def toPyQtWindow(mayaName): ...
def toPyQtMenuItem(mayaName): ...
def pysideWrapInstance(ptr, base: Incomplete | None = ...): ...
def toPySideObject(mayaName): ...
def toPySideControl(mayaName): ...
def toPySideLayout(mayaName): ...
def toPySideWindow(mayaName): ...
def toPySideMenuItem(mayaName): ...

pyQtAvailable = True
pySideAvailable = True
qtBinding: str
toQtObject = toPyQtObject
toQtControl = toPyQtControl
toQtLayout = toPyQtLayout
toQtWindow = toPyQtWindow
toQtMenuItem = toPyQtMenuItem
toQtObject = toPySideObject
toQtControl = toPySideControl
toQtLayout = toPySideLayout
toQtWindow = toPySideWindow
toQtMenuItem = toPySideMenuItem

def objectTypeUI(name, isType: _util.ProxyUnicode | str = ..., i: _util.ProxyUnicode | str = ..., listAll: bool | int = ..., la: bool | int = ..., superClasses: bool | int = ..., sc: bool | int = ...): ...

class PyUI(str):
    __melui__: str
    def __new__(cls, name: Incomplete | None = ..., create: bool = ..., **kwargs): ...
    def parent(self) -> PyUI: ...
    getParent = parent
    def shortName(self) -> str: ...
    def name(self) -> str: ...
    def window(self) -> Window: ...
    def delete(*args, all: bool | int = ..., attribute: str | List[str] = ..., at: str | List[str] = ..., channels: bool | int = ..., c: bool | int = ..., constraints: bool | int = ..., cn: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., controlPoints: bool | int = ..., cp: bool | int = ..., expressions: bool | int = ..., e: bool | int = ..., hierarchy: _util.ProxyUnicode | str = ..., hi: _util.ProxyUnicode | str = ..., inputConnectionsAndNodes: bool | int = ..., icn: bool | int = ..., motionPaths: bool | int = ..., mp: bool | int = ..., shape: bool | int = ..., s: bool | int = ..., staticChannels: bool | int = ..., sc: bool | int = ..., timeAnimationCurves: bool | int = ..., tac: bool | int = ..., unitlessAnimationCurves: bool | int = ..., uac: bool | int = ...) -> Any: ...
    def rename(*args, ignoreShape: bool | int = ..., uuid: bool | int = ..., uid: bool | int = ...) -> Any: ...
    type = objectTypeUI
    @classmethod
    def exists(cls, name): ...
    asQtObject = toQtControl

class Panel(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def copy(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def createString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def editString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getControl(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getIsUnique(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getMenuBarRepeatLast(self, **kwargs) -> bool: ...
    def getMenuBarVisible(self, **kwargs) -> bool: ...
    def getNeedsInit(self, **kwargs) -> bool: ...
    def getPopupMenuProcedure(self, **kwargs) -> Union[str, Callable]: ...
    def getTearOff(self, **kwargs) -> bool: ...
    def init(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def replacePanel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMenuBarRepeatLast(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMenuBarVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNeedsInit(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPopupMenuProcedure(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setTearOff(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def tearOffRestore(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class PyUIContainer(PyUI):
    def __enter__(self): ...
    def __exit__(self, type, value, traceback) -> None: ...
    def walkChildren(self) -> Iterator[PyUI]: ...
    def findChild(self, shortName: str, recurse: bool = ...) -> Optional[PyUI]: ...
    def addChild(self, uiType, name: Incomplete | None = ..., **kwargs): ...
    def makeDefault(self) -> None: ...
    def pop(self): ...

class Layout(PyUIContainer):
    def children(self) -> List[PyUI]: ...
    getChildren = children
    def clear(self) -> None: ...
    asQtObject = toQtLayout
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getChildArray(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfChildren(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class Window(PyUIContainer):
    def __exit__(self, type, value, traceback) -> None: ...
    def show(self) -> None: ...
    def delete(self) -> None: ...
    def layout(self): ...
    def children(self): ...
    getChildren = children
    def window(self): ...
    def parent(self) -> None: ...
    getParent = parent
    asQtObject = toQtWindow
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def backgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def closeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getDockingLayout(self, **kwargs) -> str: ...
    def getFrontWindow(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getIconName(self, **kwargs) -> str: ...
    def getIconify(self, **kwargs) -> bool: ...
    def getLeftEdge(self, **kwargs) -> int: ...
    def getMainMenuBar(self, **kwargs) -> bool: ...
    def getMainWindow(self, **kwargs) -> bool: ...
    def getMaximizeButton(self, **kwargs) -> bool: ...
    def getMenuArray(self, **kwargs) -> Any: ...
    def getMenuBar(self, **kwargs) -> Any: ...
    def getMenuBarCornerWidget(self, **kwargs) -> Tuple[str, str]: ...
    def getMenuBarVisible(self, **kwargs) -> bool: ...
    def getMinimizeButton(self, **kwargs) -> bool: ...
    def getNumberOfMenus(self, **kwargs) -> Any: ...
    def getResizeToFitChildren(self, **kwargs) -> bool: ...
    def getSizeable(self, **kwargs) -> bool: ...
    def getState(self, **kwargs) -> str: ...
    def getTitle(self, **kwargs) -> str: ...
    def getTitleBar(self, **kwargs) -> bool: ...
    def getTitleBarMenu(self, **kwargs) -> bool: ...
    def getToolbox(self, **kwargs) -> bool: ...
    def getTopEdge(self, **kwargs) -> int: ...
    def getTopLeftCorner(self, **kwargs) -> Tuple[int, int]: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getWidth(self, **kwargs) -> int: ...
    def getWidthHeight(self, **kwargs) -> Tuple[int, int]: ...
    def menuBarResize(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def menuIndex(self, val: Tuple[str, int] = ..., **kwargs: Any) -> None: ...
    def minimizeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def restoreCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDockingLayout(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setIconName(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setIconify(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setLeftEdge(self, val: int = ..., **kwargs: Any) -> None: ...
    def setMainMenuBar(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMainWindow(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaximizeButton(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMenuBarCornerWidget(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def setMenuBarVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMinimizeButton(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setResizeToFitChildren(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSizeable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setState(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setTitle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setTitleBar(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTitleBarMenu(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setToolbox(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTopEdge(self, val: int = ..., **kwargs: Any) -> None: ...
    def setTopLeftCorner(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setWidthHeight(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...

class FormLayout(Layout):
    def __new__(cls, name: Incomplete | None = ..., **kwargs): ...
    def __init__(self, name: Incomplete | None = ..., orientation: str = ..., spacing: int = ..., reversed: bool = ..., ratios: Incomplete | None = ..., **kwargs) -> None: ...
    def attachForm(self, *args) -> None: ...
    def attachControl(self, *args) -> None: ...
    def attachNone(self, *args) -> None: ...
    def attachPosition(self, *args) -> None: ...
    HORIZONTAL: int
    VERTICAL: int
    Orientation: Incomplete
    def flip(self) -> None: ...
    def reverse(self) -> None: ...
    def reset(self) -> None: ...
    def redistribute(self, *ratios) -> None: ...
    def vDistribute(self, *ratios) -> None: ...
    def hDistribute(self, *ratios) -> None: ...
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def attachOppositeControl(self, val: Union[Tuple[str, str, int, str], List[Tuple[str, str, int, str]]] = ..., **kwargs: Any) -> None: ...
    def attachOppositeForm(self, val: Union[Tuple[str, str, int], List[Tuple[str, str, int]]] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getChildArray(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfChildren(self, **kwargs) -> Any: ...
    def getNumberOfDivisions(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNumberOfDivisions(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class AutoLayout(FormLayout):
    def __exit__(self, type, value, traceback) -> None: ...

class RowLayout(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getChildArray(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfChildren(self, **kwargs) -> Any: ...
    def getNumberOfColumns(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class TextScrollList(PyUI):
    def extend(self, appendList) -> None: ...
    def selectIndexedItems(self, selectList) -> None: ...
    def removeIndexedItems(self, removeList) -> None: ...
    def selectAll(self) -> None: ...
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def append(self, val: Union[str, List[str]] = ..., **kwargs: Any) -> None: ...
    def appendPosition(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def deleteKeyCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def deselectAll(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def deselectIndexedItem(self, val: Union[int, List[int]] = ..., **kwargs: Any) -> None: ...
    def deselectItem(self, val: Union[str, List[str]] = ..., **kwargs: Any) -> None: ...
    def doubleClickCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAllItems(self, **kwargs) -> Any: ...
    def getAllowAutomaticSelection(self, **kwargs) -> bool: ...
    def getAllowMultiSelection(self, **kwargs) -> bool: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFont(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfItems(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getNumberOfRows(self, **kwargs) -> int: ...
    def getNumberOfSelectedItems(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSelectIndexedItem(self, **kwargs) -> int: ...
    def getSelectItem(self, **kwargs) -> str: ...
    def getSelectUniqueTagItem(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def lineFont(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def removeAll(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def removeIndexedItem(self, val: Union[int, List[int]] = ..., **kwargs: Any) -> None: ...
    def removeItem(self, val: Union[str, List[str]] = ..., **kwargs: Any) -> None: ...
    def selectCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setAllowAutomaticSelection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAllowMultiSelection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFont(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNumberOfRows(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSelectIndexedItem(self, val: Union[int, List[int]] = ..., **kwargs: Any) -> None: ...
    def setSelectItem(self, val: Union[str, List[str]] = ..., **kwargs: Any) -> None: ...
    def setSelectUniqueTagItem(self, val: Union[str, List[str]] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def showIndexedItem(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def uniqueTag(self, val: Union[str, List[str]] = ..., **kwargs: Any) -> None: ...

class Menu(PyUI):
    def __enter__(self): ...
    def __exit__(self, type, value, traceback) -> None: ...
    def getItemArray(self): ...
    def makeDefault(self) -> None: ...
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def deleteAllItems(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getAllowOptionBoxes(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getFamilyImage(self, **kwargs) -> str: ...
    def getHelpMenu(self, **kwargs) -> bool: ...
    def getLabel(self, **kwargs) -> str: ...
    def getLtVersion(self, **kwargs) -> str: ...
    def getMnemonic(self, **kwargs) -> str: ...
    def getNumberOfItems(self, **kwargs) -> Any: ...
    def getPostMenuCommandOnce(self, **kwargs) -> bool: ...
    def getScrollable(self, **kwargs) -> bool: ...
    def getVersion(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def postMenuCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFamilyImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHelpMenu(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLtVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMnemonic(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setPostMenuCommandOnce(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setScrollable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class PopupMenu(Menu):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def deleteAllItems(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getAllowOptionBoxes(self, **kwargs) -> Any: ...
    def getAltModifier(self, **kwargs) -> bool: ...
    def getButton(self, **kwargs) -> int: ...
    def getCtrlModifier(self, **kwargs) -> bool: ...
    def getMarkingMenu(self, **kwargs) -> bool: ...
    def getNumberOfItems(self, **kwargs) -> Any: ...
    def getPostMenuCommandOnce(self, **kwargs) -> bool: ...
    def getShiftModifier(self, **kwargs) -> bool: ...
    def postMenuCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setAltModifier(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setButton(self, val: int = ..., **kwargs: Any) -> None: ...
    def setCtrlModifier(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMarkingMenu(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPostMenuCommandOnce(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShiftModifier(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class OptionMenu(PopupMenu):
    def addMenuItems(self, items, title: Incomplete | None = ...) -> None: ...
    def clear(self) -> None: ...
    addItems = addMenuItems
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def beforeShowPopup(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def deleteAllItems(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAlwaysCallChangeCommand(self, **kwargs) -> Any: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getItemListLong(self, **kwargs) -> Any: ...
    def getItemListShort(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaxVisibleItems(self, **kwargs) -> int: ...
    def getNumberOfItems(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPostMenuCommandOnce(self, **kwargs) -> bool: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSelect(self, **kwargs) -> int: ...
    def getValue(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def postMenuCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxVisibleItems(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPostMenuCommandOnce(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSelect(self, val: int = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class OptionMenuGrp(RowLayout):
    def menu(self): ...
    def __enter__(self): ...
    def __exit__(self, type, value, traceback): ...
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def deleteAllItems(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getExtraLabel(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getItemListLong(self, **kwargs) -> Any: ...
    def getItemListShort(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfItems(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPostMenuCommandOnce(self, **kwargs) -> bool: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSelect(self, **kwargs) -> int: ...
    def getValue(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def postMenuCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setExtraLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPostMenuCommandOnce(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSelect(self, val: int = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class SubMenuItem(Menu):
    def getBoldFont(self): ...
    def getItalicized(self): ...
    asQtObject = toQtMenuItem

class CommandMenuItem(PyUI):
    __melui__: str
    def __enter__(self): ...
    def __exit__(self, type, value, traceback): ...
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    def getAllowOptionBoxes(self, **kwargs) -> Any: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBoldFont(self, **kwargs) -> Any: ...
    def getCheckBox(self, **kwargs) -> bool: ...
    def getCollection(self, **kwargs) -> Any: ...
    def getCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getData(self, **kwargs) -> int: ...
    def getDivider(self, **kwargs) -> Any: ...
    def getDividerLabel(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getDragDoubleClickCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getDragMenuCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getEchoCommand(self, **kwargs) -> bool: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableCommandRepeat(self, **kwargs) -> bool: ...
    def getFamilyImage(self, **kwargs) -> Any: ...
    def getImage(self, **kwargs) -> str: ...
    def getImageOverlayLabel(self, **kwargs) -> str: ...
    def getIsCheckBox(self, **kwargs) -> Any: ...
    def getIsOptionBox(self, **kwargs) -> Any: ...
    def getIsRadioButton(self, **kwargs) -> Any: ...
    def getItalicized(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getLongDivider(self, **kwargs) -> bool: ...
    def getLtVersion(self, **kwargs) -> str: ...
    def getOptionBox(self, **kwargs) -> Any: ...
    def getOptionBoxIcon(self, **kwargs) -> str: ...
    def getPostMenuCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getPostMenuCommandOnce(self, **kwargs) -> bool: ...
    def getRadialPosition(self, **kwargs) -> str: ...
    def getRadioButton(self, **kwargs) -> bool: ...
    def getSourceType(self, **kwargs) -> str: ...
    def getSubMenu(self, **kwargs) -> Any: ...
    def getTearOff(self, **kwargs) -> Any: ...
    def getVersion(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def runTimeCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setCheckBox(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setData(self, val: int = ..., **kwargs: Any) -> None: ...
    def setDividerLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDragDoubleClickCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setDragMenuCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setEchoCommand(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableCommandRepeat(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImageOverlayLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLongDivider(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setLtVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setOptionBoxIcon(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setPostMenuCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setPostMenuCommandOnce(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRadialPosition(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setRadioButton(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSourceType(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

def MenuItem(name: Incomplete | None = ..., create: bool = ..., **kwargs): ...

class UITemplate:
    def __init__(self, name: Incomplete | None = ..., force: bool = ...) -> None: ...
    def __enter__(self): ...
    def __exit__(self, type, value, traceback) -> None: ...
    def name(self): ...
    def push(self) -> None: ...
    def pop(self) -> None: ...
    def define(self, uiType, **kwargs) -> None: ...
    @staticmethod
    def exists(name): ...

class AELoader(type):
    def __new__(cls, classname, bases, classdict): ...
    @staticmethod
    def makeAEProc(modname, classname, procname) -> None: ...
    @staticmethod
    def load(modname, classname, nodename) -> None: ...
    @classmethod
    def loadedTemplates(cls): ...

class AETemplate:
    def __init__(self, nodeName) -> None: ...
    @property
    def nodeName(self): ...
    @classmethod
    def nodeType(cls): ...
    @classmethod
    def controlValue(cls, nodeName, control): ...
    @classmethod
    def controlLabel(cls, nodeName, control): ...
    @classmethod
    def reload(cls) -> None: ...
    def addControl(self, control, label: Incomplete | None = ..., changeCommand: Incomplete | None = ..., annotation: Incomplete | None = ..., preventOverride: bool = ..., dynamic: bool = ...) -> None: ...
    def callCustom(self, newFunc, replaceFunc, *attrs) -> None: ...
    def suppress(self, control) -> None: ...
    def dimControl(self, nodeName, control, state) -> None: ...
    def beginLayout(self, name, collapse: bool = ...) -> None: ...
    def endLayout(self) -> None: ...
    def beginScrollLayout(self) -> None: ...
    def endScrollLayout(self) -> None: ...
    def beginNoOptimize(self) -> None: ...
    def endNoOptimize(self) -> None: ...
    def interruptOptimize(self) -> None: ...
    def addSeparator(self) -> None: ...
    def addComponents(self) -> None: ...
    def addExtraControls(self, label: Incomplete | None = ...) -> None: ...

class FloatFieldGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnable1(self, **kwargs) -> bool: ...
    def getEnable2(self, **kwargs) -> bool: ...
    def getEnable3(self, **kwargs) -> bool: ...
    def getEnable4(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getExtraLabel(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getStep(self, **kwargs) -> float: ...
    def getValue(self, **kwargs) -> Tuple[float, float, float, float]: ...
    def getValue1(self, **kwargs) -> float: ...
    def getValue2(self, **kwargs) -> float: ...
    def getValue3(self, **kwargs) -> float: ...
    def getValue4(self, **kwargs) -> float: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def precision(self, val: int = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable1(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable2(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable3(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable4(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setExtraLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setStep(self, val: float = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: Tuple[float, float, float, float] = ..., **kwargs: Any) -> None: ...
    def setValue1(self, val: float = ..., **kwargs: Any) -> None: ...
    def setValue2(self, val: float = ..., **kwargs: Any) -> None: ...
    def setValue3(self, val: float = ..., **kwargs: Any) -> None: ...
    def setValue4(self, val: float = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def showTrailingZeros(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class TextFieldButtonGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def buttonCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def forceChangeCommand(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getButtonLabel(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEditable(self, **kwargs) -> bool: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableButton(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFileName(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getInsertionPosition(self, **kwargs) -> int: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPlaceholderText(self, **kwargs) -> str: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getText(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def insertText(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setButtonLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEditable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableButton(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFileName(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setInsertionPosition(self, val: int = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPlaceholderText(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setText(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def textChangedCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...

class ProgressBar(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def beginProgress(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def endProgress(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsCancelled(self, **kwargs) -> Any: ...
    def getIsInterruptable(self, **kwargs) -> bool: ...
    def getIsMainProgressBar(self, **kwargs) -> bool: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaxValue(self, **kwargs) -> int: ...
    def getMinValue(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getProgress(self, **kwargs) -> int: ...
    def getStatus(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setIsInterruptable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setIsMainProgressBar(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setMinValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setProgress(self, val: int = ..., **kwargs: Any) -> None: ...
    def setStatus(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def step(self, val: int = ..., **kwargs: Any) -> None: ...

class MainProgressBar(ProgressBar):
    def __new__(cls, minValue: int = ..., maxValue: int = ..., interruptable: bool = ...) -> MainProgressBar: ...
    def __enter__(self): ...
    def __exit__(self, *args) -> None: ...

class VectorFieldGrp(FloatFieldGrp):
    def __new__(cls, name: Incomplete | None = ..., create: bool = ..., *args, **kwargs): ...
    def getVector(self): ...
    def setVector(self, vec) -> None: ...

class PathButtonGrp(TextFieldButtonGrp):
    PROMPT_FUNCTION: str
    def __new__(cls, name: Incomplete | None = ..., create: bool = ..., *args, **kwargs): ...
    def setPath(self, path, **kwargs) -> None: ...
    def getPath(self): ...

class FolderButtonGrp(PathButtonGrp):
    PROMPT_FUNCTION: str

class AnimCurveEditor(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def denormalizeCurvesCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def displayActiveKeyTangents(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def displayActiveKeys(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def displayInfinities(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def displayKeys(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def displayTangents(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def displayValues(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def getAreCurvesSelected(self, **kwargs) -> Any: ...
    def getAutoFit(self, **kwargs) -> str: ...
    def getAutoFitTime(self, **kwargs) -> str: ...
    def getClassicMode(self, **kwargs) -> bool: ...
    def getClipTime(self, **kwargs) -> str: ...
    def getConstrainDrag(self, **kwargs) -> int: ...
    def getControl(self, **kwargs) -> Any: ...
    def getCurvesShown(self, **kwargs) -> Any: ...
    def getCurvesShownForceUpdate(self, **kwargs) -> Any: ...
    def getDisplayNormalized(self, **kwargs) -> bool: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getFilter(self, **kwargs) -> str: ...
    def getForceMainConnection(self, **kwargs) -> str: ...
    def getHighlightAffectedCurves(self, **kwargs) -> bool: ...
    def getHighlightConnection(self, **kwargs) -> str: ...
    def getKeyMinScale(self, **kwargs) -> float: ...
    def getKeyScale(self, **kwargs) -> float: ...
    def getKeyingTime(self, **kwargs) -> Any: ...
    def getLockPlayRangeShades(self, **kwargs) -> str: ...
    def getMainListConnection(self, **kwargs) -> str: ...
    def getOutliner(self, **kwargs) -> str: ...
    def getPanel(self, **kwargs) -> Any: ...
    def getPreSelectionHighlight(self, **kwargs) -> bool: ...
    def getResultSamples(self, **kwargs) -> Union[int, float]: ...
    def getResultScreenSamples(self, **kwargs) -> int: ...
    def getResultUpdate(self, **kwargs) -> str: ...
    def getSelectionConnection(self, **kwargs) -> str: ...
    def getShowActiveCurveNames(self, **kwargs) -> bool: ...
    def getShowBufferCurves(self, **kwargs) -> str: ...
    def getShowCurveNames(self, **kwargs) -> bool: ...
    def getShowPlayRangeShades(self, **kwargs) -> str: ...
    def getShowResults(self, **kwargs) -> str: ...
    def getShowUpstreamCurves(self, **kwargs) -> bool: ...
    def getSimpleKeyView(self, **kwargs) -> bool: ...
    def getSmoothness(self, **kwargs) -> str: ...
    def getSnapTime(self, **kwargs) -> str: ...
    def getSnapValue(self, **kwargs) -> str: ...
    def getStackedCurves(self, **kwargs) -> bool: ...
    def getStackedCurvesMax(self, **kwargs) -> float: ...
    def getStackedCurvesMin(self, **kwargs) -> float: ...
    def getStackedCurvesSpace(self, **kwargs) -> float: ...
    def getStateString(self, **kwargs) -> Any: ...
    def getTimelinePositionTop(self, **kwargs) -> bool: ...
    def lockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def lookAt(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def normalizeCurvesCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def renormalizeCurves(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAutoFit(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAutoFitTime(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setClassicMode(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setClipTime(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setConstrainDrag(self, val: int = ..., **kwargs: Any) -> None: ...
    def setDisplayNormalized(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFilter(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setForceMainConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHighlightAffectedCurves(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHighlightConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setKeyMinScale(self, val: float = ..., **kwargs: Any) -> None: ...
    def setKeyScale(self, val: float = ..., **kwargs: Any) -> None: ...
    def setLockPlayRangeShades(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMainListConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setOutliner(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setParent(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setPreSelectionHighlight(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setResultSamples(self, val: Union[int, float] = ..., **kwargs: Any) -> None: ...
    def setResultScreenSamples(self, val: int = ..., **kwargs: Any) -> None: ...
    def setResultUpdate(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSelectionConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setShowActiveCurveNames(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowBufferCurves(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setShowCurveNames(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowPlayRangeShades(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setShowResults(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setShowUpstreamCurves(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSimpleKeyView(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSmoothness(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSnapTime(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSnapValue(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setStackedCurves(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setStackedCurvesMax(self, val: float = ..., **kwargs: Any) -> None: ...
    def setStackedCurvesMin(self, val: float = ..., **kwargs: Any) -> None: ...
    def setStackedCurvesSpace(self, val: float = ..., **kwargs: Any) -> None: ...
    def setTimelinePositionTop(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unlockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def updateMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def valueLinesToggle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class AnimDisplay(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def getModelUpdate(self, **kwargs) -> str: ...
    def getRefAnimCurvesEditable(self, **kwargs) -> bool: ...
    def getTimeCode(self, **kwargs) -> str: ...
    def getTimeCodeOffset(self, **kwargs) -> str: ...
    def setModelUpdate(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setRefAnimCurvesEditable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTimeCode(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setTimeCodeOffset(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class AttrEnumOptionMenu(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def attribute(self, val: Union[_general.PyNode, str] = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class AttributeMenu(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str

class BlendShapeEditor(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def getControl(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getFilter(self, **kwargs) -> str: ...
    def getForceMainConnection(self, **kwargs) -> str: ...
    def getHighlightConnection(self, **kwargs) -> str: ...
    def getMainListConnection(self, **kwargs) -> str: ...
    def getPanel(self, **kwargs) -> Any: ...
    def getSelectionConnection(self, **kwargs) -> str: ...
    def getStateString(self, **kwargs) -> Any: ...
    def getTargetControlList(self, **kwargs) -> Any: ...
    def getTargetList(self, **kwargs) -> Any: ...
    def getVerticalSliders(self, **kwargs) -> bool: ...
    def lockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFilter(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setForceMainConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHighlightConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMainListConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setParent(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSelectionConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVerticalSliders(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unlockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def updateMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class Button(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getActOnPress(self, **kwargs) -> bool: ...
    def getActionIsSubstitute(self, **kwargs) -> bool: ...
    def getAlign(self, **kwargs) -> str: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRecomputeSize(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setActOnPress(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setActionIsSubstitute(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAlign(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRecomputeSize(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class Canvas(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHsvValue(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRgbValue(self, **kwargs) -> Tuple[float, float, float]: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def pressCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setHsvValue(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRgbValue(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class ChannelBox(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def execute(self, val: Tuple[str, Union[bool, int]] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getAttrBgColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getAttrColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getAttrFilter(self, **kwargs) -> str: ...
    def getAttrRegex(self, **kwargs) -> str: ...
    def getAttributeEditorMode(self, **kwargs) -> bool: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getContainerAtTop(self, **kwargs) -> bool: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getEnableLabelSelection(self, **kwargs) -> bool: ...
    def getFieldWidth(self, **kwargs) -> int: ...
    def getFixedAttrList(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHistoryObjectList(self, **kwargs) -> Any: ...
    def getHyperbolic(self, **kwargs) -> bool: ...
    def getInputs(self, **kwargs) -> Any: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabelWidth(self, **kwargs) -> int: ...
    def getLongNames(self, **kwargs) -> bool: ...
    def getMainListConnection(self, **kwargs) -> str: ...
    def getMainObjectList(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaxHeight(self, **kwargs) -> int: ...
    def getMaxWidth(self, **kwargs) -> int: ...
    def getNiceNames(self, **kwargs) -> bool: ...
    def getNodeRegex(self, **kwargs) -> str: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getOutputObjectList(self, **kwargs) -> Any: ...
    def getOutputs(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPrecision(self, **kwargs) -> int: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSelectedHistoryAttributes(self, **kwargs) -> Any: ...
    def getSelectedMainAttributes(self, **kwargs) -> Any: ...
    def getSelectedOutputAttributes(self, **kwargs) -> Any: ...
    def getSelectedShapeAttributes(self, **kwargs) -> Any: ...
    def getShapeObjectList(self, **kwargs) -> Any: ...
    def getShapes(self, **kwargs) -> Any: ...
    def getShowNamespace(self, **kwargs) -> bool: ...
    def getShowTransforms(self, **kwargs) -> bool: ...
    def getSpeed(self, **kwargs) -> float: ...
    def getUseManips(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def select(self, val: Union[str, List[str]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAttrBgColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setAttrColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setAttrFilter(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAttrRegex(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAttributeEditorMode(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setContainerAtTop(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableLabelSelection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFieldWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setFixedAttrList(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setHyperbolic(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setLabelWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setLongNames(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMainListConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setMaxWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setNiceNames(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNodeRegex(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setPrecision(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowNamespace(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowTransforms(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSpeed(self, val: float = ..., **kwargs: Any) -> None: ...
    def setUseManips(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def takeFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def update(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class CheckBox(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAlign(self, **kwargs) -> str: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEditable(self, **kwargs) -> bool: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getOffCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getOnCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRecomputeSize(self, **kwargs) -> bool: ...
    def getValue(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAlign(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEditable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setOffCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setOnCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRecomputeSize(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class ClipEditor(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def clipDropCmd(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def deleteCmd(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def deselectAll(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def displayActiveKeyTangents(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def displayActiveKeys(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def displayInfinities(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def displayKeys(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def displayTangents(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def displayValues(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def frameAll(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getAutoFit(self, **kwargs) -> str: ...
    def getAutoFitTime(self, **kwargs) -> str: ...
    def getClipStyle(self, **kwargs) -> int: ...
    def getControl(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getFilter(self, **kwargs) -> str: ...
    def getForceMainConnection(self, **kwargs) -> str: ...
    def getFrameRange(self, **kwargs) -> Tuple[float, float]: ...
    def getHighlightConnection(self, **kwargs) -> str: ...
    def getHighlightedBlend(self, **kwargs) -> Any: ...
    def getHighlightedClip(self, **kwargs) -> Any: ...
    def getInitialized(self, **kwargs) -> Any: ...
    def getMainListConnection(self, **kwargs) -> str: ...
    def getManageSequencer(self, **kwargs) -> bool: ...
    def getMenuContext(self, **kwargs) -> Any: ...
    def getPanel(self, **kwargs) -> Any: ...
    def getSelectBlend(self, **kwargs) -> Tuple[str, str, str]: ...
    def getSelectClip(self, **kwargs) -> Tuple[str, str]: ...
    def getSelectionConnection(self, **kwargs) -> str: ...
    def getSnapTime(self, **kwargs) -> str: ...
    def getSnapValue(self, **kwargs) -> str: ...
    def getStateString(self, **kwargs) -> Any: ...
    def listAllCharacters(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def listCurrentCharacters(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def lockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def lookAt(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAutoFit(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAutoFitTime(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setClipStyle(self, val: int = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFilter(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setForceMainConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFrameRange(self, val: Tuple[float, float] = ..., **kwargs: Any) -> None: ...
    def setHighlightConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMainListConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManageSequencer(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setParent(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSelectBlend(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def setSelectClip(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def setSelectionConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSnapTime(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSnapValue(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unlockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def updateMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class ClipSchedulerOutliner(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def clipScheduler(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class CmdScrollFieldExecuter(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def appendText(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def clear(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def copySelection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def cutSelection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def execute(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def executeAll(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def fileChangedCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getAutoCloseBraces(self, **kwargs) -> bool: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getCommandCompletion(self, **kwargs) -> bool: ...
    def getCurrentLine(self, **kwargs) -> int: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFilename(self, **kwargs) -> Any: ...
    def getFilterKeyPress(self, **kwargs) -> Union[str, Callable]: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHasFocus(self, **kwargs) -> Any: ...
    def getHasSelection(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getModified(self, **kwargs) -> bool: ...
    def getNumberOfLines(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getObjectPathCompletion(self, **kwargs) -> bool: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSearchAndSelect(self, **kwargs) -> Any: ...
    def getSearchDown(self, **kwargs) -> bool: ...
    def getSearchMatchCase(self, **kwargs) -> bool: ...
    def getSearchString(self, **kwargs) -> str: ...
    def getSearchWraps(self, **kwargs) -> bool: ...
    def getSelectedText(self, **kwargs) -> Any: ...
    def getShowLineNumbers(self, **kwargs) -> bool: ...
    def getShowTooltipHelp(self, **kwargs) -> bool: ...
    def getSourceType(self, **kwargs) -> Any: ...
    def getSpacesPerTab(self, **kwargs) -> int: ...
    def getTabsForIndent(self, **kwargs) -> bool: ...
    def getText(self, **kwargs) -> str: ...
    def getTextLength(self, **kwargs) -> Any: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def insertText(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def load(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def loadContents(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def loadFile(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def modificationChangedCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def pasteSelection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def redo(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def removeStoredContents(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def replaceAll(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def saveFile(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def saveSelection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def saveSelectionToShelf(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def select(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def selectAll(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAutoCloseBraces(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setCommandCompletion(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setCurrentLine(self, val: int = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFilterKeyPress(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setModified(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setObjectPathCompletion(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSearchDown(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSearchMatchCase(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSearchString(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSearchWraps(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowLineNumbers(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowTooltipHelp(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSpacesPerTab(self, val: int = ..., **kwargs: Any) -> None: ...
    def setTabsForIndent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setText(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def source(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def storeContents(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def undo(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class CmdScrollFieldReporter(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def clear(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def copySelection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def cutSelection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEchoAllCommands(self, **kwargs) -> bool: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFilterSourceType(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHasFocus(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLineNumbers(self, **kwargs) -> bool: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getStackTrace(self, **kwargs) -> bool: ...
    def getSuppressErrors(self, **kwargs) -> bool: ...
    def getSuppressInfo(self, **kwargs) -> bool: ...
    def getSuppressResults(self, **kwargs) -> bool: ...
    def getSuppressStackTrace(self, **kwargs) -> bool: ...
    def getSuppressWarnings(self, **kwargs) -> bool: ...
    def getText(self, **kwargs) -> str: ...
    def getTextLength(self, **kwargs) -> Any: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def pasteSelection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def receiveFocusCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def saveSelection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def saveSelectionToShelf(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def select(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def selectAll(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEchoAllCommands(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFilterSourceType(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLineNumbers(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setStackTrace(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSuppressErrors(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSuppressInfo(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSuppressResults(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSuppressStackTrace(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSuppressWarnings(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setText(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class CmdShell(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getCommand(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfHistoryLines(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getNumberOfSavedLines(self, **kwargs) -> int: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getPrompt(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNumberOfHistoryLines(self, val: int = ..., **kwargs: Any) -> None: ...
    def setNumberOfSavedLines(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPrompt(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class ColorEditor(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def getAlpha(self, **kwargs) -> Any: ...
    def getHsvValue(self, **kwargs) -> Any: ...
    def getResult(self, **kwargs) -> Any: ...
    def getRgbValue(self, **kwargs) -> Any: ...

class CommandLine(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def command(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def enterCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHoldFocus(self, **kwargs) -> bool: ...
    def getInputAnnotation(self, **kwargs) -> str: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfHistoryLines(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getOutputAnnotation(self, **kwargs) -> str: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSourceType(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setHoldFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setInputAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNumberOfHistoryLines(self, val: int = ..., **kwargs: Any) -> None: ...
    def setOutputAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSourceType(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class ConfirmDialog(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str

class DefaultLightListCheckBox(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def label(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def shadingGroup(self, val: Union[_general.PyNode, str] = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class DeviceEditor(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def getControl(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getFilter(self, **kwargs) -> str: ...
    def getForceMainConnection(self, **kwargs) -> str: ...
    def getHighlightConnection(self, **kwargs) -> str: ...
    def getMainListConnection(self, **kwargs) -> str: ...
    def getPanel(self, **kwargs) -> Any: ...
    def getSelectionConnection(self, **kwargs) -> str: ...
    def getStateString(self, **kwargs) -> Any: ...
    def getTakePath(self, **kwargs) -> str: ...
    def lockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFilter(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setForceMainConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHighlightConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMainListConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setParent(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSelectionConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setTakePath(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unlockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def updateMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class DynPaintEditor(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def canvasUndo(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def clear(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def getActiveOnly(self, **kwargs) -> bool: ...
    def getAutoSave(self, **kwargs) -> bool: ...
    def getCamera(self, **kwargs) -> str: ...
    def getCanvasMode(self, **kwargs) -> bool: ...
    def getChangeCommand(self, **kwargs) -> Tuple[str, str, str, str]: ...
    def getControl(self, **kwargs) -> Any: ...
    def getCurrentCanvasSize(self, **kwargs) -> Any: ...
    def getDisplayAppearance(self, **kwargs) -> str: ...
    def getDisplayFog(self, **kwargs) -> bool: ...
    def getDisplayImage(self, **kwargs) -> int: ...
    def getDisplayLights(self, **kwargs) -> str: ...
    def getDisplayStyle(self, **kwargs) -> str: ...
    def getDisplayTextures(self, **kwargs) -> bool: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getDoubleBuffer(self, **kwargs) -> bool: ...
    def getDrawAxis(self, **kwargs) -> bool: ...
    def getDrawContext(self, **kwargs) -> Any: ...
    def getFileName(self, **kwargs) -> str: ...
    def getFilter(self, **kwargs) -> str: ...
    def getForceMainConnection(self, **kwargs) -> str: ...
    def getHighlightConnection(self, **kwargs) -> str: ...
    def getMainListConnection(self, **kwargs) -> str: ...
    def getNbImages(self, **kwargs) -> Any: ...
    def getNewImage(self, **kwargs) -> Tuple[int, int, float, float, float]: ...
    def getPanel(self, **kwargs) -> Any: ...
    def getRefreshMode(self, **kwargs) -> int: ...
    def getSaveAlpha(self, **kwargs) -> bool: ...
    def getSaveBumpmap(self, **kwargs) -> str: ...
    def getScaleBlue(self, **kwargs) -> float: ...
    def getScaleGreen(self, **kwargs) -> float: ...
    def getScaleRed(self, **kwargs) -> float: ...
    def getSelectionConnection(self, **kwargs) -> str: ...
    def getSingleBuffer(self, **kwargs) -> bool: ...
    def getStateString(self, **kwargs) -> Any: ...
    def getWrap(self, **kwargs) -> Tuple[bool, bool]: ...
    def getZoom(self, **kwargs) -> float: ...
    def iconGrab(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def loadImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def lockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def paintAll(self, val: float = ..., **kwargs: Any) -> None: ...
    def redrawLast(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def refresh(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def removeAllImages(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def removeImage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rollImage(self, val: Tuple[float, float] = ..., **kwargs: Any) -> None: ...
    def saveImage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setActiveOnly(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAutoSave(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setCamera(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setCanvasMode(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setChangeCommand(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def setDisplayAppearance(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDisplayFog(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDisplayImage(self, val: int = ..., **kwargs: Any) -> None: ...
    def setDisplayLights(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDisplayStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDisplayTextures(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDoubleBuffer(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDrawAxis(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFileName(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFilter(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setForceMainConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHighlightConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMainListConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setNewImage(self, val: Tuple[int, int, float, float, float] = ..., **kwargs: Any) -> None: ...
    def setParent(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setRefreshMode(self, val: int = ..., **kwargs: Any) -> None: ...
    def setSaveAlpha(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSaveBumpmap(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setScaleBlue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setScaleGreen(self, val: float = ..., **kwargs: Any) -> None: ...
    def setScaleRed(self, val: float = ..., **kwargs: Any) -> None: ...
    def setSelectionConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSingleBuffer(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setWrap(self, val: Tuple[Union[bool, int], Union[bool, int]] = ..., **kwargs: Any) -> None: ...
    def setZoom(self, val: float = ..., **kwargs: Any) -> None: ...
    def snapShot(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def tileSize(self, val: int = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def undoCache(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unlockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def updateMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def writeImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class DynRelEditor(PyUI):
    __melui__: str

class ExclusiveLightCheckBox(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def label(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class FloatField(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def enterCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEditable(self, **kwargs) -> bool: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaxValue(self, **kwargs) -> float: ...
    def getMinValue(self, **kwargs) -> float: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPrecision(self, **kwargs) -> int: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getShowTrailingZeros(self, **kwargs) -> bool: ...
    def getStep(self, **kwargs) -> float: ...
    def getValue(self, **kwargs) -> float: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def receiveFocusCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEditable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setMinValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setPrecision(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowTrailingZeros(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setStep(self, val: float = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class FloatScrollBar(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHorizontal(self, **kwargs) -> Any: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLargeStep(self, **kwargs) -> float: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaxValue(self, **kwargs) -> float: ...
    def getMinValue(self, **kwargs) -> float: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getStep(self, **kwargs) -> float: ...
    def getValue(self, **kwargs) -> float: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLargeStep(self, val: float = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setMinValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setStep(self, val: float = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class FloatSlider(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHorizontal(self, **kwargs) -> Any: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaxValue(self, **kwargs) -> float: ...
    def getMinValue(self, **kwargs) -> float: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getStep(self, **kwargs) -> float: ...
    def getValue(self, **kwargs) -> float: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setMinValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setStep(self, val: float = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class FloatSlider2(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand1(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def changeCommand2(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaximum(self, **kwargs) -> float: ...
    def getMinimum(self, **kwargs) -> float: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPolarity(self, **kwargs) -> int: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getValue1(self, **kwargs) -> float: ...
    def getValue2(self, **kwargs) -> float: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def positionControl1(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def positionControl2(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaximum(self, val: float = ..., **kwargs: Any) -> None: ...
    def setMinimum(self, val: float = ..., **kwargs: Any) -> None: ...
    def setPolarity(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setValue1(self, val: float = ..., **kwargs: Any) -> None: ...
    def setValue2(self, val: float = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def values(self, val: Tuple[float, float] = ..., **kwargs: Any) -> None: ...

class FontDialog(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str

class GlRenderEditor(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def getControl(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getFilter(self, **kwargs) -> str: ...
    def getForceMainConnection(self, **kwargs) -> str: ...
    def getHighlightConnection(self, **kwargs) -> str: ...
    def getLookThru(self, **kwargs) -> str: ...
    def getMainListConnection(self, **kwargs) -> str: ...
    def getPanel(self, **kwargs) -> Any: ...
    def getSelectionConnection(self, **kwargs) -> str: ...
    def getStateString(self, **kwargs) -> Any: ...
    def getViewCameraName(self, **kwargs) -> Any: ...
    def lockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFilter(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setForceMainConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHighlightConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLookThru(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMainListConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setParent(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSelectionConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unlockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def updateMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class GradientControl(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAdaptiveScaling(self, **kwargs) -> bool: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfControls(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRefreshOnRelease(self, **kwargs) -> int: ...
    def getStaticNumberOfControls(self, **kwargs) -> bool: ...
    def getStaticPositions(self, **kwargs) -> bool: ...
    def getUpperLimitControl(self, **kwargs) -> str: ...
    def getVerticalLayout(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def selectedColorControl(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def selectedInterpControl(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def selectedPositionControl(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAdaptiveScaling(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRefreshOnRelease(self, val: int = ..., **kwargs: Any) -> None: ...
    def setStaticNumberOfControls(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setStaticPositions(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setUpperLimitControl(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVerticalLayout(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class GradientControlNoAttr(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def currentKeyChanged(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getAsString(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getCurrentKey(self, **kwargs) -> int: ...
    def getCurrentKeyColorValue(self, **kwargs) -> Tuple[float, float, float]: ...
    def getCurrentKeyCurveValue(self, **kwargs) -> bool: ...
    def getCurrentKeyInterpValue(self, **kwargs) -> int: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getOptionVar(self, **kwargs) -> str: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRampAsColor(self, **kwargs) -> bool: ...
    def getValueAtPoint(self, **kwargs) -> Any: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAsString(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setCurrentKey(self, val: int = ..., **kwargs: Any) -> None: ...
    def setCurrentKeyColorValue(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setCurrentKeyCurveValue(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setCurrentKeyInterpValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setOptionVar(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRampAsColor(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class HelpLine(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class HyperGraph(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def addBookmark(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def addDependGraph(self, val: Union[_general.PyNode, str] = ..., **kwargs: Any) -> None: ...
    def addDependNode(self, val: Union[_general.PyNode, str] = ..., **kwargs: Any) -> None: ...
    def attributeEditor(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def backward(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def clear(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def collapseContainer(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def connectionDrawStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def debug(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def deleteBookmark(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def dependGraph(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def dependNode(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def directoryPressCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def down(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def downstream(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def dragAndDropBehaviorCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def edgeDblClickCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def edgeDimmedDblClickCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def edgeDropCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def edgePressCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def edgeReleaseCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def enableAutomaticLayout(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def expandContainer(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def filterDetail(self, val: Tuple[str, Union[bool, int]] = ..., **kwargs: Any) -> None: ...
    def focusCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def fold(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def forceRefresh(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def forward(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def frame(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def frameBranch(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def frameGraph(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def frameGraphNoRebuild(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def frameHierarchy(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getAnimateTransition(self, **kwargs) -> bool: ...
    def getBookmarkName(self, **kwargs) -> Any: ...
    def getBreakConnectionCommand(self, **kwargs) -> str: ...
    def getControl(self, **kwargs) -> Any: ...
    def getCurrentEdge(self, **kwargs) -> str: ...
    def getCurrentNode(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getDropNode(self, **kwargs) -> Any: ...
    def getDropTargetNode(self, **kwargs) -> Any: ...
    def getFeedbackGadget(self, **kwargs) -> Any: ...
    def getFeedbackNode(self, **kwargs) -> Any: ...
    def getFilter(self, **kwargs) -> str: ...
    def getForceMainConnection(self, **kwargs) -> str: ...
    def getFreeform(self, **kwargs) -> bool: ...
    def getFromAttr(self, **kwargs) -> Any: ...
    def getFromNode(self, **kwargs) -> Any: ...
    def getGetNodeList(self, **kwargs) -> Any: ...
    def getGetNodePosition(self, **kwargs) -> Any: ...
    def getGraphLayoutStyle(self, **kwargs) -> str: ...
    def getGraphType(self, **kwargs) -> Any: ...
    def getHeatMapDisplay(self, **kwargs) -> bool: ...
    def getHighlightConnection(self, **kwargs) -> str: ...
    def getIconSize(self, **kwargs) -> str: ...
    def getImage(self, **kwargs) -> str: ...
    def getImageEnabled(self, **kwargs) -> bool: ...
    def getImageForContainer(self, **kwargs) -> bool: ...
    def getImagePosition(self, **kwargs) -> Tuple[float, float]: ...
    def getImageScale(self, **kwargs) -> float: ...
    def getIsHotkeyTarget(self, **kwargs) -> Any: ...
    def getMainListConnection(self, **kwargs) -> str: ...
    def getMergeConnections(self, **kwargs) -> bool: ...
    def getOpaqueContainers(self, **kwargs) -> bool: ...
    def getOrientation(self, **kwargs) -> str: ...
    def getPanel(self, **kwargs) -> Any: ...
    def getRange(self, **kwargs) -> Tuple[float, float]: ...
    def getSelectionConnection(self, **kwargs) -> str: ...
    def getShowConnectionFromSelected(self, **kwargs) -> bool: ...
    def getShowConnectionToSelected(self, **kwargs) -> bool: ...
    def getShowConstraints(self, **kwargs) -> bool: ...
    def getShowDeformers(self, **kwargs) -> bool: ...
    def getShowExpressions(self, **kwargs) -> bool: ...
    def getShowInvisible(self, **kwargs) -> bool: ...
    def getShowRelationships(self, **kwargs) -> bool: ...
    def getShowShapes(self, **kwargs) -> bool: ...
    def getShowUnderworld(self, **kwargs) -> bool: ...
    def getStateString(self, **kwargs) -> Any: ...
    def getToAttr(self, **kwargs) -> Any: ...
    def getToNode(self, **kwargs) -> Any: ...
    def getTransitionFrames(self, **kwargs) -> int: ...
    def getUpdateNodeAdded(self, **kwargs) -> bool: ...
    def getUpdateSelection(self, **kwargs) -> bool: ...
    def getUseFeedbackList(self, **kwargs) -> bool: ...
    def getViewOption(self, **kwargs) -> str: ...
    def graphDescription(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def initializeScript(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def layout(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def layoutSelected(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def limitGraphTraversal(self, val: int = ..., **kwargs: Any) -> None: ...
    def lockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def look(self, val: Tuple[float, float] = ..., **kwargs: Any) -> None: ...
    def navigateHome(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def navup(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def newInputConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def newOutputConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def nextView(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def nodeConnectCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def nodeDblClickCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def nodeDropCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def nodeMenuCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def nodePressCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def nodeReleaseCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def panView(self, val: Tuple[float, float] = ..., **kwargs: Any) -> None: ...
    def popupMenuScript(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def previousView(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rebuild(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def removeNode(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def resetFreeform(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def restoreBookmark(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def scrollUpDownNoZoom(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnimateTransition(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setBreakConnectionCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setCurrentEdge(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setCurrentNode(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFilter(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setForceMainConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFreeform(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setGraphLayoutStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeatMapDisplay(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHighlightConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setIconSize(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImageEnabled(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setImageForContainer(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setImagePosition(self, val: Tuple[float, float] = ..., **kwargs: Any) -> None: ...
    def setImageScale(self, val: float = ..., **kwargs: Any) -> None: ...
    def setMainListConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMergeConnections(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNodePosition(self, val: Tuple[str, float, float] = ..., **kwargs: Any) -> None: ...
    def setOpaqueContainers(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setOrientation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setParent(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setRange(self, val: Tuple[float, float] = ..., **kwargs: Any) -> None: ...
    def setSelectionConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setShowConnectionFromSelected(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowConnectionToSelected(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowConstraints(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowDeformers(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowExpressions(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowInvisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowRelationships(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowShapes(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowUnderworld(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTransitionFrames(self, val: int = ..., **kwargs: Any) -> None: ...
    def setUpdateNodeAdded(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setUpdateSelection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setUseFeedbackList(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setViewOption(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def showCachedConnections(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def showConstraintLabels(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unfold(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unfoldAll(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unfoldAllShapes(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unfoldHidden(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unlockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def updateMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def upstream(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def useDrawOverrideColor(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def visibility(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def zoom(self, val: float = ..., **kwargs: Any) -> None: ...

class HyperShade(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str

class IconTextButton(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAlign(self, **kwargs) -> str: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getCommandRepeatable(self, **kwargs) -> bool: ...
    def getDisabledImage(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getDoubleClickCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFlat(self, **kwargs) -> bool: ...
    def getFlipX(self, **kwargs) -> bool: ...
    def getFlipY(self, **kwargs) -> bool: ...
    def getFont(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHighlightImage(self, **kwargs) -> str: ...
    def getImage(self, **kwargs) -> str: ...
    def getImage1(self, **kwargs) -> str: ...
    def getImage2(self, **kwargs) -> str: ...
    def getImage3(self, **kwargs) -> str: ...
    def getImageOverlayLabel(self, **kwargs) -> str: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getLabelOffset(self, **kwargs) -> int: ...
    def getLtVersion(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMarginHeight(self, **kwargs) -> int: ...
    def getMarginWidth(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getOverlayLabelBackColor(self, **kwargs) -> Tuple[float, float, float, float]: ...
    def getOverlayLabelColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRotation(self, **kwargs) -> float: ...
    def getSelectionImage(self, **kwargs) -> str: ...
    def getSourceType(self, **kwargs) -> str: ...
    def getStyle(self, **kwargs) -> str: ...
    def getUseAlpha(self, **kwargs) -> bool: ...
    def getVersion(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def handleNodeDropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def labelEditingCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def scaleIcon(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAlign(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setCommandRepeatable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDisabledImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDoubleClickCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlat(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlipX(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlipY(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFont(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setHighlightImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage1(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage2(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage3(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImageOverlayLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabelOffset(self, val: int = ..., **kwargs: Any) -> None: ...
    def setLtVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMarginHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setMarginWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setOverlayLabelBackColor(self, val: Tuple[float, float, float, float] = ..., **kwargs: Any) -> None: ...
    def setOverlayLabelColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRotation(self, val: float = ..., **kwargs: Any) -> None: ...
    def setSelectionImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSourceType(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setUseAlpha(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class IconTextCheckBox(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAlign(self, **kwargs) -> str: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getDisabledImage(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFlat(self, **kwargs) -> bool: ...
    def getFlipX(self, **kwargs) -> bool: ...
    def getFlipY(self, **kwargs) -> bool: ...
    def getFont(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHighlightImage(self, **kwargs) -> str: ...
    def getImage(self, **kwargs) -> str: ...
    def getImage1(self, **kwargs) -> str: ...
    def getImage2(self, **kwargs) -> str: ...
    def getImage3(self, **kwargs) -> str: ...
    def getImageOverlayLabel(self, **kwargs) -> str: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getLabelOffset(self, **kwargs) -> int: ...
    def getLtVersion(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMarginHeight(self, **kwargs) -> int: ...
    def getMarginWidth(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getOffCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getOnCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getOverlayLabelBackColor(self, **kwargs) -> Tuple[float, float, float, float]: ...
    def getOverlayLabelColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRotation(self, **kwargs) -> float: ...
    def getSelectionHighlightImage(self, **kwargs) -> str: ...
    def getSelectionImage(self, **kwargs) -> str: ...
    def getStyle(self, **kwargs) -> str: ...
    def getUseAlpha(self, **kwargs) -> bool: ...
    def getValue(self, **kwargs) -> bool: ...
    def getVersion(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAlign(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setDisabledImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlat(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlipX(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlipY(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFont(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setHighlightImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage1(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage2(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage3(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImageOverlayLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabelOffset(self, val: int = ..., **kwargs: Any) -> None: ...
    def setLtVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMarginHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setMarginWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setOffCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setOnCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setOverlayLabelBackColor(self, val: Tuple[float, float, float, float] = ..., **kwargs: Any) -> None: ...
    def setOverlayLabelColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRotation(self, val: float = ..., **kwargs: Any) -> None: ...
    def setSelectionHighlightImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSelectionImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setUseAlpha(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class IconTextRadioButton(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAlign(self, **kwargs) -> str: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getDisabledImage(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFlat(self, **kwargs) -> bool: ...
    def getFlipX(self, **kwargs) -> bool: ...
    def getFlipY(self, **kwargs) -> bool: ...
    def getFont(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHighlightImage(self, **kwargs) -> str: ...
    def getImage(self, **kwargs) -> str: ...
    def getImage1(self, **kwargs) -> str: ...
    def getImage2(self, **kwargs) -> str: ...
    def getImage3(self, **kwargs) -> str: ...
    def getImageOverlayLabel(self, **kwargs) -> str: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getLabelOffset(self, **kwargs) -> int: ...
    def getLtVersion(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMarginHeight(self, **kwargs) -> int: ...
    def getMarginWidth(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getOffCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getOnCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getOverlayLabelBackColor(self, **kwargs) -> Tuple[float, float, float, float]: ...
    def getOverlayLabelColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRotation(self, **kwargs) -> float: ...
    def getSelect(self, **kwargs) -> bool: ...
    def getSelectionHighlightImage(self, **kwargs) -> str: ...
    def getSelectionImage(self, **kwargs) -> str: ...
    def getStyle(self, **kwargs) -> str: ...
    def getUseAlpha(self, **kwargs) -> bool: ...
    def getVersion(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAlign(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setDisabledImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlat(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlipX(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlipY(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFont(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setHighlightImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage1(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage2(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage3(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImageOverlayLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabelOffset(self, val: int = ..., **kwargs: Any) -> None: ...
    def setLtVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMarginHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setMarginWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setOffCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setOnCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setOverlayLabelBackColor(self, val: Tuple[float, float, float, float] = ..., **kwargs: Any) -> None: ...
    def setOverlayLabelColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRotation(self, val: float = ..., **kwargs: Any) -> None: ...
    def setSelect(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSelectionHighlightImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSelectionImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setUseAlpha(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class IconTextRadioCollection(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def disableCommands(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getCollectionItemArray(self, **kwargs) -> Any: ...
    def getGl(self, **kwargs) -> Any: ...
    def getNumberOfCollectionItems(self, **kwargs) -> Any: ...
    def getSelect(self, **kwargs) -> str: ...
    def setSelect(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class IconTextScrollList(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def append(self, val: Union[str, List[str]] = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def deselectAll(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def doubleClickCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragFeedbackVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropRectCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def editIndexed(self, val: int = ..., **kwargs: Any) -> None: ...
    def editable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getAllowMultiSelection(self, **kwargs) -> bool: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getItemAt(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfIcons(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getNumberOfRows(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSelectIndexedItem(self, **kwargs) -> int: ...
    def getSelectItem(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getVisualRectAt(self, **kwargs) -> Any: ...
    def getWidth(self, **kwargs) -> int: ...
    def itemTextColor(self, val: Union[Tuple[int, float, float, float], List[Tuple[int, float, float, float]]] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def removeAll(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def selectCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setAllowMultiSelection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSelectIndexedItem(self, val: Union[int, List[int]] = ..., **kwargs: Any) -> None: ...
    def setSelectItem(self, val: Union[str, List[str]] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class IconTextStaticLabel(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAlign(self, **kwargs) -> str: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDisabledImage(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFlipX(self, **kwargs) -> bool: ...
    def getFlipY(self, **kwargs) -> bool: ...
    def getFont(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getImage(self, **kwargs) -> str: ...
    def getImage1(self, **kwargs) -> str: ...
    def getImage2(self, **kwargs) -> str: ...
    def getImage3(self, **kwargs) -> str: ...
    def getImageOverlayLabel(self, **kwargs) -> str: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getLabelOffset(self, **kwargs) -> int: ...
    def getLtVersion(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMarginHeight(self, **kwargs) -> int: ...
    def getMarginWidth(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getOverlayLabelBackColor(self, **kwargs) -> Tuple[float, float, float, float]: ...
    def getOverlayLabelColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRotation(self, **kwargs) -> float: ...
    def getStyle(self, **kwargs) -> str: ...
    def getUseAlpha(self, **kwargs) -> bool: ...
    def getVersion(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAlign(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDisabledImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlipX(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlipY(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFont(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage1(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage2(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage3(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImageOverlayLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabelOffset(self, val: int = ..., **kwargs: Any) -> None: ...
    def setLtVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMarginHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setMarginWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setOverlayLabelBackColor(self, val: Tuple[float, float, float, float] = ..., **kwargs: Any) -> None: ...
    def setOverlayLabelColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRotation(self, val: float = ..., **kwargs: Any) -> None: ...
    def setStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setUseAlpha(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class Image(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getImage(self, **kwargs) -> str: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class IntField(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def enterCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEditable(self, **kwargs) -> bool: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaxValue(self, **kwargs) -> int: ...
    def getMinValue(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getStep(self, **kwargs) -> int: ...
    def getValue(self, **kwargs) -> int: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def receiveFocusCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEditable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setMinValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setStep(self, val: int = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class IntScrollBar(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHorizontal(self, **kwargs) -> Any: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLargeStep(self, **kwargs) -> int: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaxValue(self, **kwargs) -> int: ...
    def getMinValue(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getStep(self, **kwargs) -> int: ...
    def getValue(self, **kwargs) -> int: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLargeStep(self, val: int = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setMinValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setStep(self, val: int = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class IntSlider(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHorizontal(self, **kwargs) -> Any: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaxValue(self, **kwargs) -> int: ...
    def getMinValue(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getStep(self, **kwargs) -> int: ...
    def getValue(self, **kwargs) -> int: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setMinValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setStep(self, val: int = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class KeyframeOutliner(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def animCurve(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDisplay(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDisplay(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class KeyframeStats(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnimEditor(self, **kwargs) -> str: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getClassicMode(self, **kwargs) -> bool: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPrecision(self, **kwargs) -> int: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getTimeAnnotation(self, **kwargs) -> str: ...
    def getValueAnnotation(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnimEditor(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setClassicMode(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPrecision(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTimeAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setValueAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class LayerButton(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def color(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def command(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def current(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def doubleClickCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIdentification(self, **kwargs) -> int: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getLabelWidth(self, **kwargs) -> Any: ...
    def getLayerHideOnPlayback(self, **kwargs) -> bool: ...
    def getLayerState(self, **kwargs) -> str: ...
    def getLayerVisible(self, **kwargs) -> bool: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSelect(self, **kwargs) -> bool: ...
    def getTransparent(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def hideOnPlaybackCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def renameCommand(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setIdentification(self, val: int = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLayerHideOnPlayback(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setLayerState(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLayerVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSelect(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTransparent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def typeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def visibleCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...

class AttrColorSliderGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getAttrNavDecision(self, **kwargs) -> Tuple[_general.PyNode, str]: ...
    def getAttribute(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHsvValue(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRgbValue(self, **kwargs) -> Tuple[float, float, float]: ...
    def getShowButton(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAttrNavDecision(self, val: Tuple[Union[_general.PyNode, str], str] = ..., **kwargs: Any) -> None: ...
    def setAttribute(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setHsvValue(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRgbValue(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setShowButton(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class AttrControlGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def getAnnotation(self, **kwargs) -> str: ...
    def getAttribute(self, **kwargs) -> _general.PyNode: ...
    def getChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getExists(self, **kwargs) -> bool: ...
    def getHandlesAttribute(self, **kwargs) -> _general.PyNode: ...
    def getHideMapButton(self, **kwargs) -> bool: ...
    def getLabel(self, **kwargs) -> str: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAttribute(self, val: Union[_general.PyNode, str] = ..., **kwargs: Any) -> None: ...
    def setChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setExists(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHandlesAttribute(self, val: Union[_general.PyNode, str] = ..., **kwargs: Any) -> None: ...
    def setHideMapButton(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class AttrEnumOptionMenuGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def attribute(self, val: Union[_general.PyNode, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class AttrFieldGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def extraButtonCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getAttribute(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getExtraButtonIcon(self, **kwargs) -> str: ...
    def getExtraLabel(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaxValue(self, **kwargs) -> float: ...
    def getMinValue(self, **kwargs) -> float: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getStep(self, **kwargs) -> float: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def precision(self, val: int = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAttribute(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setExtraButtonIcon(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setExtraLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setMinValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setStep(self, val: float = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class AttrFieldSliderGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def extraButtonCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getAttribute(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getExtraButtonIcon(self, **kwargs) -> str: ...
    def getFieldMaxValue(self, **kwargs) -> float: ...
    def getFieldMinValue(self, **kwargs) -> float: ...
    def getFieldStep(self, **kwargs) -> float: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaxValue(self, **kwargs) -> float: ...
    def getMinValue(self, **kwargs) -> float: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSliderMaxValue(self, **kwargs) -> float: ...
    def getSliderMinValue(self, **kwargs) -> float: ...
    def getSliderStep(self, **kwargs) -> float: ...
    def getStep(self, **kwargs) -> float: ...
    def getVertical(self, **kwargs) -> Any: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def precision(self, val: int = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAttribute(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setExtraButtonIcon(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFieldMaxValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setFieldMinValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setFieldStep(self, val: float = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setMinValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSliderMaxValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setSliderMinValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setSliderStep(self, val: float = ..., **kwargs: Any) -> None: ...
    def setStep(self, val: float = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class AttrNavigationControlGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def extraButtonCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getAttrNavDecision(self, **kwargs) -> Tuple[_general.PyNode, str]: ...
    def getAttribute(self, **kwargs) -> _general.PyNode: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getConnectAttrToDropped(self, **kwargs) -> Union[str, Callable]: ...
    def getConnectNodeToDropped(self, **kwargs) -> Union[str, Callable]: ...
    def getConnectToExisting(self, **kwargs) -> Union[str, Callable]: ...
    def getCreateNew(self, **kwargs) -> Union[str, Callable]: ...
    def getDefaultTraversal(self, **kwargs) -> Union[str, Callable]: ...
    def getDelete(self, **kwargs) -> str: ...
    def getDisconnect(self, **kwargs) -> Union[str, Callable]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getExtraButtonIcon(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIgnore(self, **kwargs) -> Union[str, Callable]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRelatedNodes(self, **kwargs) -> Union[str, Callable]: ...
    def getUnignore(self, **kwargs) -> Union[str, Callable]: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def noIgnorableMenu(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def noKeyableMenu(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAttrNavDecision(self, val: Tuple[Union[_general.PyNode, str], str] = ..., **kwargs: Any) -> None: ...
    def setAttribute(self, val: Union[_general.PyNode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setConnectAttrToDropped(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setConnectNodeToDropped(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setConnectToExisting(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setCreateNew(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setDefaultTraversal(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setDelete(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDisconnect(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setExtraButtonIcon(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setIgnore(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRelatedNodes(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setUnignore(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class CheckBoxGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def changeCommand1(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def changeCommand2(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def changeCommand3(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def changeCommand4(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEditable(self, **kwargs) -> bool: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnable1(self, **kwargs) -> bool: ...
    def getEnable2(self, **kwargs) -> bool: ...
    def getEnable3(self, **kwargs) -> bool: ...
    def getEnable4(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getLabel1(self, **kwargs) -> str: ...
    def getLabel2(self, **kwargs) -> str: ...
    def getLabel3(self, **kwargs) -> str: ...
    def getLabel4(self, **kwargs) -> str: ...
    def getLabelArray2(self, **kwargs) -> Tuple[str, str]: ...
    def getLabelArray3(self, **kwargs) -> Tuple[str, str, str]: ...
    def getLabelArray4(self, **kwargs) -> Tuple[str, str, str, str]: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getValue1(self, **kwargs) -> bool: ...
    def getValue2(self, **kwargs) -> bool: ...
    def getValue3(self, **kwargs) -> bool: ...
    def getValue4(self, **kwargs) -> bool: ...
    def getValueArray2(self, **kwargs) -> Tuple[bool, bool]: ...
    def getValueArray3(self, **kwargs) -> Tuple[bool, bool, bool]: ...
    def getValueArray4(self, **kwargs) -> Tuple[bool, bool, bool, bool]: ...
    def getVertical(self, **kwargs) -> Any: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def offCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def offCommand1(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def offCommand2(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def offCommand3(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def offCommand4(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def onCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def onCommand1(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def onCommand2(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def onCommand3(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def onCommand4(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEditable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable1(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable2(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable3(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable4(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel1(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel2(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel3(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel4(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabelArray2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def setLabelArray3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def setLabelArray4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setValue1(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setValue2(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setValue3(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setValue4(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setValueArray2(self, val: Tuple[Union[bool, int], Union[bool, int]] = ..., **kwargs: Any) -> None: ...
    def setValueArray3(self, val: Tuple[Union[bool, int], Union[bool, int], Union[bool, int]] = ..., **kwargs: Any) -> None: ...
    def setValueArray4(self, val: Tuple[Union[bool, int], Union[bool, int], Union[bool, int], Union[bool, int]] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class ColorIndexSliderGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getExtraLabel(self, **kwargs) -> str: ...
    def getForceDragRefresh(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getInvisible(self, **kwargs) -> int: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaxValue(self, **kwargs) -> int: ...
    def getMinValue(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getValue(self, **kwargs) -> int: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setExtraLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setForceDragRefresh(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setInvisible(self, val: int = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setMinValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class ColorSliderButtonGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def buttonCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getButtonLabel(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getForceDragRefresh(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHsvValue(self, **kwargs) -> Tuple[float, float, float]: ...
    def getImage(self, **kwargs) -> str: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRgbValue(self, **kwargs) -> Tuple[float, float, float]: ...
    def getSymbolButtonDisplay(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setButtonLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setForceDragRefresh(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setHsvValue(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRgbValue(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setSymbolButtonDisplay(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def symbolButtonCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...

class ColorSliderGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getForceDragRefresh(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHsvValue(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRgbValue(self, **kwargs) -> Tuple[float, float, float]: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setForceDragRefresh(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setHsvValue(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRgbValue(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class ColumnLayout(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Tuple[str, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset(self, val: Tuple[str, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getChildArray(self, **kwargs) -> Any: ...
    def getColumnWidth(self, **kwargs) -> int: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfChildren(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRowSpacing(self, **kwargs) -> int: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setColumnWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRowSpacing(self, val: int = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class FloatSliderButtonGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def buttonCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getButtonLabel(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getExtraLabel(self, **kwargs) -> str: ...
    def getFieldMaxValue(self, **kwargs) -> float: ...
    def getFieldMinValue(self, **kwargs) -> float: ...
    def getFieldStep(self, **kwargs) -> float: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getImage(self, **kwargs) -> str: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaxValue(self, **kwargs) -> float: ...
    def getMinValue(self, **kwargs) -> float: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSliderStep(self, **kwargs) -> float: ...
    def getStep(self, **kwargs) -> float: ...
    def getSymbolButtonDisplay(self, **kwargs) -> bool: ...
    def getValue(self, **kwargs) -> float: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def precision(self, val: int = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setButtonLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setExtraLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFieldMaxValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setFieldMinValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setFieldStep(self, val: float = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setMinValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSliderStep(self, val: float = ..., **kwargs: Any) -> None: ...
    def setStep(self, val: float = ..., **kwargs: Any) -> None: ...
    def setSymbolButtonDisplay(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def symbolButtonCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...

class FloatSliderGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getExtraLabel(self, **kwargs) -> str: ...
    def getFieldMaxValue(self, **kwargs) -> float: ...
    def getFieldMinValue(self, **kwargs) -> float: ...
    def getFieldStep(self, **kwargs) -> float: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaxValue(self, **kwargs) -> float: ...
    def getMinValue(self, **kwargs) -> float: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSliderStep(self, **kwargs) -> float: ...
    def getStep(self, **kwargs) -> float: ...
    def getValue(self, **kwargs) -> float: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def precision(self, val: int = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setExtraLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFieldMaxValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setFieldMinValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setFieldStep(self, val: float = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setMinValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSliderStep(self, val: float = ..., **kwargs: Any) -> None: ...
    def setStep(self, val: float = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class FrameLayout(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def collapseCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def expandCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getBackgroundShade(self, **kwargs) -> bool: ...
    def getBorderStyle(self, **kwargs) -> str: ...
    def getBorderVisible(self, **kwargs) -> bool: ...
    def getChildArray(self, **kwargs) -> Any: ...
    def getCollapsable(self, **kwargs) -> bool: ...
    def getCollapse(self, **kwargs) -> bool: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFont(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getLabelAlign(self, **kwargs) -> str: ...
    def getLabelIndent(self, **kwargs) -> int: ...
    def getLabelVisible(self, **kwargs) -> bool: ...
    def getLabelWidth(self, **kwargs) -> int: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMarginHeight(self, **kwargs) -> int: ...
    def getMarginWidth(self, **kwargs) -> int: ...
    def getNumberOfChildren(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def preCollapseCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def preExpandCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setBackgroundShade(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setBorderStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBorderVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setCollapsable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setCollapse(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFont(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabelAlign(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabelIndent(self, val: int = ..., **kwargs: Any) -> None: ...
    def setLabelVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setLabelWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMarginHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setMarginWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class GridLayout(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def cellWidthHeight(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAllowEmptyCells(self, **kwargs) -> Any: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getAutoGrow(self, **kwargs) -> Any: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getCellHeight(self, **kwargs) -> int: ...
    def getCellWidth(self, **kwargs) -> int: ...
    def getChildArray(self, **kwargs) -> Any: ...
    def getColumnsResizable(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getGridOrder(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfChildren(self, **kwargs) -> Any: ...
    def getNumberOfColumns(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getNumberOfRows(self, **kwargs) -> int: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def numberOfRowsColumns(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def position(self, val: Union[Tuple[str, int], List[Tuple[str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setCellHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setCellWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNumberOfColumns(self, val: int = ..., **kwargs: Any) -> None: ...
    def setNumberOfRows(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class IntFieldGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnable1(self, **kwargs) -> bool: ...
    def getEnable2(self, **kwargs) -> bool: ...
    def getEnable3(self, **kwargs) -> bool: ...
    def getEnable4(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getExtraLabel(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getValue(self, **kwargs) -> Tuple[int, int, int, int]: ...
    def getValue1(self, **kwargs) -> int: ...
    def getValue2(self, **kwargs) -> int: ...
    def getValue3(self, **kwargs) -> int: ...
    def getValue4(self, **kwargs) -> int: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable1(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable2(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable3(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable4(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setExtraLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def setValue1(self, val: int = ..., **kwargs: Any) -> None: ...
    def setValue2(self, val: int = ..., **kwargs: Any) -> None: ...
    def setValue3(self, val: int = ..., **kwargs: Any) -> None: ...
    def setValue4(self, val: int = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class IntSliderGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getExtraLabel(self, **kwargs) -> str: ...
    def getFieldMaxValue(self, **kwargs) -> int: ...
    def getFieldMinValue(self, **kwargs) -> int: ...
    def getFieldStep(self, **kwargs) -> int: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMaxValue(self, **kwargs) -> int: ...
    def getMinValue(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSliderStep(self, **kwargs) -> int: ...
    def getStep(self, **kwargs) -> int: ...
    def getValue(self, **kwargs) -> int: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setExtraLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFieldMaxValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setFieldMinValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setFieldStep(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setMinValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSliderStep(self, val: int = ..., **kwargs: Any) -> None: ...
    def setStep(self, val: int = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class MenuBarLayout(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getChildArray(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMenuArray(self, **kwargs) -> Any: ...
    def getMenuBarVisible(self, **kwargs) -> bool: ...
    def getNumberOfChildren(self, **kwargs) -> Any: ...
    def getNumberOfMenus(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def menuIndex(self, val: Tuple[str, int] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMenuBarVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class PaneLayout(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getActiveFrameThickness(self, **kwargs) -> int: ...
    def getActivePane(self, **kwargs) -> str: ...
    def getActivePaneIndex(self, **kwargs) -> int: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getChildArray(self, **kwargs) -> Any: ...
    def getConfiguration(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfChildren(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getNumberOfVisiblePanes(self, **kwargs) -> Any: ...
    def getPane1(self, **kwargs) -> Any: ...
    def getPane2(self, **kwargs) -> Any: ...
    def getPane3(self, **kwargs) -> Any: ...
    def getPane4(self, **kwargs) -> Any: ...
    def getPaneSize(self, **kwargs) -> Tuple[int, int, int]: ...
    def getPaneUnderPointer(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSeparatorThickness(self, **kwargs) -> int: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def separatorMovedCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setActiveFrameThickness(self, val: int = ..., **kwargs: Any) -> None: ...
    def setActivePane(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setActivePaneIndex(self, val: int = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setConfiguration(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPane(self, val: Union[Tuple[str, int], List[Tuple[str, int]]] = ..., **kwargs: Any) -> None: ...
    def setPaneSize(self, val: Union[Tuple[int, int, int], List[Tuple[int, int, int]]] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSeparatorThickness(self, val: int = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def staticHeightPane(self, val: int = ..., **kwargs: Any) -> None: ...
    def staticWidthPane(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class RadioButtonGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def changeCommand1(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def changeCommand2(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def changeCommand3(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def changeCommand4(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getAnnotation1(self, **kwargs) -> str: ...
    def getAnnotation2(self, **kwargs) -> str: ...
    def getAnnotation3(self, **kwargs) -> str: ...
    def getAnnotation4(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getData1(self, **kwargs) -> int: ...
    def getData2(self, **kwargs) -> int: ...
    def getData3(self, **kwargs) -> int: ...
    def getData4(self, **kwargs) -> int: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEditable(self, **kwargs) -> bool: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnable1(self, **kwargs) -> bool: ...
    def getEnable2(self, **kwargs) -> bool: ...
    def getEnable3(self, **kwargs) -> bool: ...
    def getEnable4(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getLabel1(self, **kwargs) -> str: ...
    def getLabel2(self, **kwargs) -> str: ...
    def getLabel3(self, **kwargs) -> str: ...
    def getLabel4(self, **kwargs) -> str: ...
    def getLabelAnnotation(self, **kwargs) -> str: ...
    def getLabelArray2(self, **kwargs) -> Tuple[str, str]: ...
    def getLabelArray3(self, **kwargs) -> Tuple[str, str, str]: ...
    def getLabelArray4(self, **kwargs) -> Tuple[str, str, str, str]: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSelect(self, **kwargs) -> int: ...
    def getVertical(self, **kwargs) -> Any: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def offCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def offCommand1(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def offCommand2(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def offCommand3(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def offCommand4(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def onCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def onCommand1(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def onCommand2(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def onCommand3(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def onCommand4(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation1(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation2(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation3(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation4(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setData1(self, val: int = ..., **kwargs: Any) -> None: ...
    def setData2(self, val: int = ..., **kwargs: Any) -> None: ...
    def setData3(self, val: int = ..., **kwargs: Any) -> None: ...
    def setData4(self, val: int = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEditable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable1(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable2(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable3(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable4(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel1(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel2(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel3(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel4(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabelAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabelArray2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def setLabelArray3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def setLabelArray4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSelect(self, val: int = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class RowColumnLayout(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnOffset(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnSpacing(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getChildArray(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfChildren(self, **kwargs) -> Any: ...
    def getNumberOfColumns(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getNumberOfRows(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rowAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def rowHeight(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def rowOffset(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def rowSpacing(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class ScrollLayout(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getBorderVisible(self, **kwargs) -> bool: ...
    def getChildArray(self, **kwargs) -> Any: ...
    def getChildResizable(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMinChildWidth(self, **kwargs) -> Any: ...
    def getNumberOfChildren(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPanEnabled(self, **kwargs) -> bool: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getScrollAreaHeight(self, **kwargs) -> Any: ...
    def getScrollAreaValue(self, **kwargs) -> Any: ...
    def getScrollAreaWidth(self, **kwargs) -> Any: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def horizontalScrollBarThickness(self, val: int = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def resizeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def scrollByPixel(self, val: Tuple[str, int] = ..., **kwargs: Any) -> None: ...
    def scrollPage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setBorderVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPanEnabled(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def verticalScrollBarThickness(self, val: int = ..., **kwargs: Any) -> None: ...

class ShelfLayout(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAlignment(self, **kwargs) -> str: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getCellHeight(self, **kwargs) -> int: ...
    def getCellWidth(self, **kwargs) -> int: ...
    def getCellWidthHeight(self, **kwargs) -> Tuple[int, int]: ...
    def getChildArray(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHorizontal(self, **kwargs) -> bool: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLtVersion(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfChildren(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSpacing(self, **kwargs) -> int: ...
    def getStyle(self, **kwargs) -> str: ...
    def getVersion(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def position(self, val: Union[Tuple[str, int], List[Tuple[str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAlignment(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setCellHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setCellWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setCellWidthHeight(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setHorizontal(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setLtVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSpacing(self, val: int = ..., **kwargs: Any) -> None: ...
    def setStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class ShelfTabLayout(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def closeTab(self, val: int = ..., **kwargs: Any) -> None: ...
    def closeTabCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def doubleClickCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getBorderStyle(self, **kwargs) -> str: ...
    def getChildArray(self, **kwargs) -> Any: ...
    def getChildResizable(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getImage(self, **kwargs) -> str: ...
    def getImageVisible(self, **kwargs) -> bool: ...
    def getInnerMarginHeight(self, **kwargs) -> Any: ...
    def getInnerMarginWidth(self, **kwargs) -> Any: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMinChildWidth(self, **kwargs) -> Any: ...
    def getNumberOfChildren(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getScrollable(self, **kwargs) -> Any: ...
    def getScrollableTabs(self, **kwargs) -> bool: ...
    def getSelectCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getSelectTab(self, **kwargs) -> str: ...
    def getSelectTabIndex(self, **kwargs) -> int: ...
    def getShowNewTab(self, **kwargs) -> bool: ...
    def getTabIcon(self, **kwargs) -> Tuple[str, str]: ...
    def getTabIconIndex(self, **kwargs) -> Tuple[int, str]: ...
    def getTabLabel(self, **kwargs) -> Tuple[str, str]: ...
    def getTabLabelIndex(self, **kwargs) -> Tuple[int, str]: ...
    def getTabPosition(self, **kwargs) -> str: ...
    def getTabTooltip(self, **kwargs) -> Tuple[str, str]: ...
    def getTabTooltipIndex(self, **kwargs) -> Tuple[int, str]: ...
    def getTabsClosable(self, **kwargs) -> Any: ...
    def getTabsVisible(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def horizontalScrollBarThickness(self, val: int = ..., **kwargs: Any) -> None: ...
    def moveTab(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def newTabCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def postMenuCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def preSelectCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setBorderStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImageVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setScrollableTabs(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSelectCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setSelectTab(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSelectTabIndex(self, val: int = ..., **kwargs: Any) -> None: ...
    def setShowNewTab(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTabIcon(self, val: Union[Tuple[str, str], List[Tuple[str, str]]] = ..., **kwargs: Any) -> None: ...
    def setTabIconIndex(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def setTabLabel(self, val: Union[Tuple[str, str], List[Tuple[str, str]]] = ..., **kwargs: Any) -> None: ...
    def setTabLabelIndex(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def setTabPosition(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setTabTooltip(self, val: Union[Tuple[str, str], List[Tuple[str, str]]] = ..., **kwargs: Any) -> None: ...
    def setTabTooltipIndex(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def setTabsVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def verticalScrollBarThickness(self, val: int = ..., **kwargs: Any) -> None: ...

class TabLayout(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def closeTab(self, val: int = ..., **kwargs: Any) -> None: ...
    def closeTabCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def doubleClickCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getBorderStyle(self, **kwargs) -> str: ...
    def getChildArray(self, **kwargs) -> Any: ...
    def getChildResizable(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getImage(self, **kwargs) -> str: ...
    def getImageVisible(self, **kwargs) -> bool: ...
    def getInnerMarginHeight(self, **kwargs) -> Any: ...
    def getInnerMarginWidth(self, **kwargs) -> Any: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMinChildWidth(self, **kwargs) -> Any: ...
    def getNumberOfChildren(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getScrollable(self, **kwargs) -> Any: ...
    def getScrollableTabs(self, **kwargs) -> bool: ...
    def getSelectCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getSelectTab(self, **kwargs) -> str: ...
    def getSelectTabIndex(self, **kwargs) -> int: ...
    def getShowNewTab(self, **kwargs) -> bool: ...
    def getTabIcon(self, **kwargs) -> Tuple[str, str]: ...
    def getTabIconIndex(self, **kwargs) -> Tuple[int, str]: ...
    def getTabLabel(self, **kwargs) -> Tuple[str, str]: ...
    def getTabLabelIndex(self, **kwargs) -> Tuple[int, str]: ...
    def getTabPosition(self, **kwargs) -> str: ...
    def getTabTooltip(self, **kwargs) -> Tuple[str, str]: ...
    def getTabTooltipIndex(self, **kwargs) -> Tuple[int, str]: ...
    def getTabsClosable(self, **kwargs) -> Any: ...
    def getTabsVisible(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def horizontalScrollBarThickness(self, val: int = ..., **kwargs: Any) -> None: ...
    def moveTab(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def newTabCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def postMenuCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def preSelectCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setBorderStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImageVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setScrollableTabs(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSelectCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setSelectTab(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSelectTabIndex(self, val: int = ..., **kwargs: Any) -> None: ...
    def setShowNewTab(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTabIcon(self, val: Union[Tuple[str, str], List[Tuple[str, str]]] = ..., **kwargs: Any) -> None: ...
    def setTabIconIndex(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def setTabLabel(self, val: Union[Tuple[str, str], List[Tuple[str, str]]] = ..., **kwargs: Any) -> None: ...
    def setTabLabelIndex(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def setTabPosition(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setTabTooltip(self, val: Union[Tuple[str, str], List[Tuple[str, str]]] = ..., **kwargs: Any) -> None: ...
    def setTabTooltipIndex(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def setTabsVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def verticalScrollBarThickness(self, val: int = ..., **kwargs: Any) -> None: ...

class TextFieldGrp(Layout):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def adjustableColumn(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn2(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn3(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn4(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn5(self, val: int = ..., **kwargs: Any) -> None: ...
    def adjustableColumn6(self, val: int = ..., **kwargs: Any) -> None: ...
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def columnAlign(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def columnAlign2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAlign6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def columnAttach2(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach3(self, val: Tuple[str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach4(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach5(self, val: Tuple[str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnAttach6(self, val: Tuple[str, str, str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def columnOffset2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnOffset6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def columnWidth1(self, val: int = ..., **kwargs: Any) -> None: ...
    def columnWidth2(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth3(self, val: Tuple[int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth4(self, val: Tuple[int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth5(self, val: Tuple[int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def columnWidth6(self, val: Tuple[int, int, int, int, int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def forceChangeCommand(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEditable(self, **kwargs) -> bool: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFileName(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getInsertionPosition(self, **kwargs) -> int: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPlaceholderText(self, **kwargs) -> str: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getText(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def insertText(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rowAttach(self, val: Union[Tuple[int, str, int], List[Tuple[int, str, int]]] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEditable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFileName(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setInsertionPosition(self, val: int = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPlaceholderText(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setText(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def textChangedCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...

class LayoutDialog(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str

class MenuEditor(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def cellWidthHeight(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getCellHeight(self, **kwargs) -> int: ...
    def getCellWidth(self, **kwargs) -> int: ...
    def getCheckBoxPresent(self, **kwargs) -> Tuple[bool, str, int]: ...
    def getCheckBoxState(self, **kwargs) -> Tuple[bool, str, int]: ...
    def getChildArray(self, **kwargs) -> Any: ...
    def getCommand(self, **kwargs) -> Tuple[str, str, int]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getImage(self, **kwargs) -> Tuple[str, str, int]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> Tuple[str, str, int]: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMenuItemTypes(self, **kwargs) -> Any: ...
    def getNumberOfChildren(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getOptionBoxCommand(self, **kwargs) -> Tuple[str, str, int]: ...
    def getOptionBoxPresent(self, **kwargs) -> Tuple[bool, str, int]: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRadioButtonPresent(self, **kwargs) -> Tuple[bool, str, int]: ...
    def getRadioButtonState(self, **kwargs) -> Tuple[bool, str, int]: ...
    def getSeparator(self, **kwargs) -> Tuple[str, int]: ...
    def getStyle(self, **kwargs) -> str: ...
    def getSubMenuEditorsOpen(self, **kwargs) -> Any: ...
    def getTopLevelMenu(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setCellHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setCellWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setCheckBoxPresent(self, val: Tuple[Union[bool, int], str, int] = ..., **kwargs: Any) -> None: ...
    def setCheckBoxState(self, val: Tuple[Union[bool, int], str, int] = ..., **kwargs: Any) -> None: ...
    def setCommand(self, val: Tuple[str, str, int] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Tuple[str, str, int] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Tuple[str, str, int] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setOptionBoxCommand(self, val: Tuple[str, str, int] = ..., **kwargs: Any) -> None: ...
    def setOptionBoxPresent(self, val: Tuple[Union[bool, int], str, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRadioButtonPresent(self, val: Tuple[Union[bool, int], str, int] = ..., **kwargs: Any) -> None: ...
    def setRadioButtonState(self, val: Tuple[Union[bool, int], str, int] = ..., **kwargs: Any) -> None: ...
    def setSeparator(self, val: Tuple[str, int] = ..., **kwargs: Any) -> None: ...
    def setStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setTopLevelMenu(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def subMenuAt(self, val: Tuple[str, int] = ..., **kwargs: Any) -> None: ...

class MenuSet(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def getAllMenuSets(self, **kwargs) -> Any: ...
    def getCurrentMenuSet(self, **kwargs) -> Any: ...
    def getExists(self, **kwargs) -> Any: ...
    def getHotBoxVisible(self, **kwargs) -> bool: ...
    def getLabel(self, **kwargs) -> Any: ...
    def getMenuArray(self, **kwargs) -> Any: ...
    def getNumberOfMenuSets(self, **kwargs) -> Any: ...
    def getNumberOfMenus(self, **kwargs) -> Any: ...
    def getPermanent(self, **kwargs) -> bool: ...
    def setHotBoxVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPermanent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class MessageLine(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class ModelEditor(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def activeCustomEnvironment(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def addObjects(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def addSelected(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def cameraName(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def getActiveComponentsXray(self, **kwargs) -> bool: ...
    def getActiveCustomGeometry(self, **kwargs) -> str: ...
    def getActiveCustomLighSet(self, **kwargs) -> str: ...
    def getActiveCustomOverrideGeometry(self, **kwargs) -> str: ...
    def getActiveCustomRenderer(self, **kwargs) -> str: ...
    def getActiveOnly(self, **kwargs) -> bool: ...
    def getActiveShadingGraph(self, **kwargs) -> str: ...
    def getActiveView(self, **kwargs) -> bool: ...
    def getAllObjects(self, **kwargs) -> bool: ...
    def getBackfaceCulling(self, **kwargs) -> bool: ...
    def getBufferMode(self, **kwargs) -> str: ...
    def getBumpResolution(self, **kwargs) -> Tuple[int, int]: ...
    def getCamera(self, **kwargs) -> str: ...
    def getCameraSet(self, **kwargs) -> str: ...
    def getCameraSetup(self, **kwargs) -> Any: ...
    def getCameras(self, **kwargs) -> bool: ...
    def getCapture(self, **kwargs) -> str: ...
    def getCaptureSequenceNumber(self, **kwargs) -> int: ...
    def getClipGhosts(self, **kwargs) -> bool: ...
    def getCmEnabled(self, **kwargs) -> bool: ...
    def getColorMap(self, **kwargs) -> Any: ...
    def getColorResolution(self, **kwargs) -> Tuple[int, int]: ...
    def getControl(self, **kwargs) -> Any: ...
    def getControlVertices(self, **kwargs) -> bool: ...
    def getCullingOverride(self, **kwargs) -> str: ...
    def getDefault(self, **kwargs) -> bool: ...
    def getDeformers(self, **kwargs) -> bool: ...
    def getDimensions(self, **kwargs) -> bool: ...
    def getDisplayAppearance(self, **kwargs) -> str: ...
    def getDisplayLights(self, **kwargs) -> str: ...
    def getDisplayTextures(self, **kwargs) -> bool: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getDynamicConstraints(self, **kwargs) -> bool: ...
    def getDynamics(self, **kwargs) -> bool: ...
    def getEditorChanged(self, **kwargs) -> Union[str, Callable]: ...
    def getExposure(self, **kwargs) -> float: ...
    def getFilter(self, **kwargs) -> str: ...
    def getFilteredObjectList(self, **kwargs) -> Any: ...
    def getFluids(self, **kwargs) -> bool: ...
    def getFogColor(self, **kwargs) -> Tuple[float, float, float, float]: ...
    def getFogDensity(self, **kwargs) -> float: ...
    def getFogEnd(self, **kwargs) -> float: ...
    def getFogMode(self, **kwargs) -> str: ...
    def getFogSource(self, **kwargs) -> str: ...
    def getFogStart(self, **kwargs) -> float: ...
    def getFogging(self, **kwargs) -> bool: ...
    def getFollicles(self, **kwargs) -> bool: ...
    def getForceMainConnection(self, **kwargs) -> str: ...
    def getGamma(self, **kwargs) -> float: ...
    def getGreasePencils(self, **kwargs) -> bool: ...
    def getGrid(self, **kwargs) -> bool: ...
    def getHairSystems(self, **kwargs) -> bool: ...
    def getHandles(self, **kwargs) -> bool: ...
    def getHeadsUpDisplay(self, **kwargs) -> bool: ...
    def getHeight(self, **kwargs) -> Any: ...
    def getHighlightConnection(self, **kwargs) -> str: ...
    def getHulls(self, **kwargs) -> bool: ...
    def getIgnorePanZoom(self, **kwargs) -> bool: ...
    def getIkHandles(self, **kwargs) -> bool: ...
    def getImagePlane(self, **kwargs) -> bool: ...
    def getInteractive(self, **kwargs) -> bool: ...
    def getInteractiveBackFaceCull(self, **kwargs) -> bool: ...
    def getInteractiveDisableShadows(self, **kwargs) -> bool: ...
    def getIsFiltered(self, **kwargs) -> Any: ...
    def getJointXray(self, **kwargs) -> bool: ...
    def getJoints(self, **kwargs) -> bool: ...
    def getLights(self, **kwargs) -> bool: ...
    def getLineWidth(self, **kwargs) -> float: ...
    def getLocators(self, **kwargs) -> bool: ...
    def getLowQualityLighting(self, **kwargs) -> bool: ...
    def getMainListConnection(self, **kwargs) -> str: ...
    def getManipulators(self, **kwargs) -> bool: ...
    def getMaxConstantTransparency(self, **kwargs) -> float: ...
    def getMaximumNumHardwareLights(self, **kwargs) -> bool: ...
    def getMotionTrails(self, **kwargs) -> bool: ...
    def getNCloths(self, **kwargs) -> bool: ...
    def getNParticles(self, **kwargs) -> bool: ...
    def getNRigids(self, **kwargs) -> bool: ...
    def getNurbsCurves(self, **kwargs) -> bool: ...
    def getNurbsSurfaces(self, **kwargs) -> bool: ...
    def getObjectFilter(self, **kwargs) -> Union[str, Callable]: ...
    def getObjectFilterList(self, **kwargs) -> Any: ...
    def getObjectFilterListUI(self, **kwargs) -> Any: ...
    def getObjectFilterShowInHUD(self, **kwargs) -> bool: ...
    def getObjectFilterUI(self, **kwargs) -> Any: ...
    def getOcclusionCulling(self, **kwargs) -> bool: ...
    def getPanel(self, **kwargs) -> Any: ...
    def getParticleInstancers(self, **kwargs) -> bool: ...
    def getPivots(self, **kwargs) -> bool: ...
    def getPlanes(self, **kwargs) -> bool: ...
    def getPolymeshes(self, **kwargs) -> bool: ...
    def getQueryPluginObjects(self, **kwargs) -> Any: ...
    def getRendererDeviceName(self, **kwargs) -> Any: ...
    def getRendererList(self, **kwargs) -> Any: ...
    def getRendererListUI(self, **kwargs) -> Any: ...
    def getRendererName(self, **kwargs) -> str: ...
    def getRendererOverrideList(self, **kwargs) -> Any: ...
    def getRendererOverrideListUI(self, **kwargs) -> Any: ...
    def getRendererOverrideName(self, **kwargs) -> str: ...
    def getSceneRenderFilter(self, **kwargs) -> str: ...
    def getSelectionConnection(self, **kwargs) -> str: ...
    def getSelectionHiliteDisplay(self, **kwargs) -> bool: ...
    def getShadingModel(self, **kwargs) -> int: ...
    def getShadows(self, **kwargs) -> bool: ...
    def getSmallObjectCulling(self, **kwargs) -> bool: ...
    def getSmallObjectThreshold(self, **kwargs) -> float: ...
    def getSmoothWireframe(self, **kwargs) -> bool: ...
    def getSortTransparent(self, **kwargs) -> bool: ...
    def getStateString(self, **kwargs) -> Any: ...
    def getStereoDrawMode(self, **kwargs) -> bool: ...
    def getStrokes(self, **kwargs) -> bool: ...
    def getSubdivSurfaces(self, **kwargs) -> bool: ...
    def getTextureAnisotropic(self, **kwargs) -> bool: ...
    def getTextureCompression(self, **kwargs) -> bool: ...
    def getTextureDisplay(self, **kwargs) -> str: ...
    def getTextureEnvironmentMap(self, **kwargs) -> bool: ...
    def getTextureHilight(self, **kwargs) -> bool: ...
    def getTextureMaxSize(self, **kwargs) -> int: ...
    def getTextureMemoryUsed(self, **kwargs) -> Any: ...
    def getTextureSampling(self, **kwargs) -> int: ...
    def getTextures(self, **kwargs) -> bool: ...
    def getTranspInShadows(self, **kwargs) -> bool: ...
    def getTransparencyAlgorithm(self, **kwargs) -> str: ...
    def getTwoSidedLighting(self, **kwargs) -> bool: ...
    def getUseBaseRenderer(self, **kwargs) -> bool: ...
    def getUseColorIndex(self, **kwargs) -> bool: ...
    def getUseDefaultMaterial(self, **kwargs) -> bool: ...
    def getUseInteractiveMode(self, **kwargs) -> bool: ...
    def getUseRGBImagePlane(self, **kwargs) -> bool: ...
    def getUseReducedRenderer(self, **kwargs) -> bool: ...
    def getUserNode(self, **kwargs) -> str: ...
    def getViewObjects(self, **kwargs) -> Any: ...
    def getViewSelected(self, **kwargs) -> bool: ...
    def getViewTransformName(self, **kwargs) -> str: ...
    def getViewType(self, **kwargs) -> Any: ...
    def getWidth(self, **kwargs) -> Any: ...
    def getWireframeBackingStore(self, **kwargs) -> bool: ...
    def getWireframeOnShaded(self, **kwargs) -> bool: ...
    def getXray(self, **kwargs) -> bool: ...
    def lockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def noUndo(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def pluginObjects(self, val: Union[Tuple[str, Union[bool, int]], List[Tuple[str, Union[bool, int]]]] = ..., **kwargs: Any) -> None: ...
    def pluginShapes(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def removeSelected(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def resetCustomCamera(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setActiveComponentsXray(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setActiveCustomGeometry(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setActiveCustomLighSet(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setActiveCustomOverrideGeometry(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setActiveCustomRenderer(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setActiveOnly(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setActiveShadingGraph(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setActiveView(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAllObjects(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setBackfaceCulling(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setBufferMode(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBumpResolution(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def setCamera(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setCameraSet(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setCameras(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setCapture(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setCaptureSequenceNumber(self, val: int = ..., **kwargs: Any) -> None: ...
    def setClipGhosts(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setCmEnabled(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setColorResolution(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def setControlVertices(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setCullingOverride(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDefault(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDeformers(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDimensions(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDisplayAppearance(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDisplayLights(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDisplayTextures(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDynamicConstraints(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDynamics(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEditorChanged(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setExposure(self, val: float = ..., **kwargs: Any) -> None: ...
    def setFilter(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFluids(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFogColor(self, val: Tuple[float, float, float, float] = ..., **kwargs: Any) -> None: ...
    def setFogDensity(self, val: float = ..., **kwargs: Any) -> None: ...
    def setFogEnd(self, val: float = ..., **kwargs: Any) -> None: ...
    def setFogMode(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFogSource(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFogStart(self, val: float = ..., **kwargs: Any) -> None: ...
    def setFogging(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFollicles(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setForceMainConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setGamma(self, val: float = ..., **kwargs: Any) -> None: ...
    def setGreasePencils(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setGrid(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHairSystems(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHandles(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeadsUpDisplay(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHighlightConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHulls(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setIgnorePanZoom(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setIkHandles(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setImagePlane(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setInteractive(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setInteractiveBackFaceCull(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setInteractiveDisableShadows(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setJointXray(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setJoints(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setLights(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setLineWidth(self, val: float = ..., **kwargs: Any) -> None: ...
    def setLocators(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setLowQualityLighting(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMainListConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManipulators(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMaxConstantTransparency(self, val: float = ..., **kwargs: Any) -> None: ...
    def setMaximumNumHardwareLights(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMotionTrails(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNCloths(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNParticles(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNRigids(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNurbsCurves(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNurbsSurfaces(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setObjectFilter(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setObjectFilterShowInHUD(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setOcclusionCulling(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setParent(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setParticleInstancers(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPivots(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPlanes(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPolymeshes(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRendererName(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setRendererOverrideName(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSceneRenderFilter(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSelected(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSelectionConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSelectionHiliteDisplay(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShadingModel(self, val: int = ..., **kwargs: Any) -> None: ...
    def setShadows(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSmallObjectCulling(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSmallObjectThreshold(self, val: float = ..., **kwargs: Any) -> None: ...
    def setSmoothWireframe(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSortTransparent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setStereoDrawMode(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setStrokes(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSubdivSurfaces(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTextureAnisotropic(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTextureCompression(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTextureDisplay(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setTextureEnvironmentMap(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTextureHilight(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTextureMaxSize(self, val: int = ..., **kwargs: Any) -> None: ...
    def setTextureSampling(self, val: int = ..., **kwargs: Any) -> None: ...
    def setTextures(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTranspInShadows(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTransparencyAlgorithm(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setTwoSidedLighting(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setUseBaseRenderer(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setUseColorIndex(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setUseDefaultMaterial(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setUseInteractiveMode(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setUseRGBImagePlane(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setUseReducedRenderer(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setUserNode(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setViewSelected(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setViewTransformName(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setWireframeBackingStore(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setWireframeOnShaded(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setXray(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def toggleExposure(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def toggleGamma(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unlockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def updateColorMode(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def updateMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class NameField(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getDrawInactiveFrame(self, **kwargs) -> bool: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNameChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getObject(self, **kwargs) -> str: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getReceiveFocusCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDrawInactiveFrame(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNameChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setObject(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setReceiveFocusCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class NodeIconButton(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAlign(self, **kwargs) -> str: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getDisabledImage(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFlipX(self, **kwargs) -> bool: ...
    def getFlipY(self, **kwargs) -> bool: ...
    def getFont(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getImage(self, **kwargs) -> str: ...
    def getImage1(self, **kwargs) -> str: ...
    def getImage2(self, **kwargs) -> str: ...
    def getImage3(self, **kwargs) -> str: ...
    def getImageOverlayLabel(self, **kwargs) -> str: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getLabelOffset(self, **kwargs) -> int: ...
    def getLtVersion(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMarginHeight(self, **kwargs) -> int: ...
    def getMarginWidth(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getOverlayLabelBackColor(self, **kwargs) -> Tuple[float, float, float, float]: ...
    def getOverlayLabelColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRotation(self, **kwargs) -> float: ...
    def getStyle(self, **kwargs) -> str: ...
    def getUseAlpha(self, **kwargs) -> bool: ...
    def getVersion(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAlign(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setDisabledImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlipX(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlipY(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFont(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage1(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage2(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage3(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImageOverlayLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabelOffset(self, val: int = ..., **kwargs: Any) -> None: ...
    def setLtVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMarginHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setMarginWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setOverlayLabelBackColor(self, val: Tuple[float, float, float, float] = ..., **kwargs: Any) -> None: ...
    def setOverlayLabelColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRotation(self, val: float = ..., **kwargs: Any) -> None: ...
    def setStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setUseAlpha(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class OutlinerEditor(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def allowMultiSelection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def alwaysToggleSelect(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def directSelect(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def expandAllItems(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def expandAllSelectedItems(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def expandAttribute(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getAnimLayerFilterOptions(self, **kwargs) -> str: ...
    def getAttrAlphaOrder(self, **kwargs) -> str: ...
    def getAttrFilter(self, **kwargs) -> str: ...
    def getAutoExpand(self, **kwargs) -> bool: ...
    def getAutoExpandAnimatedShapes(self, **kwargs) -> bool: ...
    def getAutoExpandLayers(self, **kwargs) -> bool: ...
    def getAutoSelectNewObjects(self, **kwargs) -> bool: ...
    def getContainersIgnoreFilters(self, **kwargs) -> bool: ...
    def getControl(self, **kwargs) -> Any: ...
    def getDisplayMode(self, **kwargs) -> str: ...
    def getDoNotSelectNewObjects(self, **kwargs) -> bool: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getDropIsParent(self, **kwargs) -> bool: ...
    def getEditAttrName(self, **kwargs) -> bool: ...
    def getExpandConnections(self, **kwargs) -> bool: ...
    def getExpandObjects(self, **kwargs) -> bool: ...
    def getFeedbackItemName(self, **kwargs) -> Any: ...
    def getFeedbackRowNumber(self, **kwargs) -> Any: ...
    def getFilter(self, **kwargs) -> str: ...
    def getForceMainConnection(self, **kwargs) -> str: ...
    def getGetCurrentSetOfItem(self, **kwargs) -> Any: ...
    def getHighlightActive(self, **kwargs) -> bool: ...
    def getHighlightConnection(self, **kwargs) -> str: ...
    def getHighlightSecondary(self, **kwargs) -> bool: ...
    def getIgnoreDagHierarchy(self, **kwargs) -> bool: ...
    def getIgnoreHiddenAttribute(self, **kwargs) -> bool: ...
    def getIgnoreOutlinerColor(self, **kwargs) -> bool: ...
    def getIsChildSelected(self, **kwargs) -> Any: ...
    def getIsSet(self, **kwargs) -> Any: ...
    def getIsSetMember(self, **kwargs) -> Any: ...
    def getIsUfeItem(self, **kwargs) -> Any: ...
    def getLongNames(self, **kwargs) -> bool: ...
    def getMainListConnection(self, **kwargs) -> str: ...
    def getMapMotionTrails(self, **kwargs) -> bool: ...
    def getMasterOutliner(self, **kwargs) -> str: ...
    def getNiceNames(self, **kwargs) -> bool: ...
    def getObject(self, **kwargs) -> Any: ...
    def getOrganizeByClip(self, **kwargs) -> bool: ...
    def getOrganizeByLayer(self, **kwargs) -> bool: ...
    def getPanel(self, **kwargs) -> Any: ...
    def getParentObject(self, **kwargs) -> Any: ...
    def getPinPlug(self, **kwargs) -> _general.PyNode: ...
    def getRenderFilterActive(self, **kwargs) -> Any: ...
    def getRenderFilterIndex(self, **kwargs) -> int: ...
    def getRenderFilterVisible(self, **kwargs) -> bool: ...
    def getSelectCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getSelectionConnection(self, **kwargs) -> str: ...
    def getSetFilter(self, **kwargs) -> str: ...
    def getSetsIgnoreFilters(self, **kwargs) -> bool: ...
    def getShowAnimCurvesOnly(self, **kwargs) -> bool: ...
    def getShowAnimLayerWeight(self, **kwargs) -> bool: ...
    def getShowAssets(self, **kwargs) -> bool: ...
    def getShowAssignedMaterials(self, **kwargs) -> bool: ...
    def getShowAttrValues(self, **kwargs) -> bool: ...
    def getShowAttributes(self, **kwargs) -> bool: ...
    def getShowCompounds(self, **kwargs) -> bool: ...
    def getShowConnected(self, **kwargs) -> bool: ...
    def getShowContainedOnly(self, **kwargs) -> bool: ...
    def getShowContainerContents(self, **kwargs) -> bool: ...
    def getShowDagOnly(self, **kwargs) -> bool: ...
    def getShowLeafs(self, **kwargs) -> bool: ...
    def getShowMuteInfo(self, **kwargs) -> bool: ...
    def getShowNamespace(self, **kwargs) -> bool: ...
    def getShowNumericAttrsOnly(self, **kwargs) -> bool: ...
    def getShowParentContainers(self, **kwargs) -> bool: ...
    def getShowPinIcons(self, **kwargs) -> bool: ...
    def getShowPublishedAsConnected(self, **kwargs) -> bool: ...
    def getShowReferenceMembers(self, **kwargs) -> bool: ...
    def getShowReferenceNodes(self, **kwargs) -> bool: ...
    def getShowSetMembers(self, **kwargs) -> bool: ...
    def getShowShapes(self, **kwargs) -> bool: ...
    def getShowTextureNodesOnly(self, **kwargs) -> bool: ...
    def getShowTimeEditor(self, **kwargs) -> bool: ...
    def getShowUVAttrsOnly(self, **kwargs) -> bool: ...
    def getShowUnitlessCurves(self, **kwargs) -> bool: ...
    def getShowUpstreamCurves(self, **kwargs) -> bool: ...
    def getSortOrder(self, **kwargs) -> str: ...
    def getStateString(self, **kwargs) -> Any: ...
    def getTransmitFilters(self, **kwargs) -> bool: ...
    def getUfeFilter(self, **kwargs) -> Tuple[str, str]: ...
    def getUfeFilterValue(self, **kwargs) -> bool: ...
    def lockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def refresh(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def removeFromCurrentSet(self, val: int = ..., **kwargs: Any) -> None: ...
    def renameItem(self, val: int = ..., **kwargs: Any) -> None: ...
    def renameSelectedItem(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def selectionOrder(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnimLayerFilterOptions(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAttrAlphaOrder(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAttrFilter(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAutoExpand(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAutoExpandAnimatedShapes(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAutoExpandLayers(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAutoSelectNewObjects(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setContainersIgnoreFilters(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDisplayMode(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDoNotSelectNewObjects(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDropIsParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEditAttrName(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setExpandConnections(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setExpandObjects(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFilter(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setForceMainConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHighlightActive(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHighlightConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHighlightSecondary(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setIgnoreDagHierarchy(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setIgnoreHiddenAttribute(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setIgnoreOutlinerColor(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setLongNames(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMainListConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMapMotionTrails(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMasterOutliner(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setNiceNames(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setOrganizeByClip(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setOrganizeByLayer(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setParent(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setPinPlug(self, val: Union[_general.PyNode, str] = ..., **kwargs: Any) -> None: ...
    def setRenderFilterIndex(self, val: int = ..., **kwargs: Any) -> None: ...
    def setRenderFilterVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSelectCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setSelectionConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSetFilter(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSetsIgnoreFilters(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowAnimCurvesOnly(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowAnimLayerWeight(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowAssets(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowAssignedMaterials(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowAttrValues(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowAttributes(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowCompounds(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowConnected(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowContainedOnly(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowContainerContents(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowDagOnly(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowLeafs(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowMuteInfo(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowNamespace(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowNumericAttrsOnly(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowParentContainers(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowPinIcons(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowPublishedAsConnected(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowReferenceMembers(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowReferenceNodes(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowSetMembers(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowShapes(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowTextureNodesOnly(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowTimeEditor(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowUVAttrsOnly(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowUnitlessCurves(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setShowUpstreamCurves(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSortOrder(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setTransmitFilters(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setUfeFilter(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def setUfeFilterValue(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def showSelected(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unlockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unpinPlug(self, val: Union[_general.PyNode, str] = ..., **kwargs: Any) -> None: ...
    def updateMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class PalettePort(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def colorEdited(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getActualTotal(self, **kwargs) -> Any: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getColorEditable(self, **kwargs) -> bool: ...
    def getDimensions(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEditable(self, **kwargs) -> bool: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHsvValue(self, **kwargs) -> Tuple[int, int, float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRgbValue(self, **kwargs) -> Tuple[int, float, float, float]: ...
    def getSetCurCell(self, **kwargs) -> int: ...
    def getTransparent(self, **kwargs) -> int: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def redraw(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setColorEditable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEditable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setHsvValue(self, val: Tuple[int, int, float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRgbValue(self, val: Tuple[int, float, float, float] = ..., **kwargs: Any) -> None: ...
    def setSetCurCell(self, val: int = ..., **kwargs: Any) -> None: ...
    def setTransparent(self, val: int = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class BlendShapePanel(Panel):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def copy(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def createString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def editString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getBlendShapeEditor(self, **kwargs) -> Any: ...
    def getControl(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getIsUnique(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getMenuBarRepeatLast(self, **kwargs) -> bool: ...
    def getMenuBarVisible(self, **kwargs) -> bool: ...
    def getNeedsInit(self, **kwargs) -> bool: ...
    def getPopupMenuProcedure(self, **kwargs) -> Union[str, Callable]: ...
    def getTearOff(self, **kwargs) -> bool: ...
    def init(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def replacePanel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMenuBarRepeatLast(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMenuBarVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNeedsInit(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPopupMenuProcedure(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setTearOff(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def tearOffRestore(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class DevicePanel(Panel):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def copy(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def createString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def editString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getControl(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getIsUnique(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getMenuBarRepeatLast(self, **kwargs) -> bool: ...
    def getMenuBarVisible(self, **kwargs) -> bool: ...
    def getNeedsInit(self, **kwargs) -> bool: ...
    def getPopupMenuProcedure(self, **kwargs) -> Union[str, Callable]: ...
    def getTearOff(self, **kwargs) -> bool: ...
    def init(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def replacePanel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMenuBarRepeatLast(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMenuBarVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNeedsInit(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPopupMenuProcedure(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setTearOff(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def tearOffRestore(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class DynRelEdPanel(Panel):
    __melui__: str

class HardwareRenderPanel(Panel):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def copy(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def createString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def editString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getCamera(self, **kwargs) -> str: ...
    def getControl(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getGlRenderEditor(self, **kwargs) -> Any: ...
    def getIsUnique(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getMenuBarRepeatLast(self, **kwargs) -> bool: ...
    def getMenuBarVisible(self, **kwargs) -> bool: ...
    def getNeedsInit(self, **kwargs) -> bool: ...
    def getPopupMenuProcedure(self, **kwargs) -> Union[str, Callable]: ...
    def getTearOff(self, **kwargs) -> bool: ...
    def init(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def replacePanel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setCamera(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMenuBarRepeatLast(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMenuBarVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNeedsInit(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPopupMenuProcedure(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setTearOff(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def tearOffRestore(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class HyperPanel(Panel):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def copy(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def createString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def editString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getControl(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getHyperEditor(self, **kwargs) -> Any: ...
    def getIsUnique(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getMenuBarRepeatLast(self, **kwargs) -> bool: ...
    def getMenuBarVisible(self, **kwargs) -> bool: ...
    def getNeedsInit(self, **kwargs) -> bool: ...
    def getPopupMenuProcedure(self, **kwargs) -> Union[str, Callable]: ...
    def getTearOff(self, **kwargs) -> bool: ...
    def init(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def replacePanel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMenuBarRepeatLast(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMenuBarVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNeedsInit(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPopupMenuProcedure(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setTearOff(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def tearOffRestore(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class ModelPanel(Panel):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def copy(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def createString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def editString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getBarLayout(self, **kwargs) -> Any: ...
    def getCamera(self, **kwargs) -> str: ...
    def getControl(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getIsUnique(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getMenuBarRepeatLast(self, **kwargs) -> bool: ...
    def getMenuBarVisible(self, **kwargs) -> bool: ...
    def getModelEditor(self, **kwargs) -> Any: ...
    def getNeedsInit(self, **kwargs) -> bool: ...
    def getPopupMenuProcedure(self, **kwargs) -> Union[str, Callable]: ...
    def getTearOff(self, **kwargs) -> bool: ...
    def init(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def replacePanel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setCamera(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMenuBarRepeatLast(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMenuBarVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNeedsInit(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPopupMenuProcedure(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setTearOff(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def tearOffRestore(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class OutlinerPanel(Panel):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def copy(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def createString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def editString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getControl(self, **kwargs) -> Any: ...
    def getDivider(self, **kwargs) -> int: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getIsUnique(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getMenuBarRepeatLast(self, **kwargs) -> bool: ...
    def getMenuBarVisible(self, **kwargs) -> bool: ...
    def getNeedsInit(self, **kwargs) -> bool: ...
    def getOutlinerEditor(self, **kwargs) -> Any: ...
    def getPopupMenuProcedure(self, **kwargs) -> Union[str, Callable]: ...
    def getTearOff(self, **kwargs) -> bool: ...
    def init(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def replacePanel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDivider(self, val: int = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMenuBarRepeatLast(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMenuBarVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNeedsInit(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPopupMenuProcedure(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setTearOff(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def tearOffRestore(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class ScriptedPanel(Panel):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def copy(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def createString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def editString(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getControl(self, **kwargs) -> Any: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getIsUnique(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getMenuBarRepeatLast(self, **kwargs) -> bool: ...
    def getMenuBarVisible(self, **kwargs) -> bool: ...
    def getNeedsInit(self, **kwargs) -> bool: ...
    def getPopupMenuProcedure(self, **kwargs) -> Union[str, Callable]: ...
    def getTearOff(self, **kwargs) -> bool: ...
    def getType(self, **kwargs) -> Any: ...
    def init(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def replacePanel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMenuBarRepeatLast(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMenuBarVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setNeedsInit(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPopupMenuProcedure(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setTearOff(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def tearOffRestore(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class PromptDialog(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def getText(self, **kwargs) -> Any: ...

class RadioButton(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAlign(self, **kwargs) -> str: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getData(self, **kwargs) -> int: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEditable(self, **kwargs) -> bool: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRecomputeSize(self, **kwargs) -> bool: ...
    def getSelect(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def offCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def onCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setAlign(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setData(self, val: int = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEditable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRecomputeSize(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSelect(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class RadioCollection(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def getCollectionItemArray(self, **kwargs) -> Any: ...
    def getGl(self, **kwargs) -> Any: ...
    def getNumberOfCollectionItems(self, **kwargs) -> Any: ...
    def getSelect(self, **kwargs) -> str: ...
    def setSelect(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class RadioMenuItemCollection(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def getGl(self, **kwargs) -> Any: ...

class RenderLayerButton(PyUI):
    __melui__: str

class RenderWindowEditor(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def colorManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def getAutoResize(self, **kwargs) -> bool: ...
    def getBlendMode(self, **kwargs) -> int: ...
    def getCaption(self, **kwargs) -> str: ...
    def getChangeCommand(self, **kwargs) -> Tuple[str, str, str, str]: ...
    def getClear(self, **kwargs) -> Tuple[int, int, float, float, float]: ...
    def getCmEnabled(self, **kwargs) -> bool: ...
    def getCompDisplay(self, **kwargs) -> int: ...
    def getCompImageFile(self, **kwargs) -> str: ...
    def getControl(self, **kwargs) -> Any: ...
    def getCurrentCamera(self, **kwargs) -> str: ...
    def getCurrentCameraRig(self, **kwargs) -> str: ...
    def getDisplayImage(self, **kwargs) -> int: ...
    def getDisplayImageViewCount(self, **kwargs) -> Any: ...
    def getDisplayStyle(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getDoubleBuffer(self, **kwargs) -> bool: ...
    def getDrawAxis(self, **kwargs) -> bool: ...
    def getEditorName(self, **kwargs) -> Any: ...
    def getExposure(self, **kwargs) -> float: ...
    def getFilter(self, **kwargs) -> str: ...
    def getForceMainConnection(self, **kwargs) -> str: ...
    def getFrameImage(self, **kwargs) -> bool: ...
    def getFrameRegion(self, **kwargs) -> bool: ...
    def getGamma(self, **kwargs) -> float: ...
    def getHighlightConnection(self, **kwargs) -> str: ...
    def getMainListConnection(self, **kwargs) -> str: ...
    def getMarquee(self, **kwargs) -> Tuple[float, float, float, float]: ...
    def getNbImages(self, **kwargs) -> Any: ...
    def getPanel(self, **kwargs) -> Any: ...
    def getPcaption(self, **kwargs) -> str: ...
    def getRealSize(self, **kwargs) -> bool: ...
    def getResetRegion(self, **kwargs) -> bool: ...
    def getScaleBlue(self, **kwargs) -> float: ...
    def getScaleGreen(self, **kwargs) -> float: ...
    def getScaleRed(self, **kwargs) -> float: ...
    def getSelectionConnection(self, **kwargs) -> str: ...
    def getShowRegion(self, **kwargs) -> Tuple[int, int]: ...
    def getSingleBuffer(self, **kwargs) -> bool: ...
    def getSnapshot(self, **kwargs) -> Tuple[str, int, int]: ...
    def getSnapshotMode(self, **kwargs) -> bool: ...
    def getStateString(self, **kwargs) -> Any: ...
    def getStereo(self, **kwargs) -> int: ...
    def getStereoImageOrientation(self, **kwargs) -> Tuple[str, str]: ...
    def getStereoMode(self, **kwargs) -> str: ...
    def getToggle(self, **kwargs) -> bool: ...
    def getViewImageCount(self, **kwargs) -> int: ...
    def getViewTransformName(self, **kwargs) -> str: ...
    def loadImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def lockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def nextViewImage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def outputColorManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def refresh(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def removeAllImages(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def removeImage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def resetViewImage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def saveImage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAutoResize(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setBlendMode(self, val: int = ..., **kwargs: Any) -> None: ...
    def setCaption(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setChangeCommand(self, val: Tuple[str, str, str, str] = ..., **kwargs: Any) -> None: ...
    def setClear(self, val: Tuple[int, int, float, float, float] = ..., **kwargs: Any) -> None: ...
    def setCmEnabled(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setCompDisplay(self, val: int = ..., **kwargs: Any) -> None: ...
    def setCompImageFile(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setCurrentCamera(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setCurrentCameraRig(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDisplayImage(self, val: int = ..., **kwargs: Any) -> None: ...
    def setDisplayStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDoubleBuffer(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDrawAxis(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setExposure(self, val: float = ..., **kwargs: Any) -> None: ...
    def setFilter(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setForceMainConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFrameImage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFrameRegion(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setGamma(self, val: float = ..., **kwargs: Any) -> None: ...
    def setHighlightConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMainListConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setMarquee(self, val: Tuple[float, float, float, float] = ..., **kwargs: Any) -> None: ...
    def setParent(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setPcaption(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setRealSize(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setResetRegion(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setScaleBlue(self, val: float = ..., **kwargs: Any) -> None: ...
    def setScaleGreen(self, val: float = ..., **kwargs: Any) -> None: ...
    def setScaleRed(self, val: float = ..., **kwargs: Any) -> None: ...
    def setSelectionConnection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setShowRegion(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def setSingleBuffer(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSnapshot(self, val: Tuple[str, int, int] = ..., **kwargs: Any) -> None: ...
    def setSnapshotMode(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setStereo(self, val: int = ..., **kwargs: Any) -> None: ...
    def setStereoImageOrientation(self, val: Tuple[str, str] = ..., **kwargs: Any) -> None: ...
    def setStereoMode(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setToggle(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setViewImageCount(self, val: int = ..., **kwargs: Any) -> None: ...
    def setViewTransformName(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def unParent(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def unlockMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def updateMainConnection(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def writeImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class ScriptTable(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def afterCellChangedCmd(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def cellBackgroundColorCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def cellChangedCmd(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def cellForegroundColorCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def clearRow(self, val: int = ..., **kwargs: Any) -> None: ...
    def clearTable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def columnFilter(self, val: Tuple[int, str] = ..., **kwargs: Any) -> None: ...
    def columnWidth(self, val: Union[Tuple[int, int], List[Tuple[int, int]]] = ..., **kwargs: Any) -> None: ...
    def deleteRow(self, val: int = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getCellCmd(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getCellIndex(self, **kwargs) -> Tuple[int, int]: ...
    def getCellValue(self, **kwargs) -> str: ...
    def getColumns(self, **kwargs) -> int: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEditable(self, **kwargs) -> bool: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getExcludingHeaders(self, **kwargs) -> Any: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMultiEditEnabled(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRowHeight(self, **kwargs) -> int: ...
    def getRows(self, **kwargs) -> int: ...
    def getSelectedCells(self, **kwargs) -> int: ...
    def getSelectedColumns(self, **kwargs) -> int: ...
    def getSelectedRow(self, **kwargs) -> Any: ...
    def getSelectedRows(self, **kwargs) -> int: ...
    def getSelectionBehavior(self, **kwargs) -> int: ...
    def getSelectionMode(self, **kwargs) -> int: ...
    def getSortEnabled(self, **kwargs) -> bool: ...
    def getUnderPointerColumn(self, **kwargs) -> Any: ...
    def getUnderPointerRow(self, **kwargs) -> Any: ...
    def getUseDoubleClickEdit(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def insertRow(self, val: int = ..., **kwargs: Any) -> None: ...
    def label(self, val: Union[Tuple[int, str], List[Tuple[int, str]]] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def rowsRemovedCmd(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def rowsToBeRemovedCmd(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def selectionChangedCmd(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setCellIndex(self, val: Tuple[int, int] = ..., **kwargs: Any) -> None: ...
    def setCellValue(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setColumns(self, val: int = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEditable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMultiEditEnabled(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRowHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setRows(self, val: int = ..., **kwargs: Any) -> None: ...
    def setSelectedCells(self, val: int = ..., **kwargs: Any) -> None: ...
    def setSelectedColumns(self, val: int = ..., **kwargs: Any) -> None: ...
    def setSelectedRows(self, val: int = ..., **kwargs: Any) -> None: ...
    def setSelectionBehavior(self, val: int = ..., **kwargs: Any) -> None: ...
    def setSelectionMode(self, val: int = ..., **kwargs: Any) -> None: ...
    def setSortEnabled(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setUseDoubleClickEdit(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class ScriptedPanelType(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def getAddCallback(self, **kwargs) -> str: ...
    def getCopyStateCallback(self, **kwargs) -> str: ...
    def getCreateCallback(self, **kwargs) -> str: ...
    def getCustomView(self, **kwargs) -> bool: ...
    def getDeleteCallback(self, **kwargs) -> str: ...
    def getHotkeyCtxClient(self, **kwargs) -> str: ...
    def getInitCallback(self, **kwargs) -> str: ...
    def getLabel(self, **kwargs) -> str: ...
    def getObsolete(self, **kwargs) -> bool: ...
    def getRemoveCallback(self, **kwargs) -> str: ...
    def getRetainOnFileOpen(self, **kwargs) -> bool: ...
    def getSaveStateCallback(self, **kwargs) -> str: ...
    def getUnique(self, **kwargs) -> bool: ...
    def setAddCallback(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setCopyStateCallback(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setCreateCallback(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setCustomView(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDeleteCallback(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHotkeyCtxClient(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setInitCallback(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setObsolete(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRemoveCallback(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setRetainOnFileOpen(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setSaveStateCallback(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setUnique(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...

class ScrollField(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def clear(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def command(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def enterCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEditable(self, **kwargs) -> bool: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFont(self, **kwargs) -> str: ...
    def getFontPointSize(self, **kwargs) -> int: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getInsertionPosition(self, **kwargs) -> int: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfLines(self, **kwargs) -> Any: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getSelection(self, **kwargs) -> Any: ...
    def getText(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def insertText(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def keyPressCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEditable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFont(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFontPointSize(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setInsertionPosition(self, val: int = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setText(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class Separator(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHorizontal(self, **kwargs) -> Any: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getStyle(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class ShelfButton(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAlign(self, **kwargs) -> str: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getCommandRepeatable(self, **kwargs) -> bool: ...
    def getDisabledImage(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getDoubleClickCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableCommandRepeat(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFlat(self, **kwargs) -> bool: ...
    def getFlexibleWidthType(self, **kwargs) -> int: ...
    def getFlexibleWidthValue(self, **kwargs) -> int: ...
    def getFlipX(self, **kwargs) -> bool: ...
    def getFlipY(self, **kwargs) -> bool: ...
    def getFont(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHighlightImage(self, **kwargs) -> str: ...
    def getImage(self, **kwargs) -> str: ...
    def getImage1(self, **kwargs) -> str: ...
    def getImage2(self, **kwargs) -> str: ...
    def getImage3(self, **kwargs) -> str: ...
    def getImageOverlayLabel(self, **kwargs) -> str: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getLabelOffset(self, **kwargs) -> int: ...
    def getLtVersion(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getMarginHeight(self, **kwargs) -> int: ...
    def getMarginWidth(self, **kwargs) -> int: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getOverlayLabelBackColor(self, **kwargs) -> Tuple[float, float, float, float]: ...
    def getOverlayLabelColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRotation(self, **kwargs) -> float: ...
    def getSelectionImage(self, **kwargs) -> str: ...
    def getSourceType(self, **kwargs) -> str: ...
    def getStyle(self, **kwargs) -> str: ...
    def getUseAlpha(self, **kwargs) -> bool: ...
    def getVersion(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def handleNodeDropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def labelEditingCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def menuItem(self, val: Union[Tuple[str, str], List[Tuple[str, str]]] = ..., **kwargs: Any) -> None: ...
    def menuItemPython(self, val: Union[int, List[int]] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def scaleIcon(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAlign(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setCommandRepeatable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDisabledImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDoubleClickCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableCommandRepeat(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlat(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlexibleWidthType(self, val: int = ..., **kwargs: Any) -> None: ...
    def setFlexibleWidthValue(self, val: int = ..., **kwargs: Any) -> None: ...
    def setFlipX(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFlipY(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFont(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setHighlightImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage1(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage2(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage3(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImageOverlayLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLabelOffset(self, val: int = ..., **kwargs: Any) -> None: ...
    def setLtVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setMarginHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setMarginWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def setOverlayLabelBackColor(self, val: Tuple[float, float, float, float] = ..., **kwargs: Any) -> None: ...
    def setOverlayLabelColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRotation(self, val: float = ..., **kwargs: Any) -> None: ...
    def setSelectionImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setSourceType(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setStyle(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setUseAlpha(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class ShellField(PyUI):
    __melui__: str

class SymbolButton(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getImage(self, **kwargs) -> str: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class SymbolCheckBox(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDisableOffImage(self, **kwargs) -> str: ...
    def getDisableOnImage(self, **kwargs) -> str: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getImage(self, **kwargs) -> str: ...
    def getInnerMargin(self, **kwargs) -> bool: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLtVersion(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getOffImage(self, **kwargs) -> str: ...
    def getOnImage(self, **kwargs) -> str: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getValue(self, **kwargs) -> bool: ...
    def getVersion(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def offCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def onCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDisableOffImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDisableOnImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setInnerMargin(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setLtVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setOffImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setOnImage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setValue(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class Text(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropRectCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAlign(self, **kwargs) -> str: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFont(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getHyperlink(self, **kwargs) -> bool: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLabel(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getRecomputeSize(self, **kwargs) -> bool: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def getWordWrap(self, **kwargs) -> Any: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAlign(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFont(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setHyperlink(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setRecomputeSize(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class TextCurves(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str

class TextField(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def enterCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAlwaysInvokeEnterCommandOnReturn(self, **kwargs) -> bool: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDisableButtons(self, **kwargs) -> bool: ...
    def getDisableClearButton(self, **kwargs) -> bool: ...
    def getDisableHistoryButton(self, **kwargs) -> bool: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getDrawInactiveFrame(self, **kwargs) -> bool: ...
    def getEditable(self, **kwargs) -> bool: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFileName(self, **kwargs) -> str: ...
    def getFont(self, **kwargs) -> str: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getInsertionPosition(self, **kwargs) -> int: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPlaceholderText(self, **kwargs) -> str: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getText(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def insertText(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def receiveFocusCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setAlwaysInvokeEnterCommandOnReturn(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDisableButtons(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDisableClearButton(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDisableHistoryButton(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setDrawInactiveFrame(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEditable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setFileName(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setFont(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setInsertionPosition(self, val: int = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPlaceholderText(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setText(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def textChangedCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...

class ToolButton(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def changeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def collection(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def doubleClickCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dragCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def dropCallback(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def getAllowMultipleTools(self, **kwargs) -> Any: ...
    def getAnnotation(self, **kwargs) -> str: ...
    def getBackgroundColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getDocTag(self, **kwargs) -> str: ...
    def getEnable(self, **kwargs) -> bool: ...
    def getEnableBackground(self, **kwargs) -> bool: ...
    def getEnableKeyboardFocus(self, **kwargs) -> bool: ...
    def getFullPathName(self, **kwargs) -> Any: ...
    def getHeight(self, **kwargs) -> int: ...
    def getHighlightColor(self, **kwargs) -> Tuple[float, float, float]: ...
    def getImage1(self, **kwargs) -> str: ...
    def getImage2(self, **kwargs) -> str: ...
    def getImage3(self, **kwargs) -> str: ...
    def getImageOverlayLabel(self, **kwargs) -> str: ...
    def getIsObscured(self, **kwargs) -> Any: ...
    def getLtVersion(self, **kwargs) -> str: ...
    def getManage(self, **kwargs) -> bool: ...
    def getNumberOfPopupMenus(self, **kwargs) -> Any: ...
    def getPopupIndicatorVisible(self, **kwargs) -> bool: ...
    def getPopupMenuArray(self, **kwargs) -> Any: ...
    def getPreventOverride(self, **kwargs) -> bool: ...
    def getTool(self, **kwargs) -> str: ...
    def getToolArray(self, **kwargs) -> Any: ...
    def getToolCount(self, **kwargs) -> Any: ...
    def getToolImage1(self, **kwargs) -> Tuple[str, str]: ...
    def getToolImage2(self, **kwargs) -> Tuple[str, str]: ...
    def getToolImage3(self, **kwargs) -> Tuple[str, str]: ...
    def getVersion(self, **kwargs) -> str: ...
    def getVisible(self, **kwargs) -> bool: ...
    def getVisibleChangeCommand(self, **kwargs) -> Union[str, Callable]: ...
    def getWidth(self, **kwargs) -> int: ...
    def noBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def offCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def onCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def select(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setAnnotation(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setBackgroundColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setDocTag(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setEnable(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableBackground(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setEnableKeyboardFocus(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setHeight(self, val: int = ..., **kwargs: Any) -> None: ...
    def setHighlightColor(self, val: Tuple[float, float, float] = ..., **kwargs: Any) -> None: ...
    def setImage1(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage2(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImage3(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setImageOverlayLabel(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setLtVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setManage(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPopupIndicatorVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setPreventOverride(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setTool(self, val: Union[str, List[str]] = ..., **kwargs: Any) -> None: ...
    def setToolImage1(self, val: Union[Tuple[str, str], List[Tuple[str, str]]] = ..., **kwargs: Any) -> None: ...
    def setToolImage2(self, val: Union[Tuple[str, str], List[Tuple[str, str]]] = ..., **kwargs: Any) -> None: ...
    def setToolImage3(self, val: Union[Tuple[str, str], List[Tuple[str, str]]] = ..., **kwargs: Any) -> None: ...
    def setVersion(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def setVisible(self, val: Union[bool, int] = ..., **kwargs: Any) -> None: ...
    def setVisibleChangeCommand(self, val: Union[str, Callable] = ..., **kwargs: Any) -> None: ...
    def setWidth(self, val: int = ..., **kwargs: Any) -> None: ...
    def statusBarMessage(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...
    def style(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class ToolCollection(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def getCollectionItemArray(self, **kwargs) -> Any: ...
    def getGl(self, **kwargs) -> Any: ...
    def getNumberOfCollectionItems(self, **kwargs) -> Any: ...
    def getSelect(self, **kwargs) -> str: ...
    def setSelect(self, val: Union[_util.ProxyUnicode, str] = ..., **kwargs: Any) -> None: ...

class Visor(PyUI):
    __melcmd__: Incomplete
    __melcmd_isinfo__ = False
    __melcmdname__: str
    __melui__: str
    def getAddFolder(self, **kwargs) -> Any: ...
    def getAddNodes(self, **kwargs) -> Any: ...
    def getAllowPanningInX(self, **kwargs) -> Any: ...
    def getAllowPanningInY(self, **kwargs) -> Any: ...
    def getAllowZooming(self, **kwargs) -> Any: ...
    def getCommand(self, **kwargs) -> Any: ...
    def getDeleteFolder(self, **kwargs) -> Any: ...
    def getEditFolder(self, **kwargs) -> Any: ...
    def getFolderList(self, **kwargs) -> Any: ...
    def getMenu(self, **kwargs) -> Any: ...
    def getNodeType(self, **kwargs) -> Any: ...
    def getOpenDirectories(self, **kwargs) -> Any: ...
    def getOpenFolder(self, **kwargs) -> Any: ...
    def getPath(self, **kwargs) -> Any: ...
    def getPopupMenuScript(self, **kwargs) -> Any: ...
    def getRebuild(self, **kwargs) -> Any: ...
    def getRefreshAllSwatches(self, **kwargs) -> Any: ...
    def getRefreshSelectedSwatches(self, **kwargs) -> Any: ...
    def getRefreshSwatch(self, **kwargs) -> Any: ...
    def getReset(self, **kwargs) -> Any: ...
    def getRestrictPanAndZoom(self, **kwargs) -> Any: ...
    def getSaveSwatches(self, **kwargs) -> Any: ...
    def getScrollBar(self, **kwargs) -> Any: ...
    def getScrollPercent(self, **kwargs) -> Any: ...
    def getSelectedGadgets(self, **kwargs) -> Any: ...
    def getShowDividers(self, **kwargs) -> Any: ...
    def getShowFiles(self, **kwargs) -> Any: ...
    def getShowFolders(self, **kwargs) -> Any: ...
    def getShowNodes(self, **kwargs) -> Any: ...
    def getStateString(self, **kwargs) -> Any: ...
    def getStyle(self, **kwargs) -> Any: ...
    def getTransform(self, **kwargs) -> Any: ...
    def getType(self, **kwargs) -> Any: ...
